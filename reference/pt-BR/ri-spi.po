# Language pt-BR translations for Introduction_to_Web_Beans package.
# Automatically generated, 2009.
#
msgid ""
msgstr ""
"Project-Id-Version: Introduction_to_Web_Beans VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-08 14:07+0000\n"
"PO-Revision-Date: 2009-01-06 11:30+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: ri-spi.xml:4
#, no-c-format
msgid "Integrating the Web Beans RI into other environments"
msgstr ""

#. Tag: para
#: ri-spi.xml:6
#, no-c-format
msgid ""
"Currently the Web Beans RI only runs in JBoss AS 5; integrating the RI into "
"other EE environments (for example another application server like "
"Glassfish), into a servlet container (like Tomcat), or with an Embedded "
"EJB3.1 implementation is fairly easy. In this Appendix we will briefly "
"discuss the steps needed."
msgstr ""

#. Tag: para
#: ri-spi.xml:15
#, no-c-format
msgid ""
"It should be possible to run Web Beans in an SE environment, but you'll to "
"do more work, adding your own contexts and lifecycle. The Web Beans RI "
"currently doesn't expose lifecycle extension points, so you would have to "
"code directly against Web Beans RI classes."
msgstr ""

#. Tag: title
#: ri-spi.xml:24
#, no-c-format
msgid "The Web Beans RI SPI"
msgstr ""

#. Tag: para
#: ri-spi.xml:26
#, no-c-format
msgid ""
"The Web Beans SPI is located in <literal>webbeans-ri-spi</literal> module, "
"and packaged as <literal>webbeans-ri-spi.jar</literal>. Some SPIs are "
"optional, if you need to override the default behavior, others are required."
msgstr ""

#. Tag: para
#: ri-spi.xml:33
#, no-c-format
msgid ""
"You can specify the implementation of an SPI either as a system property, or "
"in a properties file <literal>META-INF/web-beans-ri.properties</literal>. "
"All property names are the fully qualified class name of the implemented "
"interface; all property values are the fully qualified class name of the "
"implementation class."
msgstr ""

#. Tag: title
#: ri-spi.xml:43
#, no-c-format
msgid "Web Bean Discovery"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:45
#, no-c-format
msgid ""
"<![CDATA[public interface WebBeanDiscovery {\n"
"   /**\n"
"    * Gets list of all classes in classpath archives with web-beans.xml "
"files\n"
"    * \n"
"    * @return An iterable over the classes \n"
"    */\n"
"   public Iterable<Class<?>> discoverWebBeanClasses();\n"
"   \n"
"   /**\n"
"    * Gets a list of all web-beans.xml files in the app classpath\n"
"    * \n"
"    * @return An iterable over the web-beans.xml files \n"
"    */\n"
"   public Iterable<URL> discoverWebBeansXml();\n"
"   \n"
"   /**\n"
"    * Gets a descriptor for each EJB in the application\n"
"    * \n"
"    * @return The bean class to descriptor map \n"
"    */\n"
"   public Iterable<EjbDescriptor<?>> discoverEjbs();\n"
"   \n"
"}]]>"
msgstr ""

#. Tag: para
#: ri-spi.xml:47
#, no-c-format
msgid ""
"The discovery of Web Bean classes and <literal>web-bean.xml</literal> files "
"is self-explanatory (the algorithm is described in Section 11.1 of the JSR-"
"299 specification, and isn't repeated here)."
msgstr ""

#. Tag: para
#: ri-spi.xml:53
#, no-c-format
msgid ""
"The Web Beans RI also delegates EJB3 bean discovery to the container so that "
"it doesn't have to scan for EJB3 annotations or parse <literal>ejb-jar.xml</"
"literal>. For each EJB in the application an EJBDescriptor should be "
"discovered:"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:60
#, no-c-format
msgid ""
"<![CDATA[public interface EjbDescriptor<T> {\n"
"   \n"
"   /**\n"
"    * Gets the EJB type\n"
"    * \n"
"    * @return The EJB Bean class\n"
"    */\n"
"   public Class<T> getType();\n"
"\n"
"   /**\n"
"    * Gets the local business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the local business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getLocalBusinessInterfaces"
"();\n"
"   \n"
"   /**\n"
"    * Gets the remote business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the remote business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> "
"getRemoteBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Get the remove methods of the EJB\n"
"    * \n"
"    * @return An iterator over the remove methods\n"
"    */\n"
"   public Iterable<Method> getRemoveMethods();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is stateless\n"
"    * \n"
"    * @return True if stateless, false otherwise\n"
"    */\n"
"   public boolean isStateless();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is a EJB 3.1 Singleton\n"
"    * \n"
"    * @return True if the bean is a singleton, false otherwise\n"
"    */\n"
"   public boolean isSingleton();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is stateful\n"
"    * \n"
"    * @return True if the bean is stateful, false otherwise\n"
"    */\n"
"   public boolean isStateful();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is and MDB\n"
"    * \n"
"    * @return True if the bean is an MDB, false otherwise\n"
"    */\n"
"   public boolean isMessageDriven();\n"
"\n"
"   /**\n"
"    * Gets the EJB name\n"
"    * \n"
"    * @return The name\n"
"    */\n"
"   public String getEjbName();\n"
"   \n"
"   /**\n"
"    * @return The JNDI string which can be used to lookup a proxy which \n"
"    * implements all local business interfaces \n"
"    * \n"
"    */\n"
"   public String getLocalJndiName();\n"
"   \n"
"}]]>"
msgstr ""

#. Tag: para
#: ri-spi.xml:62
#, no-c-format
msgid ""
"The contract described the JavaDoc is enough to implement an EJBDescriptor. "
"In addition to these two interfaces, there is "
"<literal>BusinessInterfaceDescriptor</literal> which represents a local "
"business interface (encapsulating the interface class and jndi name)."
msgstr ""

#. Tag: para
#: ri-spi.xml:69
#, no-c-format
msgid ""
"The Web Beans RI can be told to load your implementation of "
"<literal>WebBeanDiscovery</literal> using the property <literal>org.jboss."
"webbeans.bootstrap.WebBeanDiscovery</literal> with the fully qualified class "
"name as the value. For example:"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:76
#, no-c-format
msgid ""
"org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery=org.jboss.webbeans."
"integration.jbossas.WebBeanDiscoveryImpl"
msgstr ""

#. Tag: title
#: ri-spi.xml:80
#, no-c-format
msgid "JNDI"
msgstr ""

#. Tag: para
#: ri-spi.xml:82
#, no-c-format
msgid ""
"The Web Beans RI implements JNDI binding and lookup according to standards, "
"however you may want to alter the binding and lookup (for example in an "
"environment where JNDI isn't available). To do this, implement <literal>org."
"jboss.webbeans.spi.resources.Naming</literal>:"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:90
#, no-c-format
msgid ""
"<![CDATA[public interface Naming extends Serializable {\n"
"   \n"
"   /**\n"
"    * Typed JNDI lookup\n"
"    * \n"
"    * @param <T> The type\n"
"    * @param name The JNDI name\n"
"    * @param expectedType The expected type\n"
"    * @return The object\n"
"    */\n"
"   public <T> T lookup(String name, Class<? extends T> expectedType);\n"
"\n"
"   /**\n"
"    * Binds an item to JNDI\n"
"    * \n"
"    * @param key The key to bind under\n"
"    * @param value The item to bind\n"
"    */\n"
"   public void bind(String key, Object value);\n"
"   \n"
"}]]>"
msgstr ""

#. Tag: para
#: ri-spi.xml:92 ri-spi.xml:113
#, no-c-format
msgid "and tell the RI to use it:"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:96
#, no-c-format
msgid "org.jboss.webbeans.resources.spi.Naming=com.acme.MyNaming"
msgstr ""

#. Tag: title
#: ri-spi.xml:101
#, no-c-format
msgid "Resource loading"
msgstr ""

#. Tag: para
#: ri-spi.xml:103
#, no-c-format
msgid ""
"The Web Beans RI needs to load classes and resources from the classpath at "
"various times. By default, they are loaded from the same classloader that "
"was used to load the RI, however this may not be correct for some "
"environments. If this is case, you can implement <literal>org.jboss.webbeans."
"spi.ResourceLoader</literal>:"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:111
#, no-c-format
msgid ""
"<![CDATA[\n"
"         public interface ResourceLoader {\n"
"    \n"
"   /**\n"
"    * Creates a class from a given FQCN\n"
"    * \n"
"    * @param name The name of the clsas\n"
"    * @return The class\n"
"    */\n"
"   public Class<?> classForName(String name);\n"
"   \n"
"   /**\n"
"    * Gets a resource as a URL by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An URL to the resource\n"
"    */\n"
"   public URL getResource(String name);\n"
"   \n"
"   /**\n"
"    * Gets resources as URLs by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An iterable reference to the URLS\n"
"    */\n"
"   public Iterable<URL> getResources(String name);\n"
"   \n"
"}\n"
"         ]]>"
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:117
#, no-c-format
msgid "org.jboss.webbeans.resources.spi.ResourceLoader=com.acme.ResourceLoader"
msgstr ""

#. Tag: title
#: ri-spi.xml:124
#, no-c-format
msgid "The contract with the container"
msgstr ""

#. Tag: para
#: ri-spi.xml:126
#, no-c-format
msgid ""
"There are a number of requirements that the Web Beans RI places on the "
"container for correct functioning that fall outside implementation of APIs"
msgstr ""

#. Tag: term
#: ri-spi.xml:134
#, no-c-format
msgid "Classloader isolation"
msgstr ""

#. Tag: para
#: ri-spi.xml:138
#, no-c-format
msgid ""
"If you are integrating the Web Beans RI into an environment that supports "
"deployment of multiple applications, you must enable, automatically, or "
"through user configuation, classloader isolation for each Web Beans "
"application."
msgstr ""

#. Tag: term
#: ri-spi.xml:147
#, no-c-format
msgid "Servlet listener"
msgstr ""

#. Tag: para
#: ri-spi.xml:151
#, no-c-format
msgid ""
"If you are integrating the Web Beans into a Servlet environment you must "
"register <literal>org.jboss.webbeans.servlet.WebBeansListener</literal> as a "
"Servlet listener, either automatically, or through user configuration, for "
"each Web Beans application which uses Servlet."
msgstr ""

#. Tag: term
#: ri-spi.xml:162
#, no-c-format
msgid "Session Bean Interceptor"
msgstr ""

#. Tag: para
#: ri-spi.xml:166
#, no-c-format
msgid ""
"If you are integrating the Web Beans into an EJB environment you must "
"register <literal>org.jboss.webbeans.ejb.SessionBeanInterceptor</literal> as "
"a EJB interceptor for all EJBs in the application, either automatically, or "
"through user configuration, for each Web Beans application which uses "
"enterprise beans."
msgstr ""

#. Tag: term
#: ri-spi.xml:177
#, no-c-format
msgid "The <literal>webbeans-ri.jar</literal>"
msgstr ""

#. Tag: para
#: ri-spi.xml:181
#, no-c-format
msgid ""
"If you are integrating the Web Beans into an environment that supports "
"deployment of applications, you must insert the <literal>webbeans-ri.jar</"
"literal> into the applications isolated classloader. It cannot be loaded "
"from a shared classloader."
msgstr ""
