# Language ja-JP translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-12-19 20:26+0000\n"
"PO-Revision-Date: 2008-12-19 20:26+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#: part1.xml:5
#, no-c-format
msgid ""
"The Web Beans (JSR-299) specification defines a set of services for the Java "
"EE environment that makes applications much easier to develop. Web Beans "
"layers an enhanced lifecycle and interaction model over existing Java "
"component types including JavaBeans and Enterprise Java Beans. As a "
"complement to the traditional Java EE programming model, the Web Beans "
"services provide:"
msgstr "Web Beans (JSR-299) 仕様は、アプリケーションの開発をより簡単にする Java EE 環境の向けのサービスセットを定義し"
       "ます。Web Beans は、JavaBeans とエンタープライズ Java Beans を含む現存する Java コンポーネントのタイ"
       "プをまたがった拡張ライフサイクルと相互作用モデルの層を提供します。伝統的な Java EE プログラミングモデルを補足するものとして、"
       "Web Beans は以下のサービスを提供します:"

#. Tag: para
#: part1.xml:14
#, no-c-format
msgid ""
"an improved lifecycle for stateful components, bound to well-defined "
"<emphasis>contexts</emphasis>,"
msgstr "明確な <emphasis>コンテキスト (context)</emphasis> に括り付けられる、ステートフル"
       "コンポーネントのための改善されたライフサイクル"

#. Tag: para
#: part1.xml:18
#, no-c-format
msgid "a typesafe approach to <emphasis>dependency injection</emphasis>,"
msgstr "タイプセーフなアプローチによる <emphasis> 依存性注入 (dependency injection: DI)<"
       "/emphasis>"

#. Tag: para
#: part1.xml:21
#, no-c-format
msgid ""
"interaction via an <emphasis>event notification</emphasis> facility, and"
msgstr "<emphasis>イベント通知 (event notification)</emphasis> による相互作用"

#. Tag: para
#: part1.xml:25
#, no-c-format
msgid ""
"a better approach to binding <emphasis>interceptors</emphasis> to "
"components, along with a new kind of interceptor, called a "
"<emphasis>decorator</emphasis>, that is more appropriate for use in solving "
"business problems."
msgstr "コンポーネントへの <emphasis>インタセプタ (interceptor) </emphasis> のバイン"
       "ディングにおけるより良い手法と <emphasis>デコレータ (decorator)</emphasis> と呼"
       "ばれる新しい種類のインタセプタの導入、これによりビジネス上の問題を解決する際に使用するのがより適したものになります"

#. Tag: para
#: part1.xml:32
#, no-c-format
msgid ""
"Dependency injection, together with contextual lifecycle management, saves "
"the user of an unfamiliar API from having to ask and answer the following "
"questions:"
msgstr "コンテキスト依存ライフサイクル管理を利用した依存性注入は、ユーザがよく知らない API を使用する際に以下のような質問をしたりそれに答えた"
       "りする手間を省きます:"

#. Tag: para
#: part1.xml:38
#, no-c-format
msgid "what is the lifecycle of this object?"
msgstr "このオブジェクトのライフサイクルは何ですか?"

#. Tag: para
#: part1.xml:41
#, no-c-format
msgid "how many simultaneous clients can it have?"
msgstr "同時にいくつのクライアントがアクセスできますか?"

#. Tag: para
#: part1.xml:44
#, no-c-format
msgid "is it multithreaded?"
msgstr "マルチスレッド対応ですか?"

#. Tag: para
#: part1.xml:47
#, no-c-format
msgid "where can I get one from?"
msgstr "どこから取得することができますか?"

#. Tag: para
#: part1.xml:50
#, no-c-format
msgid "do I need to explicitly destroy it?"
msgstr "明示的に破棄する必要がありますか?"

#. Tag: para
#: part1.xml:53
#, no-c-format
msgid "where should I keep my reference to it when I'm not using it directly?"
msgstr "直接的に使用していないときに、それへのリファレンスはどこに保持すべきですか?"

#. Tag: para
#: part1.xml:57
#, no-c-format
msgid ""
"how can I add an indirection layer, so that the implementation of this "
"object can vary at deployment time?"
msgstr "このオブジェクトのインプリメンテーションをデプロイ時に変えることができるようにするために、間接的なレイヤをどのように追加することができます"
       "か?"

#. Tag: para
#: part1.xml:61
#, no-c-format
msgid "how should I go about sharing this object between other objects?"
msgstr "どのようにこのオブジェクトを他のオブジェクトとの間で共有すべきですか?"

#. Tag: para
#: part1.xml:65
#, no-c-format
msgid ""
"A Web Bean specifies only the type and semantics of other Web Beans it "
"depends upon. It need not be aware of the actual lifecycle, concrete "
"implementation, threading model or other clients of any Web Bean it depends "
"upon. Even better, the concrete implementation, lifecycle and threading "
"model of a Web Bean it depends upon may vary according to the deployment "
"scenario, without affecting any client."
msgstr "Web Bean は、それが依存する他の Web Bean のタイプとセマンティックスだけを指定します。依存する Web Bean の実際"
       "のライフサイクル、具体的なインプリメンテーション、スレッディングモデルあるいはその他のクライアントについては知っている必要はありません。さ"
       "らに優れたことに、依存する Web Bean の実際のライフサイクル、具体的なインプリメンテーション、スレッディングモデルは、いかなる他の"
       "クライアントにも影響せずに、デプロイメントシナリオによって入れ替えることができます。"

#. Tag: para
#: part1.xml:72
#, no-c-format
msgid ""
"Events, interceptors and decorators enhance the <emphasis>loose-coupling</"
"emphasis> that is inherent in this model:"
msgstr "イベントとインタセプタ、デコレータは、このモデルの生まれながらの性質である <emphasis>疎結合 (loose-"
       "coupling)</emphasis> を強化します:"

#. Tag: para
#: part1.xml:77
#, no-c-format
msgid ""
"<emphasis>event notifications</emphasis> decouple event producers from event "
"consumers,"
msgstr "<emphasis>イベント通知 (event notification)</emphasis> は イベント消費"
       "者 (producer プロデューサ) からイベント生産者 (consumer コンシューマ) を切り離します"

#. Tag: para
#: part1.xml:81
#, no-c-format
msgid ""
"<emphasis>interceptors</emphasis> decouple technical concerns from business "
"logic, and"
msgstr "<emphasis>インタセプタ (interceptor)</emphasis> ビジネスロジックから技術的な関"
       "心事を切り離します"

#. Tag: para
#: part1.xml:85
#, no-c-format
msgid ""
"<emphasis>decorators</emphasis> allow business concerns to be "
"compartmentalized."
msgstr "<emphasis>デコレータ (decorator)</emphasis> ビジネス関心事を細分化することを可能"
       "にします"

#. Tag: para
#: part1.xml:90
#, no-c-format
msgid ""
"Most importantly, Web Beans provides all these facilities in a "
"<emphasis>typesafe</emphasis> way. Web Beans never uses string-based "
"identifiers to determine how collaborating objects fit together. And XML, "
"though it remains an option, is rarely used. Instead, Web Beans uses the "
"typing information that is already available in the Java object model, "
"together with a new pattern, called <emphasis>binding annotations</"
"emphasis>, to wire together Web Beans, their dependencies, their "
"interceptors and decorators and their event consumers."
msgstr "最も重要なことは、これらすべての機能を Web Beans は <emphasis>タイプセーフ (typesafe)<"
       "/emphasis> な方法で提供することです。Web Beans は、どのオブジェクトが共同して動作するのに適合しているのかを決定"
       "するために、文字列 (String) ベースの識別子を一切使用しません。さらに、オプションとしては残っていますが、XML ファイルもほとん"
       "ど使用されません。その代わりに Web Beans は、既存の Java オブジェクトモデルで利用可能なタイプ情報と、<"
       "emphasis>バインディングアノテーション (binding annotation)</emphasis> と呼ばれ"
       "る新しいパターンを一緒に使用します。これにより、Web Beans とその依存関係にあるもの、インタセプタ、デコレータ、イベント消費者とが"
       "結び付けられます。"

#. Tag: para
#: part1.xml:100
#, no-c-format
msgid ""
"The Web Beans services are general and apply to the following types of "
"components that exist in the Java EE environment:"
msgstr "Web Beans サービスは汎用的なので、Java EE 環境にある以下のタイプのコンポーネントに適用できます:"

#. Tag: para
#: part1.xml:105
#, no-c-format
msgid "all JavaBeans,"
msgstr "すべてのJavaBeans"

#. Tag: para
#: part1.xml:108
#, no-c-format
msgid "all EJBs, and"
msgstr "すべてのEJB"

#. Tag: para
#: part1.xml:111
#, no-c-format
msgid "all Servlets."
msgstr "すべてのサーブレット"

#. Tag: para
#: part1.xml:115
#, no-c-format
msgid ""
"Web Beans even provides the necessary integration points so that other kinds "
"of components defined by future Java EE specifications or by non-standard "
"frameworks may be cleanly integrated with Web Beans, take advantage of the "
"Web Beans services, and interact with any other kind of Web Bean."
msgstr "さらに Web Beans は、他との連携の際に必要となるインテグレーションポイントを提供します。それゆえ将来の Java EE 仕様ある"
       "いは標準ではないフレームワークによって定義された他のコンポーネントが Web Beans ときれいに統合でき、Web Beans サービス"
       "を利用し、そして他のどんな種類の Web Beans とでも相互に連携することができます。"

#. Tag: para
#: part1.xml:120
#, no-c-format
msgid ""
"Web Beans was influenced by a number of existing Java frameworks, including "
"Seam, Guice and Spring. However, Web Beans has its own very distinct "
"character: more typesafe than Seam, more stateful and less XML-centric than "
"Spring, more web and enterprise-application capable than Guice."
msgstr "Web Beans は、Seam や Guice、Spring を含む多くの現存する Java フレームワークから影響を受けました。しか"
       "し、Web Beans はそれ自身とても特徴的な性質を持っています: Seam よりもタイプセーフであり、Spring よりもステートフル"
       "であって XML セントリックではなく、Guice よりも多くの Web アプリケーションとエンタープライズアプリケーション向けの機能があ"
       "ります。"

#. Tag: para
#: part1.xml:125
#, no-c-format
msgid ""
"Most importantly, Web Beans is a JCP standard that integrates cleanly with "
"Java EE, and with any Java SE environment where embeddable EJB Lite is "
"available."
msgstr "最も重要な点は、Web Beans は  JCP 標準であるので、Java EE 環境や、さらには 組み込み可能な EJB Lite を利"
       "用可能などんな Java SE 環境とでもきれいに統合できることです。"
