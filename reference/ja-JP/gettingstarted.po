# Language ja-JP translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-07-06 02:29+0000\n"
"PO-Revision-Date: 2008-12-19 20:26+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: gettingstarted.xml:4
#, no-c-format
msgid "Getting started with Web Beans, the Reference Implementation of JSR-299"
msgstr "JSR-299 参照実装 Web Beans を始めよう"

#. Tag: para
#: gettingstarted.xml:6
#, no-c-format
msgid ""
"The Web Beans is being developed at <ulink url=\"http://seamframework.org/"
"WebBeans\">the Seam project</ulink>. You can download the latest developer "
"release of Web Beans from the <ulink url=\"http://seamframework.org/Download"
"\">the downloads page</ulink>."
msgstr ""
"Web Beans は <ulink url=\"http://seamframework.org/WebBeans\"> Seam プロジェ"
"クト</ulink> で開発されています。Web Beans の開発者向け最新リリースは <ulink "
"url=\"http://seamframework.org/Download\">ダウンロードページ</ulink> からダウ"
"ンロードすることができます。"

#. Tag: para
#: gettingstarted.xml:13
#, no-c-format
msgid ""
"Web Beans comes with a two deployable example applications: "
"<literal>webbeans-numberguess</literal>, a war example, containing only "
"simple beans, and <literal>webbeans-translator</literal> an ear example, "
"containing enterprise beans. There are also two variations on the "
"numberguess example, the tomcat example (suitable for deployment to Tomcat) "
"and the jsf2 example, which you can use if you are running JSF2. To run the "
"examples you'll need the following:"
msgstr ""
"Web Beans は、2つのデプロイ可能なサンプルアプリケーションが一緒に提供されま"
"す:簡単な bean のみを含む war サンプルの <literal>webbeans-numberguess</"
"literal> とエンタープライズ beanを含む ear サンプルの <literal>webbeans-"
"translator</literal> です。また numberguess サンプルには2種類のサンプルがあり"
"ます。Tomcat サンプル(Tomcatへのデプロイに適している)と、JSF2 を実行させる場"
"合に使用できる JSF2 サンプルです。サンプルを実行するためには、以下のものが必"
"要です:"

#. Tag: para
#: gettingstarted.xml:25
#, no-c-format
msgid "the latest release of Web Beans,"
msgstr "Web Beans の最新リリース"

#. Tag: para
#: gettingstarted.xml:28
#, no-c-format
msgid "JBoss AS 5.0.1.GA, or"
msgstr "JBoss AS 5.0.1.GA あるいは"

#. Tag: para
#: gettingstarted.xml:31
#, no-c-format
msgid "Apache Tomcat 6.0.x, and"
msgstr "Apache Tomcat 6.0.x"

#. Tag: para
#: gettingstarted.xml:34
#, no-c-format
msgid "Ant 1.7.0."
msgstr "Ant 1.7.0"

#. Tag: title
#: gettingstarted.xml:39
#, no-c-format
msgid "Using JBoss AS 5"
msgstr "JBoss AS 5 の使用"

#. Tag: para
#: gettingstarted.xml:41
#, no-c-format
msgid ""
"You'll need to download JBoss AS 5.0.1.GA from <ulink url=\"http://www.jboss."
"org/jbossas/downloads/\">jboss.org</ulink>, and unzip it. For example:"
msgstr ""
"JBoss AS 5.0.1.GA は <ulink url=\"http://www.jboss.org/jbossas/downloads/"
"\">jboss.org</ulink> からダウンロードして展開する必要があります。例:"

#. Tag: programlisting
#: gettingstarted.xml:47
#, no-c-format
msgid ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/jboss-5.0.1.GA.zip]]>"
msgstr ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/jboss-5.0.1.GA.zip]]>"

#. Tag: para
#: gettingstarted.xml:49 gettingstarted.xml:177
#, no-c-format
msgid ""
"Next, download Web Beans from <ulink url=\"http://seamframework.org/Download"
"\">seamframework.org</ulink>, and unzip it. For example"
msgstr ""
"次に、Web Beans を <ulink url=\"http://seamframework.org/Download"
"\">seamframework.org</ulink> からダウンロードして展開してください。例:"

#. Tag: programlisting
#: gettingstarted.xml:55 gettingstarted.xml:183
#, no-c-format
msgid ""
"<![CDATA[$ cd ~/\n"
"$ unzip ~/webbeans-$VERSION.zip]]>"
msgstr ""
"<![CDATA[$ cd ~/\n"
"$ unzip ~/webbeans-$VERSION.zip]]>"

#. Tag: para
#: gettingstarted.xml:58
#, no-c-format
msgid ""
"Next, we need to tell Web Beans where JBoss is located. Edit <literal>jboss-"
"as/build.properties</literal> and set the <literal>jboss.home</literal> "
"property. For example:"
msgstr ""
"次に、Web Beans にどこに JBoss が置かれているのかを指定する必要があります。"
"<literal>jboss-as/build.properties</literal> を編集して <literal>jboss.home</"
"literal> プロパティを設定してください。例:"

#. Tag: programlisting
#: gettingstarted.xml:64
#, no-c-format
msgid "jboss.home=/Applications/jboss-5.0.1.GA"
msgstr "jboss.home=/Applications/jboss-5.0.1.GA"

#. Tag: para
#: gettingstarted.xml:66
#, no-c-format
msgid ""
"To install Web Beans, you'll need Ant 1.7.0 installed, and the "
"<literal>ANT_HOME</literal> environment variable set. For example:"
msgstr ""
"Web Beans をインストールするためには、Ant 1.7.0 をインストールし、"
"<literal>ANT_HOME</literal> 環境変数を設定する必要があります。例:"

#. Tag: para
#: gettingstarted.xml:72
#, no-c-format
msgid ""
"JBoss 5.1.0 comes with Web Beans built in, so there is no need to update the "
"server."
msgstr ""

#. Tag: programlisting
#: gettingstarted.xml:78
#, no-c-format
msgid ""
"$ unzip apache-ant-1.7.0.zip\n"
"$ export ANT_HOME=~/apache-ant-1.7.0"
msgstr ""
"$ unzip apache-ant-1.7.0.zip\n"
"$ export ANT_HOME=~/apache-ant-1.7.0"

#. Tag: para
#: gettingstarted.xml:80
#, no-c-format
msgid ""
"Then, you can install the update. The update script will use Maven to "
"download Web Beans automatically."
msgstr ""
"これで最新版をインストールすることができます。更新スクリプトは、Web Beans を"
"自動的にダウンロードするために Maven を使用します。"

#. Tag: programlisting
#: gettingstarted.xml:85
#, no-c-format
msgid ""
"$ cd webbeans-$VERSION/jboss-as\n"
"$ ant update"
msgstr ""
"$ cd webbeans-$VERSION/jboss-as\n"
"$ ant update"

#. Tag: para
#: gettingstarted.xml:87
#, no-c-format
msgid "Now, you're ready to deploy your first example!"
msgstr "これで、最初のサンプルをデプロイする用意ができました。"

#. Tag: para
#: gettingstarted.xml:92
#, no-c-format
msgid ""
"The build scripts for the examples offer a number of targets for JBoss AS, "
"these are:"
msgstr ""
"サンプルのためのビルドスクリプトには、JBoss AS への多くのターゲットが定義され"
"ています:"

#. Tag: para
#: gettingstarted.xml:98
#, no-c-format
msgid "<literal>ant restart</literal> - deploy the example in exploded format"
msgstr ""
"<literal>ant restart</literal> - サンプルを展開形式フォーマットでデプロイしま"
"す"

#. Tag: para
#: gettingstarted.xml:104
#, no-c-format
msgid ""
"<literal>ant explode</literal> - update an exploded example, without "
"restarting the deployment"
msgstr ""
"<literal>ant explode</literal> - デプロイを最初から行うのでなく、展開形式でデ"
"プロイされたサンプルを必要な部分のみを更新します"

#. Tag: para
#: gettingstarted.xml:110
#, no-c-format
msgid ""
"<literal>ant deploy</literal> - deploy the example in compressed jar format"
msgstr ""
"<literal>ant deploy</literal> - サンプルを圧縮 jar フォーマットでデプロイしま"
"す"

#. Tag: para
#: gettingstarted.xml:115
#, no-c-format
msgid "<literal>ant undeploy</literal> - remove the example from the server"
msgstr "<literal>ant undeploy</literal> - サーバからサンプルを削除します"

#. Tag: para
#: gettingstarted.xml:120
#, no-c-format
msgid "<literal>ant clean</literal> - clean the example"
msgstr "<literal>ant clean</literal> - サンプルをクリーンします"

#. Tag: para
#: gettingstarted.xml:127
#, no-c-format
msgid "To deploy the numberguess example:"
msgstr "numberguess サンプルのデプロイ: "

#. Tag: programlisting
#: gettingstarted.xml:131
#, no-c-format
msgid ""
"$ cd examples/numberguess\n"
"ant deploy"
msgstr ""
"$ cd examples/numberguess\n"
"ant deploy"

#. Tag: para
#: gettingstarted.xml:133
#, no-c-format
msgid "Start JBoss AS:"
msgstr "JBoss AS を起動してください:"

#. Tag: programlisting
#: gettingstarted.xml:137
#, no-c-format
msgid "$ /Application/jboss-5.0.0.GA/bin/run.sh"
msgstr "$ /Application/jboss-5.0.0.GA/bin/run.sh"

#. Tag: para
#: gettingstarted.xml:140
#, no-c-format
msgid "If you use Windows, use the <literal>run.bat</literal>script."
msgstr ""
"もし Windows を使用しているのであれば、<literal>run.bat</literal> バッチコマ"
"ンドを使用してください。"

#. Tag: para
#: gettingstarted.xml:145 gettingstarted.xml:252
#, no-c-format
msgid ""
"Wait for the application to deploy, and enjoy hours of fun at <ulink url="
"\"http://localhost:8080/webbeans-numberguess\"></ulink>!"
msgstr ""
"アプリケーションがデプロイされるのを待って、<ulink url=\"http://"
"localhost:8080/webbeans-numberguess\"></ulink> にアクセスして楽しんでくださ"
"い!"

#. Tag: para
#: gettingstarted.xml:150
#, no-c-format
msgid ""
"Web Beans includes a second simple example that will translate your text "
"into Latin. The numberguess example is a war example, and uses only simple "
"beans; the translator example is an ear example, and includes enterprise "
"beans, packaged in an EJB module. To try it out:"
msgstr ""
"Web Beans は、テキストをラテン語に翻訳する２つ目の簡単なサンプルを含んでいま"
"す。numberguess サンプルは、war 形式のサンプルで、簡単な bean のみを使用して"
"います。translator サンプルは、ear 形式のサンプルで、エンタープライズ beansを"
"含み、EJB モジュールにパッケージされています。試してみましょう:"

#. Tag: programlisting
#: gettingstarted.xml:157
#, no-c-format
msgid ""
"$ cd examples/translator\n"
"ant deploy"
msgstr ""
"$ cd examples/translator\n"
"ant deploy"

#. Tag: para
#: gettingstarted.xml:159
#, no-c-format
msgid ""
"Wait for the application to deploy, and visit <ulink url=\"http://"
"localhost:8080/webbeans-translator\"></ulink>!"
msgstr ""
"アプリケーションがデプロイされるの待って、<ulink url=\"http://localhost:8080/"
"webbeans-translator\"></ulink> にアクセスしてください!"

#. Tag: title
#: gettingstarted.xml:167
#, no-c-format
msgid "Using Apache Tomcat 6.0"
msgstr "Apache Tomcat 6.0 の使用"

#. Tag: para
#: gettingstarted.xml:169
#, no-c-format
msgid ""
"You'll need to download Tomcat 6.0.18 or later from <ulink url=\"http://"
"tomcat.apache.org/download-60.cgi\">tomcat.apache.org</ulink>, and unzip it. "
"For example:"
msgstr ""
"Tomcat 6.0.18 以降を <ulink url=\"http://tomcat.apache.org/download-60.cgi"
"\">tomcat.apache.org</ulink> からダウンロードして展開する必要があります。例:"

#. Tag: programlisting
#: gettingstarted.xml:175
#, no-c-format
msgid ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/apache-tomcat-6.0.18.zip]]>"
msgstr ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/apache-tomcat-6.0.18.zip]]>"

#. Tag: para
#: gettingstarted.xml:185
#, no-c-format
msgid ""
"Next, we need to tell Web Beans where Tomcat is located. Edit <literal>jboss-"
"as/build.properties</literal> and set the <literal>tomcat.home</literal> "
"property. For example:"
msgstr ""
"次に、Web Beans にどこに Tomcat  が置かれているのかを指定する必要があります。"
"<literal>jboss-as/build.properties</literal>  を編集して  <literal>tomcat."
"home</literal> プロパティを設定してください。例:"

#. Tag: programlisting
#: gettingstarted.xml:191
#, no-c-format
msgid "tomcat.home=/Applications/apache-tomcat-6.0.18"
msgstr "tomcat.home=/Applications/apache-tomcat-6.0.18"

#. Tag: para
#: gettingstarted.xml:194
#, no-c-format
msgid ""
"The build scripts for the examples offer a number of targets for Tomcat, "
"these are:"
msgstr ""
"サンプルのためのビルドスクリプトには、Tomcat への多くのターゲットが定義されて"
"います:"

#. Tag: para
#: gettingstarted.xml:200
#, no-c-format
msgid ""
"<literal>ant tomcat.restart</literal> - deploy the example in exploded format"
msgstr ""
"<literal>ant tomcat.restart</literal> - サンプルを展開形式フォーマットでデプ"
"ロイします"

#. Tag: para
#: gettingstarted.xml:206
#, no-c-format
msgid ""
"<literal>ant tomcat.explode</literal> - update an exploded example, without "
"restarting the deployment"
msgstr ""
"<literal>ant tomcat.explode</literal> - デプロイを最初から行うのでなく、展開"
"形式でデプロイされたサンプルを必要な部分のみを更新します"

#. Tag: para
#: gettingstarted.xml:212
#, no-c-format
msgid ""
"<literal>ant tomcat.deploy</literal> - deploy the example in compressed jar "
"format"
msgstr ""
"<literal>ant tomcat.deploy</literal> - サンプルを圧縮 jar フォーマットでデプ"
"ロイします"

#. Tag: para
#: gettingstarted.xml:217
#, fuzzy, no-c-format
msgid ""
"<literal>ant tomcat.undeploy</literal> - remove the example (in compressed "
"jar format) from the server"
msgstr ""
"<literal>ant tomcat.deploy</literal> - サンプルを圧縮 jar フォーマットでデプ"
"ロイします"

#. Tag: para
#: gettingstarted.xml:222
#, fuzzy, no-c-format
msgid ""
"<literal>ant tomcat.unexplode</literal> - remove the example (in exploded "
"format) from the server"
msgstr ""
"<literal>ant tomcat.undeploy</literal> - サーバからサンプルを削除します"

#. Tag: para
#: gettingstarted.xml:227
#, no-c-format
msgid "<literal>ant tomcat.clean</literal> - clean the example"
msgstr "<literal>ant tomcat.clean</literal> - サンプルをクリーンします"

#. Tag: para
#: gettingstarted.xml:234
#, no-c-format
msgid "To deploy the numberguess example for tomcat:"
msgstr "Tomcat への numberguess サンプルのデプロイ:"

#. Tag: programlisting
#: gettingstarted.xml:238
#, no-c-format
msgid ""
"$ cd examples/tomcat\n"
"ant tomcat.deploy"
msgstr ""
"$ cd examples/tomcat\n"
"ant tomcat.deploy"

#. Tag: para
#: gettingstarted.xml:240
#, no-c-format
msgid "Start Tomcat:"
msgstr "Tomcat を起動してください:"

#. Tag: programlisting
#: gettingstarted.xml:244
#, no-c-format
msgid "$ /Applications/apache-tomcat-6.0.18/bin/startup.sh"
msgstr "$ /Applications/apache-tomcat-6.0.18/bin/startup.sh"

#. Tag: para
#: gettingstarted.xml:247
#, no-c-format
msgid "If you use Windows, use the <literal>startup.bat</literal>script."
msgstr ""
"もし Windows を使用しているのであれば、<literal>startup.bat</literal> バッチ"
"コマンドを使用してください。"

#. Tag: title
#: gettingstarted.xml:260
#, no-c-format
msgid "Using GlassFish"
msgstr "GlassFish の使用"

#. Tag: para
#: gettingstarted.xml:262
#, no-c-format
msgid "TODO"
msgstr "TODO"

#. Tag: title
#: gettingstarted.xml:266
#, no-c-format
msgid "The numberguess example"
msgstr "numberguess サンプル"

#. Tag: para
#: gettingstarted.xml:268
#, no-c-format
msgid ""
"In the numberguess application you get given 10 attempts to guess a number "
"between 1 and 100. After each attempt, you will be told whether you are too "
"high, or too low."
msgstr ""
"numberguess アプリケーションは、1 から100 の間の数字を 10 回以内で推測して当"
"てるというものです。各回の推測の後で、その値より高いか低いかが告げられます。"

#. Tag: para
#: gettingstarted.xml:274
#, no-c-format
msgid ""
"The numberguess example is comprised of a number of Web Beans, configuration "
"files, and Facelet JSF pages, packaged as a war. Let's start with the "
"configuration files."
msgstr ""
"numberguess サンプルには、多くのWeb Beans と構成ファイル、Facelet JSFページか"
"ら構成され、war 形式でパッケージされます。構成ファイルから説明を始めましょ"
"う。"

#. Tag: para
#: gettingstarted.xml:280
#, no-c-format
msgid ""
"All the configuration files for this example are located in <literal>WEB-INF/"
"</literal>, which is stored in <literal>WebContent</literal> in the source "
"tree. First, we have <literal>faces-config.xml</literal>, in which we tell "
"JSF to use Facelets:"
msgstr ""
"このサンプルの構成ファイルはすべて、<literal>WEB-INF/</literal> に配置されま"
"す。ソースツリー上では <literal>WebContent</literal> に格納されています。まず"
"最初に、<literal>faces-config.xml</literal> ファイルがあり、ここで JSF に "
"Facelets を使用するように設定します:"

#. Tag: programlisting
#: gettingstarted.xml:288
#, no-c-format
msgid ""
"<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
"<faces-config version=\"1.2\"\n"
"              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
"    \n"
"    <application>\n"
"        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
"    </application>\n"
"\n"
"</faces-config>]]>"
msgstr ""
"<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
"<faces-config version=\"1.2\"\n"
"              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
"    \n"
"    <application>\n"
"        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
"    </application>\n"
"\n"
"</faces-config>]]>"

#. Tag: para
#: gettingstarted.xml:290
#, no-c-format
msgid ""
"There is an empty <literal>web-beans.xml</literal> file, which marks this "
"application as a Web Beans application."
msgstr ""
"次に、空の <literal>web-beans.xml</literal> ファイルがあります。これはこのア"
"プリケーションが Web Beans アプリケーションである印を付けて指定しています。"

#. Tag: para
#: gettingstarted.xml:295
#, no-c-format
msgid "Finally there is <literal>web.xml</literal>:"
msgstr "最後に <literal>web.xml</literal> があります:"

#. Tag: section
#: gettingstarted.xml:297
#, no-c-format
msgid ""
"<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> "
"<area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default."
"suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area "
"id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA"
"[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"\n"
"<web-app version=\"2.5\"\n"
"    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun."
"com/xml/ns/javaee/web-app_2_5.xsd\">\n"
"   \n"
"   <display-name>Web Beans Numbergues example</display-name>\n"
"\n"
"   <!-- JSF -->\n"
"\n"
"   <servlet>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
"      <load-on-startup>1</load-on-startup>\n"
"   </servlet>\n"
"\n"
"   <servlet-mapping>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <url-pattern>*.jsf</url-pattern>\n"
"   </servlet-mapping>\n"
"   \n"
"   <context-param>\n"
"      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
"      <param-value>.xhtml</param-value>\n"
"   </context-param>\n"
"\n"
"   <session-config>\n"
"      <session-timeout>10</session-timeout>\n"
"   </session-config>\n"
"\n"
"</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces."
"servlet\"> <para> Enable and load the JSF servlet </para> </callout> "
"<callout arearefs=\"faces.servlet.mapping\"> <para> Configure requests to "
"<literal>.jsf</literal> pages to be handled by JSF </para> </callout> "
"<callout arearefs=\"faces.default.suffix\"> <para> Tell JSF that we will be "
"giving our source files (facelets) an extension of <literal>.xhtml</literal> "
"</para> </callout> <callout arearefs=\"session.timeout\"> <para> Configure a "
"session timeout of 10 minutes </para> </callout> </calloutlist> </"
"programlistingco> <note> <para> Whilst this demo is a JSF demo, you can use "
"Web Beans with any Servlet based web framework. </para> </note> <para> Let's "
"take a look at the Facelet view: </para> <programlistingco> <areaspec> <area "
"id=\"template\" coords=\"8\"/> <area id=\"messages2\" coords=\"12\"/> <area "
"id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords=\"25\"/> <area "
"id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords=\"33\"/> </"
"areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML "
"1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional."
"dtd\">\n"
"<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
"    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
"    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
"    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
"\n"
"  <ui:composition template=\"template.xhtml\">\n"
"    <ui:define name=\"content\">\n"
"       <h1>Guess a number...</h1>\n"
"       <h:form id=\"NumberGuessMain\">\n"
"          <div style=\"color: red\">\n"
"             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
"             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game."
"number gt game.guess and game.guess ne 0}\"/>\n"
"             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game."
"number lt game.guess and game.guess ne 0}\"/>\n"
"          </div>\n"
"   \n"
"          <div>\n"
"             I'm thinking of a number between #{game.smallest} and #{game."
"biggest}.\n"
"             You have #{game.remainingGuesses} guesses.\n"
"          </div>\n"
"     \n"
"          <div>\n"
"             Your guess: \n"
"             <h:inputText id=\"inputGuess\" \n"
"                          value=\"#{game.guess}\" \n"
"                          required=\"true\" \n"
"                          size=\"3\" \n"
"                          disabled=\"#{game.number eq game.guess}\">\n"
"                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
"                                     minimum=\"#{game.smallest}\"/>\n"
"             </h:inputText>\n"
"            <h:commandButton id=\"GuessButton\"  \n"
"                             value=\"Guess\" \n"
"                             action=\"#{game.check}\" \n"
"                             disabled=\"#{game.number eq game.guess}\"/>\n"
"          </div>\n"
"          <div>\n"
"            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#"
"{game.reset}\" immediate=\"true\" />\n"
"          </div>\n"
"       </h:form>\n"
"    </ui:define>\n"
"  </ui:composition>\n"
"</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> "
"<para> Facelets is a templating language for JSF, here we are wrapping our "
"page in a template which defines the header. </para> </callout> <callout "
"arearefs=\"messages2\"> <para> There are a number of messages which can be "
"sent to the user, \"Higher!\", \"Lower!\" and \"Correct!\" </para> </"
"callout> <callout arearefs=\"instructions\"> <para> As the user guesses, the "
"range of numbers they can guess gets smaller - this sentance changes to make "
"sure they know what range to guess in. </para> </callout> <callout arearefs="
"\"guess\"> <para> This input field is bound to a Web Bean, using the value "
"expression. </para> </callout> <callout arearefs=\"validator\"> <para> A "
"range validator is used to make sure the user doesn't accidentally input a "
"number outside of the range in which they can guess - if the validator "
"wasn't here, the user might use up a guess on an out of range number. </"
"para> </callout> <callout arearefs=\"submit\"> <para> And, of course, there "
"must be a way for the user to send their guess to the server. Here we bind "
"to an action method on the Web Bean. </para> </callout> </calloutlist> </"
"programlistingco>"
msgstr ""
"<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> "
"<area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default."
"suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area "
"id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA"
"[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"\n"
"<web-app version=\"2.5\"\n"
"    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun."
"com/xml/ns/javaee/web-app_2_5.xsd\">\n"
"   \n"
"   <display-name>Web Beans Numbergues example</display-name>\n"
"\n"
"   <!-- JSF -->\n"
"\n"
"   <servlet>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
"      <load-on-startup>1</load-on-startup>\n"
"   </servlet>\n"
"\n"
"   <servlet-mapping>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <url-pattern>*.jsf</url-pattern>\n"
"   </servlet-mapping>\n"
"   \n"
"   <context-param>\n"
"      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
"      <param-value>.xhtml</param-value>\n"
"   </context-param>\n"
"\n"
"   <session-config>\n"
"      <session-timeout>10</session-timeout>\n"
"   </session-config>\n"
"\n"
"</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces."
"servlet\"> <para> JSF サーブレットを有効にしてロードします </para> </"
"callout> <callout arearefs=\"faces.servlet.mapping\"> <para> <literal>.jsf</"
"literal> ページへのリクエストを JSF で処理するように設定します </para> </"
"callout> <callout arearefs=\"faces.default.suffix\"> <para> JSF に対してソー"
"スファイル (Facelets) に <literal>.xhtml</literal> の拡張子を付与することを指"
"定します  </para> </callout> <callout arearefs=\"session.timeout\"> <para> "
"セッションタイムアウトを 10 分に設定します </para> </callout> </calloutlist> "
"</programlistingco> <note> <para> このデモは JSF デモであるので、どんなサーブ"
"レットベース の Web フレームワークとでも一緒に Web Beans を使用することができ"
"ます。</para> </note> <para> Facelets ビューを見てみましょう: </para> "
"<programlistingco> <areaspec> <area id=\"template\" coords=\"8\"/> <area id="
"\"messages2\" coords=\"12\"/> <area id=\"instructions\" coords=\"19\"/> "
"<area id=\"guess\" coords=\"25\"/> <area id=\"validator\" coords=\"30\"/> "
"<area id=\"submit\" coords=\"33\"/> </areaspec> <programlisting><![CDATA[<!"
"DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www."
"w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"
"<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
"    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
"    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
"    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
"\n"
"  <ui:composition template=\"template.xhtml\">\n"
"    <ui:define name=\"content\">\n"
"       <h1>Guess a number...</h1>\n"
"       <h:form id=\"NumberGuessMain\">\n"
"          <div style=\"color: red\">\n"
"             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
"             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game."
"number gt game.guess and game.guess ne 0}\"/>\n"
"             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game."
"number lt game.guess and game.guess ne 0}\"/>\n"
"          </div>\n"
"   \n"
"          <div>\n"
"             I'm thinking of a number between #{game.smallest} and #{game."
"biggest}.\n"
"             You have #{game.remainingGuesses} guesses.\n"
"          </div>\n"
"     \n"
"          <div>\n"
"             Your guess: \n"
"             <h:inputText id=\"inputGuess\" \n"
"                          value=\"#{game.guess}\" \n"
"                          required=\"true\" \n"
"                          size=\"3\" \n"
"                          disabled=\"#{game.number eq game.guess}\">\n"
"                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
"                                     minimum=\"#{game.smallest}\"/>\n"
"             </h:inputText>\n"
"            <h:commandButton id=\"GuessButton\"  \n"
"                             value=\"Guess\" \n"
"                             action=\"#{game.check}\" \n"
"                             disabled=\"#{game.number eq game.guess}\"/>\n"
"          </div>\n"
"          <div>\n"
"            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#"
"{game.reset}\" immediate=\"true\" />\n"
"          </div>\n"
"       </h:form>\n"
"    </ui:define>\n"
"  </ui:composition>\n"
"</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> "
"<para> Facelets は、JSF のテンプレート言語です。ここではヘッダを定義するテン"
"プレートでページを囲んでいます。</para> </callout> <callout arearefs="
"\"messages2\"> <para> ユーザに送られる「もっと大きい!」や「もっと小さい!」、"
"「正しい!」 の多くのメッセージがあります。 </para> </callout> <callout "
"arearefs=\"instructions\"> <para> ユーザが推測するときに、推測できる数字の幅"
"は徐々に小さくなります - この文が変わることによりどの範囲で推測するのかを確認"
"することができます。</para> </callout> <callout arearefs=\"guess\"> <para> こ"
"の入力フィールドは、式表現を使用して Web Bean に括り付けられます。</para> </"
"callout> <callout arearefs=\"validator\"> <para> 範囲バリデータを使用してユー"
"ザがそこで推測できる範囲外にある数値を誤って入力していないことを確認します - "
"もしバリデータがここになかったら、ユーザは範囲外の数値で推測を使い果たしてし"
"まうかもしれません。</para> </callout> <callout arearefs=\"submit\"> <para> "
"そして、もちろん、ユーザがサーバに推測した値を送信する方法がなければなりませ"
"ん。ここで、Web Bean のアクションメソッドに括り付けます。</para> </callout> "
"</calloutlist> </programlistingco>"

#. Tag: para
#: gettingstarted.xml:399
#, no-c-format
msgid ""
"The example exists of 4 classes, the first two of which are binding types. "
"First, there is the <literal>@Random</literal> binding type, used for "
"injecting a random number:"
msgstr ""
"サンプルには４つのクラスが存在します。その内の最初の２つはバインディングタイ"
"プです。１つは、ランダムな数字をインジェクトするのに使用される "
"<literal>@Random</literal> バインディングタイプです:"

#. Tag: programlisting
#: gettingstarted.xml:405
#, no-c-format
msgid ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface Random {}]]>"
msgstr ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface Random {}]]>"

#. Tag: para
#: gettingstarted.xml:407
#, no-c-format
msgid ""
"There is also the <literal>@MaxNumber</literal> binding type, used for "
"injecting the maximum number that can be injected:"
msgstr ""
"もう１つは、インジェクトされることができる最大数をインジェクトするのに使用さ"
"れる使われる <literal>@MaxNumber</literal> バインディングタイプです:"

#. Tag: programlisting
#: gettingstarted.xml:412
#, no-c-format
msgid ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface MaxNumber {}\n"
"]]>"
msgstr ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface MaxNumber {}\n"
"]]>"

#. Tag: para
#: gettingstarted.xml:414
#, no-c-format
msgid ""
"The <literal>Generator</literal> class is responsible for creating the "
"random number, via a producer method. It also exposes the maximum possible "
"number via a producer method:"
msgstr ""
"<literal>Generator</literal>  クラスは、プロデューサメソッドによってランダム"
"な数字を生成することに責任を持ちます。またプロデューメソッドによって可能な最"
"大数を公開します:"

#. Tag: programlisting
#: gettingstarted.xml:420
#, no-c-format
msgid ""
"<![CDATA[@ApplicationScoped\n"
"public class Generator {\n"
"   \n"
"   private java.util.Random random = new java.util.Random( System."
"currentTimeMillis() );\n"
"   \n"
"   private int maxNumber = 100;\n"
"   \n"
"   java.util.Random getRandom()\n"
"   {\n"
"      return random;\n"
"   }\n"
"   \n"
"   @Produces @Random int next() { \n"
"      return getRandom().nextInt(maxNumber); \n"
"   }\n"
"   \n"
"   @Produces @MaxNumber int getMaxNumber()\n"
"   {\n"
"      return maxNumber;\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@ApplicationScoped\n"
"public class Generator {\n"
"   \n"
"   private java.util.Random random = new java.util.Random( System."
"currentTimeMillis() );\n"
"   \n"
"   private int maxNumber = 100;\n"
"   \n"
"   java.util.Random getRandom()\n"
"   {\n"
"      return random;\n"
"   }\n"
"   \n"
"   @Produces @Random int next() { \n"
"      return getRandom().nextInt(maxNumber); \n"
"   }\n"
"   \n"
"   @Produces @MaxNumber int getMaxNumber()\n"
"   {\n"
"      return maxNumber;\n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: gettingstarted.xml:422
#, no-c-format
msgid ""
"You'll notice that the <literal>Generator</literal> is application scoped; "
"therefore we don't get a different random each time."
msgstr ""
"<literal>Generator</literal>  がアプリケーションスコープであるということに気"
"づくでしょう。 それゆえに毎回異なるランダムな数字を取得するようなことはしませ"
"ん。"

#. Tag: para
#: gettingstarted.xml:427
#, no-c-format
msgid ""
"The final Web Bean in the application is the session scoped <literal>Game</"
"literal>."
msgstr ""
"アプリケーションの最後の Web Bean は、セッションスコープの <literal>Game</"
"literal> です。"

#. Tag: para
#: gettingstarted.xml:432
#, no-c-format
msgid ""
"You'll note that we've used the <literal>@Named</literal> annotation, so "
"that we can use the bean through EL in the JSF page. Finally, we've used "
"constructor injection to initialize the game with a random number. And of "
"course, we need to tell the player when they've won, so we give feedback "
"with a <literal>FacesMessage</literal>."
msgstr ""
"<literal>@Named</literal> アノテーションを使用することによって、JSF ページで "
"EL によって bean を扱うことができるようにしています。最後に、ランダムな数を持"
"つゲームを初期化するためにコンストラクタインジェクションを使用しています。そ"
"してもちろん、プレーヤにいつ勝ったかを告げる必要があるので、"
"<literal>FacesMessage</literal> でフィードバックを行います。"

#. Tag: programlisting
#: gettingstarted.xml:440
#, no-c-format
msgid ""
"<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
"\n"
"\n"
"import javax.annotation.PostConstruct;\n"
"import javax.faces.application.FacesMessage;\n"
"import javax.faces.context.FacesContext;\n"
"import javax.webbeans.AnnotationLiteral;\n"
"import javax.webbeans.Current;\n"
"import javax.webbeans.Initializer;\n"
"import javax.webbeans.Named;\n"
"import javax.webbeans.SessionScoped;\n"
"import javax.webbeans.manager.Manager;\n"
"\n"
"@Named\n"
"@SessionScoped\n"
"public class Game\n"
"{\n"
"   private int number;\n"
"   \n"
"   private int guess;\n"
"   private int smallest;\n"
"   private int biggest;\n"
"   private int remainingGuesses;\n"
"   \n"
"   @Current Manager manager;\n"
"   \n"
"   public Game()\n"
"   {\n"
"   }\n"
"   \n"
"   @Initializer\n"
"   Game(@MaxNumber int maxNumber)\n"
"   {      \n"
"      this.biggest = maxNumber;\n"
"   }\n"
"\n"
"   public int getNumber()\n"
"   {\n"
"      return number;\n"
"   }\n"
"   \n"
"   public int getGuess()\n"
"   {\n"
"      return guess;\n"
"   }\n"
"   \n"
"   public void setGuess(int guess)\n"
"   {\n"
"      this.guess = guess;\n"
"   }\n"
"   \n"
"   public int getSmallest()\n"
"   {\n"
"      return smallest;\n"
"   }\n"
"   \n"
"   public int getBiggest()\n"
"   {\n"
"      return biggest;\n"
"   }\n"
"   \n"
"   public int getRemainingGuesses()\n"
"   {\n"
"      return remainingGuesses;\n"
"   }\n"
"   \n"
"   public String check()\n"
"   {\n"
"      if (guess>number)\n"
"      {\n"
"         biggest = guess - 1;\n"
"      }\n"
"      if (guess<number)\n"
"      {\n"
"         smallest = guess + 1;\n"
"      }\n"
"      if (guess == number)\n"
"      {\n"
"         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage"
"(\"Correct!\"));\n"
"      }\n"
"      remainingGuesses--;\n"
"      return null;\n"
"   }\n"
"   \n"
"   @PostConstruct\n"
"   public void reset()\n"
"   {\n"
"      this.smallest = 0;\n"
"      this.guess = 0;\n"
"      this.remainingGuesses = 10;\n"
"      this.number = manager.getInstanceByType(Integer.class, new "
"AnnotationLiteral<Random>(){});\n"
"   }\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
"\n"
"\n"
"import javax.annotation.PostConstruct;\n"
"import javax.faces.application.FacesMessage;\n"
"import javax.faces.context.FacesContext;\n"
"import javax.webbeans.AnnotationLiteral;\n"
"import javax.webbeans.Current;\n"
"import javax.webbeans.Initializer;\n"
"import javax.webbeans.Named;\n"
"import javax.webbeans.SessionScoped;\n"
"import javax.webbeans.manager.Manager;\n"
"\n"
"@Named\n"
"@SessionScoped\n"
"public class Game\n"
"{\n"
"   private int number;\n"
"   \n"
"   private int guess;\n"
"   private int smallest;\n"
"   private int biggest;\n"
"   private int remainingGuesses;\n"
"   \n"
"   @Current Manager manager;\n"
"   \n"
"   public Game()\n"
"   {\n"
"   }\n"
"   \n"
"   @Initializer\n"
"   Game(@MaxNumber int maxNumber)\n"
"   {      \n"
"      this.biggest = maxNumber;\n"
"   }\n"
"\n"
"   public int getNumber()\n"
"   {\n"
"      return number;\n"
"   }\n"
"   \n"
"   public int getGuess()\n"
"   {\n"
"      return guess;\n"
"   }\n"
"   \n"
"   public void setGuess(int guess)\n"
"   {\n"
"      this.guess = guess;\n"
"   }\n"
"   \n"
"   public int getSmallest()\n"
"   {\n"
"      return smallest;\n"
"   }\n"
"   \n"
"   public int getBiggest()\n"
"   {\n"
"      return biggest;\n"
"   }\n"
"   \n"
"   public int getRemainingGuesses()\n"
"   {\n"
"      return remainingGuesses;\n"
"   }\n"
"   \n"
"   public String check()\n"
"   {\n"
"      if (guess>number)\n"
"      {\n"
"         biggest = guess - 1;\n"
"      }\n"
"      if (guess<number)\n"
"      {\n"
"         smallest = guess + 1;\n"
"      }\n"
"      if (guess == number)\n"
"      {\n"
"         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage"
"(\"Correct!\"));\n"
"      }\n"
"      remainingGuesses--;\n"
"      return null;\n"
"   }\n"
"   \n"
"   @PostConstruct\n"
"   public void reset()\n"
"   {\n"
"      this.smallest = 0;\n"
"      this.guess = 0;\n"
"      this.remainingGuesses = 10;\n"
"      this.number = manager.getInstanceByType(Integer.class, new "
"AnnotationLiteral<Random>(){});\n"
"   }\n"
"   \n"
"}]]>"

#. Tag: title
#: gettingstarted.xml:443
#, no-c-format
msgid "The numberguess example in Tomcat"
msgstr "Tomcat での numberguess サンプル"

#. Tag: para
#: gettingstarted.xml:445
#, no-c-format
msgid ""
"The numberguess for Tomcat differs in a couple of ways. Firstly, Web Beans "
"should be deployed as a Web Application library in <literal>WEB-INF/lib</"
"literal>. For your convenience we provide a single jar suitable for running "
"Web Beans in any servlet container <literal>webbeans-servlet.jar</literal>."
msgstr ""
"Tomcat での numberguess は、いくつかの点で異なります。第一に、Web Beans は、"
"<literal>WEB-INF/lib</literal> に Web アプリケーションライブラリとしてデプロ"
"イされる必要があります。便宜を図るため、どんなサーブレットコンテナでも Web "
"Beans を実行させるのに適したであるので、単一の jar の <literal>webbeans-"
"servlet.jar</literal> を提供します。"

#. Tag: para
#: gettingstarted.xml:454
#, no-c-format
msgid ""
"Of course, you must also include JSF and EL, as well common annotations "
"(<literal>jsr250-api.jar</literal>) which a JEE server includes by default."
msgstr ""
"もちろん、JEEサーバにデフォルトで含まれているコモンアノテーション "
"(<literal>jsr250-api.jar</literal>) と同様に、JSF と EL も含める必要がありま"
"す。"

#. Tag: para
#: gettingstarted.xml:461
#, no-c-format
msgid ""
"Secondly, we need to explicitly specify the servlet listener (used to boot "
"Web Beans, and control it's interaction with requests) in <literal>web.xml</"
"literal>:"
msgstr ""
"第二に、<literal>web.xml</literal> に明示的にサーブレットリスナーを指定する必"
"要があります(Web Beans をブートするのに使用され、リクエストとの相互作用を制御"
"します):"

#. Tag: programlisting
#: gettingstarted.xml:467
#, no-c-format
msgid ""
"<![CDATA[<listener>\n"
"   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-"
"class>\n"
"</listener>]]>"
msgstr ""
"<![CDATA[<listener>\n"
"   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-"
"class>\n"
"</listener>]]>"

#. Tag: title
#: gettingstarted.xml:472
#, no-c-format
msgid "The numberguess example for Apache Wicket"
msgstr "Apache Wicket 向けの numberguess サンプル"

#. Tag: para
#: gettingstarted.xml:473
#, no-c-format
msgid ""
"Whilst JSR-299 specifies integration with Java ServerFaces, Web Beans allows "
"you to inject into Wicket components, and also allows you to use a "
"conversation context with Wicket. In this section, we'll walk you through "
"the Wicket version of the numberguess example."
msgstr ""
"JSR-299 が Java ServerFaces との統合の仕様を定める一方で、Web Beans は "
"Wicket コンポーネントへインジェクトすることを可能にし、Wicket で対話コンテキ"
"ストを使用することも可能にします。このセクションでは、numberguess サンプルの "
"Wicket バージョンを一つずつ説明します。"

#. Tag: para
#: gettingstarted.xml:482
#, no-c-format
msgid ""
"You may want to review the Wicket documentation at <ulink url=\"http://"
"wicket.apache.org/\">http://wicket.apache.org/</ulink>."
msgstr ""
"<ulink url=\"http://wicket.apache.org/\">http://wicket.apache.org/</ulink> "
"の Wicket ドキュメントを見直すこともできます。"

#. Tag: para
#: gettingstarted.xml:488
#, no-c-format
msgid ""
"Like the previous example, the Wicket WebBeans examples make use of the "
"<literal>webbeans-servlet</literal> module. The use of the <ulink url="
"\"http://jetty.mortbay.org/\">Jetty servlet container</ulink> is common in "
"the Wicket community, and is chosen here as the runtime container in order "
"to facilitate comparison between the standard Wicket examples and these "
"examples, and also to show how the webbeans-servlet integration is not "
"dependent upon Tomcat as the servlet container."
msgstr ""
"これまでのサンプルと同じよう、Wicket WebBeans サンプルは <literal>webbeans-"
"servlet</literal> モジュールを利用します。<ulink url=\"http://jetty.mortbay."
"org/\">Jetty サーブレットコンテナ</ulink> の使用は Wicket コミュニティでは一"
"般的なので、標準 Wicket サンプルとこれらのサンプルとの比較を容易にするため"
"に、また webbeans-サーブレットの統合がサーブレットコンテナとしての Tomcat に"
"依存していないことを示すために、ここでは実行コンテナとしてJetty サーブレット"
"コンテナを選択しています。"

#. Tag: para
#: gettingstarted.xml:499
#, no-c-format
msgid ""
"These examples make use of the Eclipse IDE; instructions are also given to "
"deploy the application from the command line."
msgstr ""
"これらのサンプルは、Eclipse IDE を利用します。またアプリケーションをデプロイ"
"する命令は、コマンドラインから入力します。"

#. Tag: title
#: gettingstarted.xml:505
#, no-c-format
msgid "Creating the Eclipse project"
msgstr "Eclipse プロジェクトの作成"

#. Tag: para
#: gettingstarted.xml:507
#, no-c-format
msgid "To generate an Eclipse project from the example:"
msgstr "サンプルから Eclipse プロジェクトを生成します:"

#. Tag: programlisting
#: gettingstarted.xml:511
#, fuzzy, no-c-format
msgid ""
"<![CDATA[cd examples/wicket/numberguess\n"
"mvn -Pjetty eclipse:eclipse]]>"
msgstr ""
"<![CDATA[cd examples/wicket/numberguess\n"
"mvn eclipse:eclipse]]>"

#. Tag: para
#: gettingstarted.xml:513
#, fuzzy, no-c-format
msgid ""
"Then, from eclipse, choose <emphasis>File -> Import -> General -> Existing "
"Projects into Workspace</emphasis>, select the root directory of the "
"numberguess example, and click finish. Note that if you do not intend to run "
"the example with jetty from within eclipse, omit the \"-Pjetty.\" This will "
"create a project in your workspace called <literal>webbeans-wicket-"
"numberguess</literal>"
msgstr ""
"次に eclipse で <emphasis>ファイル -> インポート -> 一般 -> 既存のプロジェク"
"トをワークスペースへ</emphasis> を選んで、numberguess サンプルのルートディレ"
"クトリを指定して、完了をクリックします。これにより ワークスペースに "
"<literal>webbeans-wicket-numberguess</literal> という名前のプロジェクトが作成"
"されます。"

#. Tag: title
#: gettingstarted.xml:529
#, no-c-format
msgid "Running the example from Eclipse"
msgstr "Eclipse からのサンプルの実行"

#. Tag: para
#: gettingstarted.xml:531
#, no-c-format
msgid ""
"This project follows the <literal>wicket-quickstart</literal> approach of "
"creating an instance of Jetty in the <literal>Start</literal> class. So "
"running the example is as simple as right-clicking on that Start class in "
"<literal>src/test/java</literal> in the <emphasis>Package Explorer</"
"emphasis> and choosing <emphasis>Run as Java Application</emphasis>. You "
"should see console output related to Jetty starting up; then visit able "
"<literal>http://localhost:8080</literal> to view the app. To debug choose "
"<emphasis>Debug as Java Application</emphasis>."
msgstr ""
"このプロジェクトは、<literal>Start</literal> クラスで Jetty のインスタンスを"
"作成する<literal>wicket-quickstart</literal> のアプローチに従っています。よっ"
"て、サンプルを実行するには <emphasis>パッケージエクスプローラ</emphasis> で "
"<literal>src/test/java</literal> にあるスタートクラスを右クリックし、"
"<emphasis>Run as Java Application</emphasis> を選択して、簡単に実行できます。"
"Jetty が起動するのをコンソール出力で確認してください。起動すれば"
"<literal>http://localhost:8080</literal> からアプリケーションをアクセスしてく"
"ださい。デバッグするためには <emphasis>Debug as Java Application</emphasis> "
"を選択してください。"

#. Tag: title
#: gettingstarted.xml:546
#, no-c-format
msgid "Running the example from the command line in JBoss AS or Tomcat"
msgstr "JBoss AS または Tomcat でコマンドラインからのサンプルの実行"

#. Tag: para
#: gettingstarted.xml:548
#, no-c-format
msgid ""
"This example can also be deployed from the command line in a (similar to the "
"other examples). Assuming you have set up the <literal>build.properties</"
"literal> file in the <literal>examples</literal> directory to specify the "
"location of JBoss AS or Tomcat, as previously described, you can run "
"<literal>ant deploy</literal> from the <literal>examples/wicket/numberguess</"
"literal> directory, and access the application at <literal>http://"
"localhost:8080/webbeans-numberguess-wicket</literal>."
msgstr ""
"このサンプルはコマンドラインからもデプロイすることができます(その他のサンプル"
"と同様に)。<literal>examples</literal> ディレクトリ内の<literal>build."
"properties</literal>ファイルでJBoss AS あるいは Tomcat の場所を指定したとする"
"と、以前に述べたように、<literal>examples/wicket/numberguess</literal> ディレ"
"クトリで <literal>ant deploy</literal> を実行して、<literal>http://"
"localhost:8080/webbeans-numberguess-wicket</literal> からアプリケーションにア"
"クセスすることができます。"

#. Tag: title
#: gettingstarted.xml:562
#, no-c-format
msgid "Understanding the code"
msgstr "コードの理解"

#. Tag: para
#: gettingstarted.xml:564
#, no-c-format
msgid ""
"JSF uses Unified EL expressions to bind view layer components in JSP or "
"Facelet views to beans, Wicket defines it's components in Java. The markup "
"is plain html with a one-to-one mapping between html elements and the view "
"components. All view logic, including binding of components to models and "
"controlling the response of view actions, is handled in Java. The "
"integration of Web Beans with Wicket takes advantage of the same binding "
"annotations used in your business layer to provide injection into your "
"WebPage subclass (or into other custom wicket component subclasses)."
msgstr ""
"JSF はユニファイド EL 式を使用して、JSP あるいは Facelet ビューのビューレイヤ"
"コンポーネントを Bean にバインドします。Wicket は Java でコンポーネントを定義"
"します。マークアップ は、html 要素とビューコンポーネントとの１対１のマッピン"
"グを行うプレーンな html です。モデルへのコンポーネントのバインディングと"
"ビューアクションの応答のコントロールを含むすべてのビューロジックは Java で処"
"理されます。Web Beans と Wicket の統合により、WebPage サブクラス(あるいは他の"
"カスタム Wicket コンポーネントサブクラスに)への注入を提供するビジネスレイヤで"
"同一バインディングアノテーションを利用できるようになります。"

#. Tag: para
#: gettingstarted.xml:576
#, no-c-format
msgid ""
"The code in the wicket numberguess example is very similar to the JSF-based "
"numberguess example. The business layer is identical!"
msgstr ""
"Wicket numberguess サンプルのコードは、JSFベースの numberguess サンプルにとて"
"も類似しています。ビジネス層レイヤは同一です。"

#. Tag: para
#: gettingstarted.xml:581
#, no-c-format
msgid "Differences are:"
msgstr "違いは以下の通りです:"

#. Tag: para
#: gettingstarted.xml:586
#, no-c-format
msgid ""
"Each wicket application must have a <literal>WebApplication</literal> "
"subclass, In our case, our application class is <literal>SampleApplication</"
"literal>:"
msgstr ""
"各々の Wicket アプリケーションは、<literal>WebApplication</literal> サブクラ"
"スを持たなければなりません。サンプルの場合、アプリケーションクラスは "
"<literal>SampleApplication</literal> です:"

#. Tag: programlisting
#: gettingstarted.xml:592
#, no-c-format
msgid ""
"<![CDATA[public class SampleApplication extends WebBeansApplication {\n"
"   @Override\n"
"   public Class getHomePage() {\n"
"      return HomePage.class;\n"
"   }\n"
"}]]>"
msgstr ""
"<![CDATA[public class SampleApplication extends WebBeansApplication {\n"
"   @Override\n"
"   public Class getHomePage() {\n"
"      return HomePage.class;\n"
"   }\n"
"}]]>"

#. Tag: para
#: gettingstarted.xml:593
#, no-c-format
msgid ""
"This class specifies which page wicket should treat as our home page, in our "
"case, <literal>HomePage.class</literal>"
msgstr ""
"このクラスはどのページを Wicket がホームページとして取り扱うべきかを指定して"
"います。サンプルでは <literal>HomePage.class</literal> です。"

#. Tag: para
#: gettingstarted.xml:599
#, no-c-format
msgid ""
"In <literal>HomePage</literal> we see typical wicket code to set up page "
"elements. The bit that is interesting is the injection of the <literal>Game</"
"literal> bean:"
msgstr ""
"<literal>HomePage</literal>では、 ページ要素を設定するために典型的な Wicket "
"コードを見ることができます。面白い箇所は、<literal>Game</literal> bean の注入"
"です:"

#. Tag: programlisting
#: gettingstarted.xml:605
#, no-c-format
msgid "<![CDATA[ @Current Game game;]]>"
msgstr "<![CDATA[ @Current Game game;]]>"

#. Tag: para
#: gettingstarted.xml:607
#, no-c-format
msgid ""
"The <literal>Game</literal> bean is can then be used, for example, by the "
"code for submitting a guess:"
msgstr ""
"<literal>Game</literal> bean 例えば、推測を送信するコードによって使用されま"
"す:"

#. Tag: programlisting
#: gettingstarted.xml:612
#, no-c-format
msgid ""
"<![CDATA[final Component guessButton = new AjaxButton(\"GuessButton\") { \n"
"   protected void onSubmit(AjaxRequestTarget target, Form form) {\n"
"      if (game.check()) {]]>"
msgstr ""
"<![CDATA[final Component guessButton = new AjaxButton(\"GuessButton\") { \n"
"   protected void onSubmit(AjaxRequestTarget target, Form form) {\n"
"      if (game.check()) {]]>"

#. Tag: para
#: gettingstarted.xml:615
#, no-c-format
msgid ""
"All injections may be serialized; actual storage of the bean is managed by "
"JSR-299. Note that Wicket components, like the HomePage and it "
"subcomponents, are <emphasis>not</emphasis> JSR-299 beans."
msgstr ""
"すべての注入はシリアライズされます。Bean の実際の保管は、JSR-299 によって管理"
"されます。Wicket コンポーネントは、HomePage やそのサブクラスと同様に、JSR-"
"299 beans<emphasis>ではない</emphasis> ことに注意してください。"

#. Tag: para
#: gettingstarted.xml:621
#, no-c-format
msgid ""
"Wicket components allow injection, but they <emphasis>cannot</emphasis> use "
"interceptors, decorators and lifecycle callbacks such as "
"<literal>@PostConstruct</literal> or <literal>@Initializer</literal> methods."
msgstr ""
"Wicket コンポーネントは注入を許可します。しかし <literal>@PostConstruct</"
"literal> あるいは <literal>@Initializer</literal> といったインタセプタやデコ"
"レータ、ライフサイクルコールバックを使用することは<emphasis>できません</"
"emphasis>。"

#. Tag: para
#: gettingstarted.xml:631
#, no-c-format
msgid ""
"The example uses AJAX for processing of button events, and dynamically hides "
"buttons that are no longer relevant, for example when the user has won the "
"game."
msgstr ""
"サンプルではボタンイベント処理のために AJAX を使用して、例えばユーザがゲーム"
"に勝利したときに、もはや適切でなくなったボタンを動的に隠しています。"

#. Tag: para
#: gettingstarted.xml:639
#, no-c-format
msgid ""
"In order to activate wicket for this webapp, the Wicket filter is added to "
"web.xml, and our application class is specified:"
msgstr ""
"この webapp のための Wicket を有効化するために、Wicket フィルタが web.xml に"
"加えられ、アプリケーションクラスが指定されます:"

#. Tag: programlisting
#: gettingstarted.xml:644
#, no-c-format
msgid ""
"<![CDATA[<filter>\n"
"   <filter-name>wicket.numberguess-example</filter-name>\n"
"   <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-"
"class>\n"
"   <init-param>\n"
"      <param-name>applicationClassName</param-name>\n"
"      <param-value>org.jboss.webbeans.examples.wicket.SampleApplication</"
"param-value>\n"
"   </init-param>\n"
"</filter>\n"
"\n"
"<filter-mapping>\n"
"   <filter-name>wicket.numberguess-example</filter-name>\n"
"   <url-pattern>/*</url-pattern>\n"
"</filter-mapping>\n"
" \n"
"<listener>\n"
"   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-"
"class>\n"
"</listener>]]>"
msgstr ""
"<![CDATA[<filter>\n"
"   <filter-name>wicket.numberguess-example</filter-name>\n"
"   <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-"
"class>\n"
"   <init-param>\n"
"      <param-name>applicationClassName</param-name>\n"
"      <param-value>org.jboss.webbeans.examples.wicket.SampleApplication</"
"param-value>\n"
"   </init-param>\n"
"</filter>\n"
"\n"
"<filter-mapping>\n"
"   <filter-name>wicket.numberguess-example</filter-name>\n"
"   <url-pattern>/*</url-pattern>\n"
"</filter-mapping>\n"
" \n"
"<listener>\n"
"   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-"
"class>\n"
"</listener>]]>"

#. Tag: para
#: gettingstarted.xml:645
#, no-c-format
msgid ""
"Note that the servlet listener is also added, as in the Tomcat example, in "
"order to boostrap Web Beans when Jetty starts, and to hook Web Beans into "
"the Jetty servlet request and session lifecycles."
msgstr ""
"Tomcat サンプルと同様に、Jetty が起動したときに Web Beans をブートストラップ"
"し、Jetty のサーブレットリクエストとセッションライフサイクルへ Web Beans を"
"フックするために、サーブレットリスナも追加されていることに注意してください。"

#. Tag: title
#: gettingstarted.xml:658
#, no-c-format
msgid "The numberguess example for Java SE with Swing"
msgstr "Java SE 上の Swing 向けの numberguess サンプル"

#. Tag: para
#: gettingstarted.xml:660
#, no-c-format
msgid ""
"This example can be found in the <literal>examples/se/numberguess</literal> "
"folder of the Web Beans distribution."
msgstr ""
"このサンプルは、Web Beans のディストリビューションの <literal>examples/se/"
"numberguess</literal> フォルダ に見つけることができます。"

#. Tag: para
#: gettingstarted.xml:667
#, no-c-format
msgid "To run this example:"
msgstr "このサンプルの実行方法:"

#. Tag: para
#: gettingstarted.xml:673
#, no-c-format
msgid ""
"Open a command line/terminal window in the <literal>examples/se/numberguess</"
"literal> directory"
msgstr ""
"<literal>examples/se/numberguess</literal> ディレクトリでコマンドライン/ター"
"ミナルウィンドウを開いてください"

#. Tag: para
#: gettingstarted.xml:679
#, no-c-format
msgid "Ensure that Maven 2 is installed and in your PATH"
msgstr ""
"Maven 2 がインストールされていてパスに設定されていることを確認してください"

#. Tag: para
#: gettingstarted.xml:684
#, no-c-format
msgid ""
"Ensure that the <literal>JAVA_HOME</literal> environment variable is "
"pointing to your JDK installation"
msgstr ""
"<literal>JAVA_HOME</literal> 環境変数がJDKのインストール場所を指定しているを"
"確認してください"

#. Tag: para
#: gettingstarted.xml:690
#, no-c-format
msgid "execute the following command"
msgstr "以下のコマンドを実行してください"

#. Tag: programlisting
#: gettingstarted.xml:693
#, no-c-format
msgid "mvn -Drun"
msgstr "mvn -Drun"

#. Tag: para
#: gettingstarted.xml:699
#, no-c-format
msgid ""
"There is an empty <literal>beans.xml</literal> file in the root package "
"(<literal>src/main/resources/beans.xml</literal>), which marks this "
"application as a Web Beans application."
msgstr ""
"ルートパッケージの中には空の <literal>beans.xml</literal> ファイル "
"(<literal>src/main/resources/beans.xml</literal>) があります。これによりこの"
"アプリケーションが Web Beans アプリケーションであるという印をつけます。"

#. Tag: para
#: gettingstarted.xml:705
#, no-c-format
msgid ""
"The game's main logic is located in <literal>Game.java</literal>. Here is "
"the code for that class, highlighting the changes made from the web "
"application version:"
msgstr ""
"ゲームのメインロジックは、 <literal>Game.java</literal> にあります。以下はそ"
"のクラスのコードで、Web アプリケーションバージョンから変更された箇所を目立た"
"せています:"

#. Tag: section
#: gettingstarted.xml:709
#, no-c-format
msgid ""
"<programlistingco> <areaspec> <area id=\"scope\" coords=\"1\"/> <area id="
"\"name\" coords=\"1\"/> <area id=\"messages1\" coords=\"26\"/> <area id="
"\"validation\" coords=\"39\"/> <area id=\"reset\" coords=\"68\"/> </"
"areaspec> <programlisting role=\"JAVA\"><![CDATA[@ApplicationScoped\n"
"public class Game implements Serializable\n"
"{\n"
"\n"
"    private int number;\n"
"    private int guess;\n"
"    private int smallest;\n"
"\n"
"    @MaxNumber\n"
"    private int maxNumber;\n"
"\n"
"    private int biggest;\n"
"    private int remainingGuesses;\n"
"    private boolean validNumberRange = true;\n"
"\n"
"    @Current Generator rndGenerator;\n"
"\n"
"    ...\n"
"\n"
"    public boolean isValidNumberRange()\n"
"    {\n"
"        return validNumberRange;\n"
"    }\n"
"\n"
"    public boolean isGameWon()\n"
"    {\n"
"        return guess == number;\n"
"    }\n"
"\n"
"    public boolean isGameLost()\n"
"    {\n"
"        return guess != number && remainingGuesses <= 0;\n"
"    }\n"
"\n"
"    public boolean check()\n"
"    {\n"
"        boolean result = false;\n"
"\n"
"        if ( checkNewNumberRangeIsValid() )\n"
"        {\n"
"            if ( guess > number )\n"
"            {\n"
"                biggest = guess - 1;\n"
"            }\n"
"\n"
"            if ( guess < number )\n"
"            {\n"
"                smallest = guess + 1;\n"
"            }\n"
"\n"
"            if ( guess == number )\n"
"            {\n"
"                result = true;\n"
"            }\n"
"\n"
"            remainingGuesses--;\n"
"        }\n"
"\n"
"        return result;\n"
"    }\n"
"\n"
"    private boolean checkNewNumberRangeIsValid()\n"
"    {\n"
"        return validNumberRange = ( ( guess >= smallest ) && ( guess <= "
"biggest ) );\n"
"    }\n"
"\n"
"    @PostConstruct\n"
"    public void reset()\n"
"    {\n"
"        this.smallest = 0;\n"
"        ...\n"
"        this.number = rndGenerator.next();\n"
"    }\n"
"}]]></programlisting> <calloutlist> <callout arearefs=\"scope\"> <para> The "
"bean is application scoped instead of session scoped, since an instance of "
"the application represents a single 'session'. </para> </callout> <callout "
"arearefs=\"name\"> <para> The bean is not named, since it doesn't need to be "
"accessed via EL </para> </callout> <callout arearefs=\"messages1\"> <para> "
"There is no JSF <literal>FacesContext</literal> to add messages to. Instead "
"the <literal>Game</literal> class provides additional information about the "
"state of the current game including: </para> <itemizedlist> <listitem> "
"<para> If the game has been won or lost </para> </listitem> <listitem> "
"<para> If the most recent guess was invalid </para> </listitem> </"
"itemizedlist> <para> This allows the Swing UI to query the state of the "
"game, which it does indirectly via a class called <literal>MessageGenerator,"
"</literal> in order to determine the appropriate messages to display to the "
"user during the game. </para> </callout> <callout arearefs=\"validation\"> "
"<para> Validation of user input is performed during the <literal>check()</"
"literal> method, since there is no dedicated validation phase </para> </"
"callout> <callout arearefs=\"reset\"> <para> The <literal>reset()</literal> "
"method makes a call to the injected <literal>rndGenerator</literal> in order "
"to get the random number at the start of each game. It cannot use "
"<literal>manager.getInstanceByType(Integer.class, new AnnotationLiteral&lt;"
"Random&gt;(){})</literal> as the JSF example does because there will not be "
"any active contexts like there is during a JSF request. </para> </callout> </"
"calloutlist> </programlistingco> <para> The <literal>MessageGenerator</"
"literal> class depends on the current instance of <literal>Game</literal>, "
"and queries its state in order to determine the appropriate messages to "
"provide as the prompt for the user's next guess and the response to the "
"previous guess. The code for <literal>MessageGenerator</literal> is as "
"follows: </para> <programlistingco> <areaspec> <area id=\"game\" coords=\"3"
"\"/> <area id=\"challenge\" coords=\"5\"/> <area id=\"result\" coords=\"16\"/"
"> </areaspec> <programlisting role=\"JAVA\"><![CDATA[public class "
"MessageGenerator\n"
"{\n"
"    @Current Game game;\n"
"\n"
"    public String getChallengeMessage()\n"
"    {\n"
"        StringBuilder challengeMsg = new StringBuilder( \"I'm thinking of a "
"number between \" );\n"
"        challengeMsg.append( game.getSmallest() );\n"
"        challengeMsg.append( \" and \" );\n"
"        challengeMsg.append( game.getBiggest() );\n"
"        challengeMsg.append( \". Can you guess what it is?\" );\n"
"\n"
"        return challengeMsg.toString();\n"
"    }\n"
"\n"
"    public String getResultMessage()\n"
"    {\n"
"        if ( game.isGameWon() )\n"
"        {\n"
"            return \"You guess it! The number was \" + game.getNumber();\n"
"        } else if ( game.isGameLost() )\n"
"        {\n"
"            return \"You are fail! The number was \" + game.getNumber();\n"
"        } else if ( ! game.isValidNumberRange() )\n"
"        {\n"
"            return \"Invalid number range!\";\n"
"        } else if ( game.getRemainingGuesses() == Game.MAX_NUM_GUESSES )\n"
"        {\n"
"            return \"What is your first guess?\";\n"
"        } else\n"
"        {\n"
"            String direction = null;\n"
"\n"
"            if ( game.getGuess() < game.getNumber() )\n"
"            {\n"
"                direction = \"Higher\";\n"
"            } else\n"
"            {\n"
"                direction = \"Lower\";\n"
"            }\n"
"\n"
"            return direction + \"! You have \" + game.getRemainingGuesses() "
"+ \" guesses left.\";\n"
"        }\n"
"    }\n"
"}]]></programlisting> <calloutlist> <callout arearefs=\"game\"> <para> The "
"instance of <literal>Game</literal> for the application is injected here. </"
"para> </callout> <callout arearefs=\"challenge\"> <para> The <literal>Game</"
"literal>'s state is interrogated to determine the appropriate challenge "
"message. </para> </callout> <callout arearefs=\"result\"> <para> And again "
"to determine whether to congratulate, console or encourage the user to "
"continue. </para> </callout> </calloutlist> </programlistingco> <para> "
"Finally we come to the <literal>NumberGuessFrame</literal> class which "
"provides the Swing front end to our guessing game. </para> "
"<programlistingco> <areaspec> <area id=\"gameIn\" coords=\"3\"/> <area id="
"\"messagesIn\" coords=\"4\"/> <area id=\"start\" coords=\"6\"/> <area id="
"\"init\" coords=\"18\"/> <area id=\"guess1\" coords=\"34\"/> <area id="
"\"replay\" coords=\"44\"/> <area id=\"refresh\" coords=\"50\"/> </areaspec> "
"<programlisting role=\"JAVA\"><![CDATA[public class NumberGuessFrame  "
"extends javax.swing.JFrame\n"
"{\n"
"    private @Current Game game;\n"
"    private @Current MessageGenerator msgGenerator;\n"
"\n"
"    public void start( @Observes @Deployed Manager manager )\n"
"    {\n"
"        java.awt.EventQueue.invokeLater( new Runnable()\n"
"            {\n"
"                public void run()\n"
"                {\n"
"                    initComponents();\n"
"                    setVisible( true );\n"
"                }\n"
"            } );\n"
"    }\n"
"\n"
"    private void initComponents() {\n"
"\n"
"        buttonPanel = new javax.swing.JPanel();\n"
"        mainMsgPanel = new javax.swing.JPanel();\n"
"        mainLabel = new javax.swing.JLabel();\n"
"        messageLabel = new javax.swing.JLabel();\n"
"        guessText = new javax.swing.JTextField();\n"
"        ...\n"
"        mainLabel.setText(msgGenerator.getChallengeMessage());\n"
"        mainMsgPanel.add(mainLabel);\n"
"\n"
"        messageLabel.setText(msgGenerator.getResultMessage());\n"
"        mainMsgPanel.add(messageLabel);\n"
"        ...\n"
"    }\n"
"\n"
"    private void guessButtonActionPerformed( java.awt.event.ActionEvent "
"evt )\n"
"    {\n"
"        int guess =  Integer.parseInt(guessText.getText());\n"
"\n"
"        game.setGuess( guess );\n"
"        game.check();\n"
"        refreshUI();\n"
"\n"
"    }\n"
"\n"
"    private void replayBtnActionPerformed( java.awt.event.ActionEvent evt )\n"
"    {\n"
"       game.reset();\n"
"       refreshUI();\n"
"    }\n"
"\n"
"    private void refreshUI()\n"
"    {\n"
"        mainLabel.setText( msgGenerator.getChallengeMessage() );\n"
"        messageLabel.setText( msgGenerator.getResultMessage() );\n"
"        guessText.setText( \"\" );\n"
"        guessesLeftBar.setValue( game.getRemainingGuesses() );\n"
"        guessText.requestFocus();\n"
"    }\n"
"\n"
"    // swing components\n"
"    private javax.swing.JPanel borderPanel;\n"
"    ...\n"
"    private javax.swing.JButton replayBtn;\n"
"\n"
"}]]></programlisting> <calloutlist> <callout arearefs=\"gameIn\"> <para> The "
"injected instance of the game (logic and state). </para> </callout> <callout "
"arearefs=\"messagesIn\"> <para> The injected message generator for UI "
"messages. </para> </callout> <callout arearefs=\"start\"> <para> This "
"application is started in the usual Web Beans SE way, by observing the "
"<literal>@Deployed Manager</literal> event. </para> </callout> <callout "
"arearefs=\"init\"> <para> This method initialises all of the Swing "
"components. Note the use of the <literal>msgGenerator</literal>. </para> </"
"callout> <callout arearefs=\"guess1\"> <para> "
"<literal>guessButtonActionPerformed</literal> is called when the 'Guess' "
"button is clicked, and it does the following: </para> <itemizedlist> "
"<listitem> <para> Gets the guess entered by the user and sets it as the "
"current guess in the <literal>Game</literal> </para> </listitem> <listitem> "
"<para> Calls <literal>game.check()</literal> to validate and perform one "
"'turn' of the game </para> </listitem> <listitem> <para> Calls "
"<literal>refreshUI</literal>. If there were validation errors with the "
"input, this will have been captured during <literal>game.check()</literal> "
"and as such will be reflected in the messeges returned by "
"<literal>MessageGenerator</literal> and subsequently presented to the user. "
"If there are no validation errors then the user will be told to guess again "
"(higher or lower) or that the game has ended either in a win (correct guess) "
"or a loss (ran out of guesses). </para> </listitem> </itemizedlist> </"
"callout> <callout arearefs=\"replay\"> <para> "
"<literal>replayBtnActionPerformed</literal> simply calls <literal>game.reset"
"()</literal> to start a new game and refreshes the messages in the UI. </"
"para> </callout> <callout arearefs=\"refresh\"> <para> <literal>refreshUI</"
"literal> uses the <literal>MessageGenerator</literal> to update the messages "
"to the user based on the current state of the Game. </para> </callout> </"
"calloutlist> </programlistingco>"
msgstr ""
"<programlistingco> <areaspec> <area id=\"scope\" coords=\"1\"/> <area id="
"\"name\" coords=\"1\"/> <area id=\"messages1\" coords=\"26\"/> <area id="
"\"validation\" coords=\"39\"/> <area id=\"reset\" coords=\"68\"/> </"
"areaspec> <programlisting role=\"JAVA\"><![CDATA[@ApplicationScoped\n"
"public class Game implements Serializable\n"
"{\n"
"\n"
"    private int number;\n"
"    private int guess;\n"
"    private int smallest;\n"
"\n"
"    @MaxNumber\n"
"    private int maxNumber;\n"
"\n"
"    private int biggest;\n"
"    private int remainingGuesses;\n"
"    private boolean validNumberRange = true;\n"
"\n"
"    @Current Generator rndGenerator;\n"
"\n"
"    ...\n"
"\n"
"    public boolean isValidNumberRange()\n"
"    {\n"
"        return validNumberRange;\n"
"    }\n"
"\n"
"    public boolean isGameWon()\n"
"    {\n"
"        return guess == number;\n"
"    }\n"
"\n"
"    public boolean isGameLost()\n"
"    {\n"
"        return guess != number && remainingGuesses <= 0;\n"
"    }\n"
"\n"
"    public boolean check()\n"
"    {\n"
"        boolean result = false;\n"
"\n"
"        if ( checkNewNumberRangeIsValid() )\n"
"        {\n"
"            if ( guess > number )\n"
"            {\n"
"                biggest = guess - 1;\n"
"            }\n"
"\n"
"            if ( guess < number )\n"
"            {\n"
"                smallest = guess + 1;\n"
"            }\n"
"\n"
"            if ( guess == number )\n"
"            {\n"
"                result = true;\n"
"            }\n"
"\n"
"            remainingGuesses--;\n"
"        }\n"
"\n"
"        return result;\n"
"    }\n"
"\n"
"    private boolean checkNewNumberRangeIsValid()\n"
"    {\n"
"        return validNumberRange = ( ( guess >= smallest ) && ( guess <= "
"biggest ) );\n"
"    }\n"
"\n"
"    @PostConstruct\n"
"    public void reset()\n"
"    {\n"
"        this.smallest = 0;\n"
"        ...\n"
"        this.number = rndGenerator.next();\n"
"    }\n"
"}]]></programlisting> <calloutlist> <callout arearefs=\"scope\"> <para> アプ"
"リケーションのインスタンスが唯一の「セッション」を表すので、Bean はセッション"
"スコープではなくアプリケーションスコープです。 </para> </callout> <callout "
"arearefs=\"name\"> <para> EL 経由でアクセスされる必要がないので、Bean には名"
"前がつけられていません </para> </callout> <callout arearefs=\"messages1\"> "
"<para> メッセージを付加するための JSF <literal>FacesContext</literal> はあり"
"ません。その代わりに <literal>Game</literal>  クラスは以下の現在のゲーム状態"
"に関する追加情報を提供します: </para> <itemizedlist> <listitem> <para> ゲーム"
"は勝ったのかあるいは負けたのか </para> </listitem> <listitem> <para> 最も直前"
"の推測は外れだったのか </para> </listitem> </itemizedlist> <para> ゲームの間"
"にユーザに表示するべき適切なメッセージを決定するために Swing UI がゲームの状"
"態を問い合わせることを可能にし、それは <literal>MessageGenerator</literal> と"
"呼ばれるクラスを経由して間接的に行われます。 </para> </callout> <callout "
"arearefs=\"validation\"> <para> 専用のバリデーションフェーズがないので、ユー"
"ザ入力のバリデーションは <literal>check()</literal> メソッドの間に実行されま"
"す </para> </callout> <callout arearefs=\"reset\"> <para> それぞれのゲームの"
"開始時にランダム数を取得するために、<literal>reset()</literal> メソッドは、注"
"入された <literal>rndGenerator</literal> を呼び出します。そこには JSF リクエ"
"ストの間にようなアクティブコンテキストはないのでは、<literal>manager."
"getInstanceByType(Integer.class, new AnnotationLiteral&lt;Random&gt;(){})</"
"literal> を使用することはできません。</para> </callout> </calloutlist> </"
"programlistingco> <para> <literal>MessageGenerator</literal> クラスは "
"<literal>Game</literal> の現在のインスタンスに依存し、直前の推測への応答と"
"ユーザの次の推測のためのプロンプトとして提供すべき適切なメッセージを決定する"
"ために、状態を問い合わせします。<literal>MessageGenerator</literal> のコード"
"は、以下の通りです: </para> <programlistingco> <areaspec> <area id=\"game\" "
"coords=\"3\"/> <area id=\"challenge\" coords=\"5\"/> <area id=\"result\" "
"coords=\"16\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[public "
"class MessageGenerator\n"
"{\n"
"    @Current Game game;\n"
"\n"
"    public String getChallengeMessage()\n"
"    {\n"
"        StringBuilder challengeMsg = new StringBuilder( \"I'm thinking of a "
"number between \" );\n"
"        challengeMsg.append( game.getSmallest() );\n"
"        challengeMsg.append( \" and \" );\n"
"        challengeMsg.append( game.getBiggest() );\n"
"        challengeMsg.append( \". Can you guess what it is?\" );\n"
"\n"
"        return challengeMsg.toString();\n"
"    }\n"
"\n"
"    public String getResultMessage()\n"
"    {\n"
"        if ( game.isGameWon() )\n"
"        {\n"
"            return \"You guess it! The number was \" + game.getNumber();\n"
"        } else if ( game.isGameLost() )\n"
"        {\n"
"            return \"You are fail! The number was \" + game.getNumber();\n"
"        } else if ( ! game.isValidNumberRange() )\n"
"        {\n"
"            return \"Invalid number range!\";\n"
"        } else if ( game.getRemainingGuesses() == Game.MAX_NUM_GUESSES )\n"
"        {\n"
"            return \"What is your first guess?\";\n"
"        } else\n"
"        {\n"
"            String direction = null;\n"
"\n"
"            if ( game.getGuess() < game.getNumber() )\n"
"            {\n"
"                direction = \"Higher\";\n"
"            } else\n"
"            {\n"
"                direction = \"Lower\";\n"
"            }\n"
"\n"
"            return direction + \"! You have \" + game.getRemainingGuesses() "
"+ \" guesses left.\";\n"
"        }\n"
"    }\n"
"}]]></programlisting> <calloutlist> <callout arearefs=\"game\"> <para> アプリ"
"ケーションのための <literal>Game</literal> のインスタンスは、ここで注入されま"
"す。</para> </callout> <callout arearefs=\"challenge\"> <para> 適切な挑戦メッ"
"セージを決めるために、<literal>Game</literal>の状態が問い合わせられます。</"
"para> </callout> <callout arearefs=\"result\"> <para> ユーザを祝福するか、あ"
"るいは慰めるか、続けるように励ますかを再び決定します。</para> </callout> </"
"calloutlist> </programlistingco> <para> 最後に、推測ゲームの Swing フロントエ"
"ンドを提供する <literal>NumberGuessFrame</literal> クラスを見てみます。</"
"para> <programlistingco> <areaspec> <area id=\"gameIn\" coords=\"3\"/> <area "
"id=\"messagesIn\" coords=\"4\"/> <area id=\"start\" coords=\"6\"/> <area id="
"\"init\" coords=\"18\"/> <area id=\"guess1\" coords=\"34\"/> <area id="
"\"replay\" coords=\"44\"/> <area id=\"refresh\" coords=\"50\"/> </areaspec> "
"<programlisting role=\"JAVA\"><![CDATA[public class NumberGuessFrame  "
"extends javax.swing.JFrame\n"
"{\n"
"    private @Current Game game;\n"
"    private @Current MessageGenerator msgGenerator;\n"
"\n"
"    public void start( @Observes @Deployed Manager manager )\n"
"    {\n"
"        java.awt.EventQueue.invokeLater( new Runnable()\n"
"            {\n"
"                public void run()\n"
"                {\n"
"                    initComponents();\n"
"                    setVisible( true );\n"
"                }\n"
"            } );\n"
"    }\n"
"\n"
"    private void initComponents() {\n"
"\n"
"        buttonPanel = new javax.swing.JPanel();\n"
"        mainMsgPanel = new javax.swing.JPanel();\n"
"        mainLabel = new javax.swing.JLabel();\n"
"        messageLabel = new javax.swing.JLabel();\n"
"        guessText = new javax.swing.JTextField();\n"
"        ...\n"
"        mainLabel.setText(msgGenerator.getChallengeMessage());\n"
"        mainMsgPanel.add(mainLabel);\n"
"\n"
"        messageLabel.setText(msgGenerator.getResultMessage());\n"
"        mainMsgPanel.add(messageLabel);\n"
"        ...\n"
"    }\n"
"\n"
"    private void guessButtonActionPerformed( java.awt.event.ActionEvent "
"evt )\n"
"    {\n"
"        int guess =  Integer.parseInt(guessText.getText());\n"
"\n"
"        game.setGuess( guess );\n"
"        game.check();\n"
"        refreshUI();\n"
"\n"
"    }\n"
"\n"
"    private void replayBtnActionPerformed( java.awt.event.ActionEvent evt )\n"
"    {\n"
"       game.reset();\n"
"       refreshUI();\n"
"    }\n"
"\n"
"    private void refreshUI()\n"
"    {\n"
"        mainLabel.setText( msgGenerator.getChallengeMessage() );\n"
"        messageLabel.setText( msgGenerator.getResultMessage() );\n"
"        guessText.setText( \"\" );\n"
"        guessesLeftBar.setValue( game.getRemainingGuesses() );\n"
"        guessText.requestFocus();\n"
"    }\n"
"\n"
"    // swing components\n"
"    private javax.swing.JPanel borderPanel;\n"
"    ...\n"
"    private javax.swing.JButton replayBtn;\n"
"\n"
"}]]></programlisting> <calloutlist> <callout arearefs=\"gameIn\"> <para> ゲー"
"ム(ロジックと状態)の注入されたインスタンス。</para> </callout> <callout "
"arearefs=\"messagesIn\"> <para> UI メッセージのための注入されたジェネレータ。"
"</para> </callout> <callout arearefs=\"start\"> <para> <literal>@Deployed "
"Manager</literal> イベントを監視することにより、このアプリケーションは通常の "
"Web Beans SE の方法で開始されます。</para> </callout> <callout arearefs="
"\"init\"> <para> このメソッドはすべての Swing コンポーネントを初期化します。"
"<literal>msgGenerator</literal> の使用 に注意してください。 </para> </"
"callout> <callout arearefs=\"guess1\"> <para> "
"<literal>guessButtonActionPerformed</literal> は、「推測」ボタンがクリックさ"
"れたときに呼ばれ、以下のことを行います: </para> <itemizedlist> <listitem> "
"<para> ユーザによって入力された推測を取得して、<literal>Game</literal> に現在"
"の推測をセットします </para> </listitem> <listitem> <para> バリデートしてゲー"
"ムの１つの「順番」を実行するために <literal>game.check()</literal> を呼び出し"
"ます </para> </listitem> <listitem> <para> <literal>refreshUI</literal> を呼"
"び出します。もし入力にバリデーションエラーがあれば、これは <literal>game."
"check()</literal> の間に捕捉され、<literal>MessageGenerator</literal> によっ"
"て返されるメッセージに反映され、続いてユーザに表示されます。もしバリデーショ"
"ンエラーがなければ、ユーザは再び推測結果(より高いかより低いか)を告げられる"
"か、あるいはゲームは勝利(正しい推測)または負け(推測を使い尽くし)でゲームを終"
"えます。</para> </listitem> </itemizedlist> </callout> <callout arearefs="
"\"replay\"> <para> <literal>replayBtnActionPerformed</literal>  は、新しい"
"ゲームを始めるために単に <literal>game.reset()</literal> を呼んで、UIのメッ"
"セージを新しくします。</para> </callout> <callout arearefs=\"refresh\"> "
"<para> <literal>refreshUI</literal> は、ゲームの現在の状況に基づいてユーザへ"
"のメッセージを更新するために、<literal>MessageGenerator</literal> を使いま"
"す。</para> </callout> </calloutlist> </programlistingco>"

#. Tag: title
#: gettingstarted.xml:917
#, no-c-format
msgid "The translator example"
msgstr "translator サンプル"

#. Tag: para
#: gettingstarted.xml:919
#, no-c-format
msgid ""
"The translator example will take any sentences you enter, and translate them "
"to Latin."
msgstr ""
"translator サンプルは、入力するどんな文章も受け取り、それをラテン語に翻訳しま"
"す。"

#. Tag: para
#: gettingstarted.xml:924
#, no-c-format
msgid ""
"The translator example is built as an ear, and contains EJBs. As a result, "
"it's structure is more complex than the numberguess example."
msgstr ""
"translator サンプルは ear としてビルドされ、EJB を含みます。その結果として、"
"numberguess サンプルよりも構造が複雑です。"

#. Tag: para
#: gettingstarted.xml:930
#, no-c-format
msgid ""
"EJB 3.1 and Jave EE 6 allow you to package EJBs in a war, which will make "
"this structure much simpler!"
msgstr ""
"EJB 3.1 と Jave EE 6 により EJB を war にパッケージングすることが可能になりま"
"す。これによりこの構造はもっと簡単になります。"

#. Tag: para
#: gettingstarted.xml:936
#, no-c-format
msgid ""
"First, let's take a look at the ear aggregator, which is located in "
"<literal>webbeans-translator-ear</literal> module. Maven automatically "
"generates the <literal>application.xml</literal> for us:"
msgstr ""
"まず最初に、<literal>webbeans-translator-ear</literal> モジュール にある ear "
"形式の aggregatorを見てみましょう。Maven が自動的に <literal>application."
"xml</literal> を生成します:"

#. Tag: programlisting
#: gettingstarted.xml:942
#, no-c-format
msgid ""
"<![CDATA[<plugin>\n"
"   <groupId>org.apache.maven.plugins</groupId>\n"
"   <artifactId>maven-ear-plugin</artifactId>\n"
"   <configuration>\n"
"      <modules>\n"
"         <webModule>\n"
"            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
"            <artifactId>webbeans-translator-war</artifactId>\n"
"            <contextRoot>/webbeans-translator</contextRoot>\n"
"         </webModule>\n"
"      </modules>\n"
"   </configuration>\n"
"</plugin>]]>"
msgstr ""
"<![CDATA[<plugin>\n"
"   <groupId>org.apache.maven.plugins</groupId>\n"
"   <artifactId>maven-ear-plugin</artifactId>\n"
"   <configuration>\n"
"      <modules>\n"
"         <webModule>\n"
"            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
"            <artifactId>webbeans-translator-war</artifactId>\n"
"            <contextRoot>/webbeans-translator</contextRoot>\n"
"         </webModule>\n"
"      </modules>\n"
"   </configuration>\n"
"</plugin>]]>"

#. Tag: para
#: gettingstarted.xml:944
#, no-c-format
msgid ""
"Here we set the context path, which gives us a nice url (<ulink url=\"http://"
"localhost:8080/webbeans-translator\">http://localhost:8080/webbeans-"
"translator</ulink>)."
msgstr ""
"ここでは、コンテキストパスを親切なurl (<ulink url=\"http://localhost:8080/"
"webbeans-translator\">http://localhost:8080/webbeans-translator</ulink>) に設"
"定します。"

#. Tag: para
#: gettingstarted.xml:950
#, no-c-format
msgid ""
"If you aren't using Maven to generate these files, you would need "
"<literal>META-INF/application.xml</literal>:"
msgstr ""
"もしこれらのファイルを生成するのに Maven を使用しなければ、<literal>META-INF/"
"application.xml</literal> が必要になります:"

#. Tag: programlisting
#: gettingstarted.xml:955
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
"             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
"             version=\"5\">\n"
"  <display-name>webbeans-translator-ear</display-name>\n"
"  <description>Ear Example for the reference implementation of JSR 299: Web "
"Beans</description>\n"
"  \n"
"  <module>\n"
"    <web>\n"
"      <web-uri>webbeans-translator.war</web-uri>\n"
"      <context-root>/webbeans-translator</context-root>\n"
"    </web>\n"
"  </module>\n"
"  <module>\n"
"    <ejb>webbeans-translator.jar</ejb>\n"
"  </module>\n"
"</application>]]>"
msgstr ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
"             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
"             version=\"5\">\n"
"  <display-name>webbeans-translator-ear</display-name>\n"
"  <description>Ear Example for the reference implementation of JSR 299: Web "
"Beans</description>\n"
"  \n"
"  <module>\n"
"    <web>\n"
"      <web-uri>webbeans-translator.war</web-uri>\n"
"      <context-root>/webbeans-translator</context-root>\n"
"    </web>\n"
"  </module>\n"
"  <module>\n"
"    <ejb>webbeans-translator.jar</ejb>\n"
"  </module>\n"
"</application>]]>"

#. Tag: para
#: gettingstarted.xml:958
#, no-c-format
msgid ""
"Next, lets look at the war. Just as in the numberguess example, we have a "
"<literal>faces-config.xml</literal> (to enable Facelets) and a <literal>web."
"xml</literal> (to enable JSF) in <literal>WebContent/WEB-INF</literal>."
msgstr ""
"次に、war を見てみましょう。ちょうど numberguess サンプルと同様に、"
"WebContent/WEB-INF に <literal>faces-config.xml</literal> (faceletを有効化す"
"る)と <literal>web.xml</literal> (JSFを有効化する)があります。"

#. Tag: para
#: gettingstarted.xml:965
#, no-c-format
msgid ""
"More intersting is the facelet used to translate text. Just as in the "
"numberguess example we have a template, which surrounds the form (ommitted "
"here for brevity):"
msgstr ""
"興味深いことに facelet がテキストを翻訳するのに使用されています。ちょうど "
"numberguess サンプルでテンプレートを使用しているのと同様に、フォームで囲まれ"
"ています(短くするためにここでは省略しています):"

#. Tag: programlisting
#: gettingstarted.xml:971
#, no-c-format
msgid ""
"<![CDATA[<h:form id=\"NumberGuessMain\">\n"
"            \n"
"   <table>\n"
"      <tr align=\"center\" style=\"font-weight: bold\" >\n"
"         <td>\n"
"            Your text\n"
"         </td>\n"
"         <td>\n"
"            Translation\n"
"         </td>\n"
"      </tr>\n"
"      <tr>\n"
"         <td>\n"
"            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" "
"required=\"true\" rows=\"5\" cols=\"80\" />\n"
"         </td>\n"
"         <td>\n"
"            <h:outputText value=\"#{translator.translatedText}\" />\n"
"         </td>\n"
"      </tr>\n"
"   </table>\n"
"   <div>\n"
"      <h:commandButton id=\"button\" value=\"Translate\" action=\"#"
"{translator.translate}\"/>\n"
"   </div>\n"
"   \n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form id=\"NumberGuessMain\">\n"
"            \n"
"   <table>\n"
"      <tr align=\"center\" style=\"font-weight: bold\" >\n"
"         <td>\n"
"            Your text\n"
"         </td>\n"
"         <td>\n"
"            Translation\n"
"         </td>\n"
"      </tr>\n"
"      <tr>\n"
"         <td>\n"
"            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" "
"required=\"true\" rows=\"5\" cols=\"80\" />\n"
"         </td>\n"
"         <td>\n"
"            <h:outputText value=\"#{translator.translatedText}\" />\n"
"         </td>\n"
"      </tr>\n"
"   </table>\n"
"   <div>\n"
"      <h:commandButton id=\"button\" value=\"Translate\" action=\"#"
"{translator.translate}\"/>\n"
"   </div>\n"
"   \n"
"</h:form>]]>"

#. Tag: para
#: gettingstarted.xml:973
#, no-c-format
msgid ""
"The user can enter some text in the lefthand textarea, and hit the translate "
"button to see the result to the right."
msgstr ""
"ユーザが左側のテキストエリアにテキストを入力して、翻訳ボタンを押すことにより"
"その右側に結果を確認できます。"

#. Tag: para
#: gettingstarted.xml:978
#, no-c-format
msgid ""
"Finally, let's look at the ejb module, <literal>webbeans-translator-ejb</"
"literal>. In <literal>src/main/resources/META-INF</literal> there is just an "
"empty <literal>web-beans.xml</literal>, used to mark the archive as "
"containing Web Beans."
msgstr ""
"最後に、ejbモジュール <literal>webbeans-translator-ejb</literal> を見てみま"
"しょう。<literal>src/main/resources/META-INF</literal> には、単に空の "
"<literal>web-beans.xml</literal> があり、このアーカイブが Web Beans を含んで"
"いるという印を付けるのに使用されています。"

#. Tag: para
#: gettingstarted.xml:986
#, no-c-format
msgid ""
"We've saved the most interesting bit to last, the code! The project has two "
"simple beans, <literal>SentenceParser</literal> and <literal>TextTranslator</"
"literal> and two enterprise beans, <literal>TranslatorControllerBean</"
"literal> and <literal>SentenceTranslator</literal>. You should be getting "
"quite familiar with what a Web Bean looks like by now, so we'll just "
"highlight the most interesting bits here."
msgstr ""
"最も面白い箇所、コードは最後にとっておきました。プロジェクトには２つの単純な "
"Bean の <literal>SentenceParser</literal> と<literal>TextTranslator</"
"literal> と、２つのエンタープライズBean の "
"<literal>TranslatorControllerBean</literal> と <literal>SentenceTranslator</"
"literal> があります。今までで Web Bean がどうようなものであるか詳しくなってき"
"たので、ここでは、最も面白い箇所を取り上げましょう。"

#. Tag: para
#: gettingstarted.xml:996
#, no-c-format
msgid ""
"Both <literal>SentenceParser</literal> and <literal>TextTranslator</literal> "
"are dependent beans, and <literal>TextTranslator</literal> uses constructor "
"initialization:"
msgstr ""
"<literal>SentenceParser</literal> と <literal>TextTranslator</literal> の両方"
"とも依存 beans で、TextTranslator はコンストラクタ初期化を使用します:"

#. Tag: programlisting
#: gettingstarted.xml:1002
#, no-c-format
msgid ""
"<![CDATA[public class TextTranslator { \n"
"   private SentenceParser sentenceParser; \n"
"   private Translator sentenceTranslator; \n"
"   \n"
"   @Initializer\n"
"   TextTranslator(SentenceParser sentenceParser, Translator "
"sentenceTranslator) \n"
"   { \n"
"      this.sentenceParser = sentenceParser; \n"
"      this.sentenceTranslator = sentenceTranslator;]]>"
msgstr ""
"<![CDATA[public class TextTranslator { \n"
"   private SentenceParser sentenceParser; \n"
"   private Translator sentenceTranslator; \n"
"   \n"
"   @Initializer\n"
"   TextTranslator(SentenceParser sentenceParser, Translator "
"sentenceTranslator) \n"
"   { \n"
"      this.sentenceParser = sentenceParser; \n"
"      this.sentenceTranslator = sentenceTranslator;]]>"

#. Tag: para
#: gettingstarted.xml:1004
#, no-c-format
msgid ""
"<literal>TextTranslator</literal> is a stateless bean (with a local business "
"interface), where the magic happens - of course, we couldn't develop a full "
"translator, but we gave it a good go!"
msgstr ""
"<literal>TextTranslator</literal> は、(ローカルビジネスインタフェースをもつ)"
"ステートレスな bean です。ここで手品が起こります - もちろん、完全な "
"translator を開発できているわけでないので、翻訳はダミーの結果が返ります。"

#. Tag: para
#: gettingstarted.xml:1010
#, no-c-format
msgid ""
"Finally, there is UI orientated controller, that collects the text from the "
"user, and dispatches it to the translator. This is a request scoped, named, "
"stateful session bean, which injects the translator."
msgstr ""
"最後に、ユーザからのテキストを受け付けて、translator にそれをディスパッチす"
"る UI に基づいたコントローラがあります。これは、translator をインジェクトす"
"る、リクエストスコープの名前をつけられたステートフルセッション Beanです。"

#. Tag: programlisting
#: gettingstarted.xml:1016
#, no-c-format
msgid ""
"<![CDATA[@Stateful\n"
"@RequestScoped\n"
"@Named(\"translator\")\n"
"public class TranslatorControllerBean implements TranslatorController\n"
"{\n"
"   \n"
"   @Current TextTranslator translator;]]>"
msgstr ""
"<![CDATA[@Stateful\n"
"@RequestScoped\n"
"@Named(\"translator\")\n"
"public class TranslatorControllerBean implements TranslatorController\n"
"{\n"
"   \n"
"   @Current TextTranslator translator;]]>"

#. Tag: para
#: gettingstarted.xml:1018
#, no-c-format
msgid "The bean also has getters and setters for all the fields on the page."
msgstr ""
"Beanは、ページ上のすべてのフィールドに対して getter と setter も持っていま"
"す。"

#. Tag: para
#: gettingstarted.xml:1022
#, no-c-format
msgid "As this is a stateful session bean, we have to have a remove method:"
msgstr ""
"これはステートフルセッション Bean ですので、remove メソッドを持つ必要がありま"
"す:"

#. Tag: programlisting
#: gettingstarted.xml:1026
#, no-c-format
msgid ""
"<![CDATA[   @Remove\n"
"   public void remove()\n"
"   {\n"
"      \n"
"   }]]>"
msgstr ""
"<![CDATA[   @Remove\n"
"   public void remove()\n"
"   {\n"
"      \n"
"   }]]>"

#. Tag: para
#: gettingstarted.xml:1028
#, no-c-format
msgid ""
"The Web Beans manager will call the remove method for you when the bean is "
"destroyed; in this case at the end of the request."
msgstr ""
"Web Beans マネージャは、Bean が破棄されるときにremove メソッドを呼び出しま"
"す。このサンプルの場合は、リクエストの終わりです。"

#. Tag: para
#: gettingstarted.xml:1034
#, no-c-format
msgid ""
"That concludes our short tour of the Web Beans examples. For more on Web "
"Beans , or to help out, please visit <ulink url=\"http://www.seamframework."
"org/WebBeans/Development\">http://www.seamframework.org/WebBeans/"
"Development</ulink>."
msgstr ""
"Web Beans サンプルの短いツアーはこれで終わります。Web Beans についての詳細や"
"手助けをするには、どうぞ <ulink url=\"http://www.seamframework.org/WebBeans/"
"Development\">http://www.seamframework.org/WebBeans/Development</ulink> にア"
"クセスしてください。"

#. Tag: para
#: gettingstarted.xml:1040
#, no-c-format
msgid ""
"We need help in all areas - bug fixing, writing new features, writing "
"examples and translating this reference guide."
msgstr ""
"私たちはすべての領域 - バクフィックス、新機能の記述、サンプルの記述、リファレ"
"ンスガイドの翻訳で協力を必要としています。"
