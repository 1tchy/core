# translation of ri.po to Korean
# Language ko-KR translations for Introduction_to_Web_Beans package.
#
# Automatically generated, 2009.
# Eunju Kim <eukim@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: ri\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-18 16:31+0000\n"
"PO-Revision-Date: 2009-01-21 02:28+1000\n"
"Last-Translator: Eunju Kim <eukim@redhat.com>\n"
"Language-Team: Korean <ko@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"
"Plural-Forms:  nplurals=2; plural=(n!=1);\n\n"
"\n"
"\n"
"\n"

#. Tag: title
#: ri.xml:4
#, no-c-format
msgid "The Web Beans Reference Implementation"
msgstr "Web Beans 참조 구현 "

#. Tag: para
#: ri.xml:6
#, no-c-format
msgid ""
"The Web Beans Reference Implementation is being developed at <ulink url="
"\"http://seamframework.org/WebBeans\">the Seam project</ulink>. You can "
"download the latest developer release of Web Beans from the <ulink url="
"\"http://seamframework.org/Download\">the downloads page</ulink>."
msgstr ""
"Web Beans 참조 구현 (Web Beans Reference Implementation)은 <ulink url="
"\"http://seamframework.org/WebBeans\">Seam 프로젝트</ulink>에서 개발되고 있습니다. <ulink url="
"\"http://seamframework.org/Download\">다운로드 페이지</ulink>에서 최신 개발자 릴리즈를 다운로드하실 수 있습니다.   "

#. Tag: para
#: ri.xml:13
#, no-c-format
msgid ""
"The Web Beans RI comes with a two deployable example applications: "
"<literal>webbeans-numberguess</literal>, a war example, containing only "
"simple beans, and <literal>webbeans-translator</literal> an ear example, "
"containing enterprise beans. To run the examples you'll need the following:"
msgstr "Web Beans RI는 배포 가능한 두 가지 애플리케이션 예로 되어 있습니다: war 예에는 단순한 beans 만이 들어 있는  <literal>webbeans-numberguess</literal>가 있고 ear 예에는 엔터프라이즈 beans가 들어 있는 <literal>webbeans-translator</literal>가 있습니다. 예를 실행하려면, 다음 사항이 필요합니다:       "

#. Tag: para
#: ri.xml:22
#, no-c-format
msgid "the latest release of the Web Beans RI,"
msgstr "최신 Web Beans RI 릴리즈 "

#. Tag: para
#: ri.xml:25
#, no-c-format
msgid "JBoss AS 5.0.0.GA, and"
msgstr "JBoss AS 5.0.0.GA, 및 "

#. Tag: para
#: ri.xml:28
#, no-c-format
msgid "Ant 1.7.0."
msgstr "Ant 1.7.0."

#. Tag: para
#: ri.xml:32
#, no-c-format
msgid ""
"Currently, the Web Beans RI only runs on JBoss Application Server 5. You'll "
"need to download JBoss AS 5.0.0.GA from <ulink url=\"http://www.jboss.org/"
"jbossas/downloads/\">jboss.org</ulink>, and unzip it. For example:"
msgstr ""
"현재, Web Beans RI는 JBoss Application Server 5에서만 실행됩니다. <ulink url=\"http://www.jboss.org/"
"jbossas/downloads/\">jboss.org</ulink>에서 JBoss AS 5.0.0.GA를 다운로드하여 압축 풀기를 합니다. 예:   "

#. Tag: programlisting
#: ri.xml:39
#, no-c-format
msgid ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/jboss-5.0.0.GA.zip]]>"
msgstr ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/jboss-5.0.0.GA.zip]]>"

#. Tag: para
#: ri.xml:41
#, no-c-format
msgid ""
"Next, download the Web Beans RI from <ulink url=\"http://seamframework.org/"
"Download\">seamframework.org</ulink>, and unzip it. For example"
msgstr ""
"다음으로 <ulink url=\"http://seamframework.org/"
"Download\">seamframework.org</ulink>에서 Web Beans RI를 다운로드하여 압축 풀기를 합니다. 예: "

#. Tag: programlisting
#: ri.xml:47
#, no-c-format
msgid ""
"<![CDATA[$ cd ~/\n"
"$ unzip ~/webbeans-1.0.0.ALPHA1.zip]]>"
msgstr ""
"<![CDATA[$ cd ~/\n"
"$ unzip ~/webbeans-1.0.0.ALPHA1.zip]]>"

#. Tag: para
#: ri.xml:50
#, no-c-format
msgid ""
"Next, we need to tell Web Beans where JBoss is located. Edit <literal>jboss-"
"as/build.properties</literal> and set the <literal>jboss.home</literal> "
"property. For example:"
msgstr ""
"다음으로, JBoss가 위치해 있는 곳을 Web Beans에게 알려야 합니다. <literal>jboss-"
"as/build.properties</literal>를 편집하고 <literal>jboss.home</literal> 속성을 설정합니다. 예: "

#. Tag: programlisting
#: ri.xml:56
#, no-c-format
msgid "jboss.home=/Applications/jboss-5.0.0.GA"
msgstr "jboss.home=/Applications/jboss-5.0.0.GA"

#. Tag: para
#: ri.xml:58
#, no-c-format
msgid ""
"As Web Beans is a new piece of software, you need to update JBoss AS to run "
"the Web Beans RI. Future versions of JBoss AS will include these updates, "
"and this step won't be necessary."
msgstr "Web Beans는 새로운 소프트웨어이므로, Web Beans RI를 실행하기 위해 JBoss AS를 업데이트해야 합니다. 향후 JBoss AS 버전에는 이러한 업데이트가 포함되어 있으므로, 이러한 작업 단계는 필요하지 않게 됩니다.  "

#. Tag: para
#: ri.xml:65
#, no-c-format
msgid ""
"Currently, two updates are needed. Firstly, a new deployer, "
"<literal>webbeans.deployer</literal> is added. This adds supports for Web "
"Bean archives to JBoss AS, and allows the Web Beans RI to query the EJB3 "
"container and discover which EJBs are installed in your application. "
"Secondly, an update to JBoss EJB3 is needed."
msgstr ""
"현재, 두 가지 사항을 업데이트해야 합니다. 처음으로, 새로운 개발자 <literal>webbeans.deployer</literal>가 추가되어야 합니다. 이는 JBoss AS에 Web "
"Bean 아카이브 지원을 추가하고 Web Beans RI가 EJB3 컨테이너를 커리하고 애플리케이션에 어떤 EJB가 있는 지를 검색합니다. 두번째로 JBoss EJB3로 업데이트해야 합니다. "

#. Tag: para
#: ri.xml:74
#, no-c-format
msgid ""
"To install the update, you'll need Ant 1.7.0 installed, and the "
"<literal>ANT_HOME</literal> environment variable set. For example:"
msgstr "업데이트를 설치하려면, Ant 1.7.0을 설치하고 <literal>ANT_HOME</literal> 환경 변수 모음을 설치합니다. 예:  "

#. Tag: programlisting
#: ri.xml:79
#, no-c-format
msgid ""
"$ unzip apache-ant-1.7.0.zip\n"
"$ export ANT_HOME=~/apache-ant-1.7.0"
msgstr ""
"$ unzip apache-ant-1.7.0.zip\n"
"$ export ANT_HOME=~/apache-ant-1.7.0"

#. Tag: para
#: ri.xml:81
#, no-c-format
msgid ""
"Then, you can install the update. The update script will use Maven to "
"download the Web Beans and EJB3 automatically."
msgstr "그 다음 업데이트를 설치하실 수 있습니다. 업데이트 스크립트는 Maven을 사용하여 Web Beans 및 EJB3를 자동으로 다운로드합니다. "

#. Tag: programlisting
#: ri.xml:86
#, no-c-format
msgid ""
"$ cd webbeans-1.0.0.ALPHA1/jboss-as\n"
"$ ant update"
msgstr ""
"$ cd webbeans-1.0.0.ALPHA1/jboss-as\n"
"$ ant update"

#. Tag: para
#: ri.xml:88
#, no-c-format
msgid "Now, you're ready to deploy your first example!"
msgstr "이제, 첫번째 예제를 배포할 준비가 되었습니다!    "

#. Tag: para
#: ri.xml:93
#, no-c-format
msgid "The build scripts for the examples offer a number of targets, these are:"
msgstr "예제 용 작성 스크립트는 여러 대상을 제공합니다. 이에는 다음과 같은 것이 있습니다:   "

#. Tag: para
#: ri.xml:99
#, no-c-format
msgid "<literal>ant restart</literal> - deploy the example in exploded format"
msgstr "<literal>ant restart</literal> - exploded format으로 예제를 배포합니다  "

#. Tag: para
#: ri.xml:105
#, no-c-format
msgid ""
"<literal>ant explode</literal> - update an exploded example, without "
"restarting the deployment"
msgstr "<literal>ant explode</literal> - 배포 버전을 다시 시작하지 않고 exploded 예제를 업데이트합니다   "

#. Tag: para
#: ri.xml:111
#, no-c-format
msgid "<literal>ant deploy</literal> - deploy the example in compressed jar format"
msgstr "<literal>ant deploy</literal> - 압축된 jar 포맷으로 예제를 배포합니다 "

#. Tag: para
#: ri.xml:116
#, no-c-format
msgid "<literal>ant undeploy</literal> - remove the example from the server"
msgstr "<literal>ant undeploy</literal> - 서버에서 예제를 제거합니다 "

#. Tag: para
#: ri.xml:121
#, no-c-format
msgid "<literal>ant clean</literal> - clean the example"
msgstr "<literal>ant clean</literal> - 예제를 지웁니다 "

#. Tag: para
#: ri.xml:128
#, no-c-format
msgid "To deploy the numberguess example:"
msgstr "numberguess 예제를 배포하려면:  "

#. Tag: programlisting
#: ri.xml:132
#, no-c-format
msgid ""
"$ cd examples/numberguess\n"
"ant deploy"
msgstr ""
"$ cd examples/numberguess\n"
"ant deploy"

#. Tag: para
#: ri.xml:134
#, no-c-format
msgid ""
"Wait for the application to deploy, and enjoy hours of fun at <ulink url="
"\"http://localhost:8080/webbeans-numberguess\"></ulink>!"
msgstr ""
"애플리케이션이 배포되면 <ulink url="
"\"http://localhost:8080/webbeans-numberguess\"></ulink>에서 살펴보시기 바랍니다! "

#. Tag: para
#: ri.xml:139
#, no-c-format
msgid ""
"The Web Beans RI includes a second simple example that will translate your "
"text into Latin. The numberguess example is a war example, and uses only "
"simple beans; the translator example is an ear example, and includes "
"enterprise beans, packaged in an EJB module. To try it out:"
msgstr "Web Beans RI에는 텍스트를 라틴어로 번역하는 두 번째 예제가 있습니다. numberguess 예제는 war 예제로 단순한 beans 만을 사용합니다; 번역 예제는 ear 예제로 엔터프라이즈 beans에 포함되어 EJB 모듈에 패키지되어 있습니다. 이를 꺼내려면 다음을 실행합니다:    "

#. Tag: programlisting
#: ri.xml:146
#, no-c-format
msgid ""
"$ cd examples/translator\n"
"ant deploy"
msgstr ""
"$ cd examples/translator\n"
"ant deploy"

#. Tag: para
#: ri.xml:148
#, no-c-format
msgid ""
"Wait for the application to deploy, and visit <ulink url=\"http://"
"localhost:8080/webbeans-translator\"></ulink>!"
msgstr ""
"애플리케이션이 배포되면 <ulink url=\"http://"
"localhost:8080/webbeans-translator\"></ulink>에 가보십시오! "

#. Tag: title
#: ri.xml:154
#, no-c-format
msgid "The numberguess example"
msgstr "numberguess 예제 "

#. Tag: para
#: ri.xml:156
#, no-c-format
msgid ""
"In the numberguess application you get given 10 attempts to guess a number "
"between 1 and 100. After each attempt, you will be told whether you are too "
"high, or too low."
msgstr "numberguess 애플리케이션에서 1에서 100사이의 숫자를 알아내기 위해 주어진 10 번을 시도하게 됩니다. 각각 시도한 후 숫자가 너무 높은지 또는 너무 낮은지를 알려주게 됩니다. "

#. Tag: para
#: ri.xml:162
#, no-c-format
msgid ""
"The numberguess example is comprised of a number of Web Beans, configuration "
"files, and Facelet JSF pages, packaged as a war. Let's start with the "
"configuration files."
msgstr "numberguess 예제는 여러 Web Beans, 설정 파일, Facelet JSF 페이지로 구성되어 있으며, war로 패키지되어 있습니다 설정 파일부터 시작합시다. "

#. Tag: para
#: ri.xml:168
#, no-c-format
msgid ""
"All the configuration files for this example are located in <literal>WEB-INF/"
"</literal>, which is stored in <literal>WebContent</literal> in the source "
"tree. First, we have <literal>faces-config.xml</literal>, in which we tell "
"JSF to use Facelets:"
msgstr "예제에 해당하는 모든 설정 파일은 <literal>WEB-INF/</literal>에 위치해 있으며, 이는 소스 트리에 있는 <literal>WebContent</literal>에 저장되어 있습니다. 먼저, <literal>faces-config.xml</literal>을 사용하여, Facelets를 사용할 JSF를 알려주게 됩니다:   "

#. Tag: programlisting
#: ri.xml:176
#, no-c-format
msgid ""
"<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
"<faces-config version=\"1.2\"\n"
"              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
"    \n"
"    <application>\n"
"        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
"    </application>\n"
"\n"
"</faces-config>]]>"
msgstr ""
"<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
"<faces-config version=\"1.2\"\n"
"              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
"    \n"
"    <application>\n"
"        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
"    </application>\n"
"\n"
"</faces-config>]]>"

#. Tag: para
#: ri.xml:178
#, no-c-format
msgid ""
"There is an empty <literal>web-beans.xml</literal> file, which marks this "
"application as a Web Beans application."
msgstr "여기에는 빈 <literal>web-beans.xml</literal> 파일이 있어, 이는 Web Beans 애플리케이션으로 애플리케이션을 표시합니다. "

#. Tag: para
#: ri.xml:183
#, no-c-format
msgid "Finally there is <literal>web.xml</literal>:"
msgstr "마지막으로, <literal>web.xml</literal> 파일이 있습니다:  "

#. Tag: section
#: ri.xml:185
#, no-c-format
msgid ""
"<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> "
"<area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default."
"suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area "
"id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA"
"[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"\n"
"<web-app version=\"2.5\"\n"
"    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun."
"com/xml/ns/javaee/web-app_2_5.xsd\">\n"
"   \n"
"   <display-name>Web Beans Numbergues example</display-name>\n"
"\n"
"   <!-- JSF -->\n"
"\n"
"   <servlet>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
"      <load-on-startup>1</load-on-startup>\n"
"   </servlet>\n"
"\n"
"   <servlet-mapping>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <url-pattern>*.jsf</url-pattern>\n"
"   </servlet-mapping>\n"
"   \n"
"   <context-param>\n"
"      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
"      <param-value>.xhtml</param-value>\n"
"   </context-param>\n"
"\n"
"   <session-config>\n"
"      <session-timeout>10</session-timeout>\n"
"   </session-config>\n"
"\n"
"</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces."
"servlet\"> <para> Enable and load the JSF servlet </para> </callout> "
"<callout arearefs=\"faces.servlet.mapping\"> <para> Configure requests to "
"<literal>.jsf</literal> pages to be handled by JSF </para> </callout> "
"<callout arearefs=\"faces.default.suffix\"> <para> Tell JSF that we will be "
"giving our source files (facelets) an extension of <literal>.jsf</literal> </"
"para> </callout> <callout arearefs=\"session.timeout\"> <para> Configure a "
"session timeout of 10 minutes </para> </callout> </calloutlist> </"
"programlistingco> <note> <para> Whilst this demo is a JSF demo, you can use "
"the Web Beans RI with any Servlet based web framework. </para> </note> "
"<para> Let's take a look at the Facelet view: </para> <programlistingco> "
"<areaspec> <area id=\"template\" coords=\"8\"/> <area id=\"messages\" coords="
"\"12\"/> <area id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords="
"\"25\"/> <area id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords="
"\"33\"/> </areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//"
"W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/"
"xhtml1-transitional.dtd\">\n"
"<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
"    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
"    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
"    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
"\n"
"  <ui:composition template=\"template.xhtml\">\n"
"    <ui:define name=\"content\">\n"
"       <h1>Guess a number...</h1>\n"
"       <h:form id=\"NumberGuessMain\">\n"
"          <div style=\"color: red\">\n"
"             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
"             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game."
"number gt game.guess and game.guess ne 0}\"/>\n"
"             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game."
"number lt game.guess and game.guess ne 0}\"/>\n"
"          </div>\n"
"   \n"
"          <div>\n"
"             I'm thinking of a number between #{game.smallest} and #{game."
"biggest}.\n"
"             You have #{game.remainingGuesses} guesses.\n"
"          </div>\n"
"     \n"
"          <div>\n"
"             Your guess: \n"
"             <h:inputText id=\"inputGuess\" \n"
"                          value=\"#{game.guess}\" \n"
"                          required=\"true\" \n"
"                          size=\"3\" \n"
"                          disabled=\"#{game.number eq game.guess}\">\n"
"                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
"                                     minimum=\"#{game.smallest}\"/>\n"
"             </h:inputText>\n"
"            <h:commandButton id=\"GuessButton\"  \n"
"                             value=\"Guess\" \n"
"                             action=\"#{game.check}\" \n"
"                             disabled=\"#{game.number eq game.guess}\"/>\n"
"          </div>\n"
"          <div>\n"
"            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#"
"{game.reset}\" immediate=\"true\" />\n"
"          </div>\n"
"       </h:form>\n"
"    </ui:define>\n"
"  </ui:composition>\n"
"</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> "
"<para> Facelets is a templating language for JSF, here we are wrapping our "
"page in a template which defines the header. </para> </callout> <callout "
"arearefs=\"messages\"> <para> There are a number of messages which can be "
"sent to the user, \"Higher!\", \"Lower!\" and \"Correct!\" </para> </"
"callout> <callout arearefs=\"instructions\"> <para> As the user guesses, the "
"range of numbers they can guess gets smaller - this sentance changes to make "
"sure they know what range to guess in. </para> </callout> <callout arearefs="
"\"guess\"> <para> This input field is bound to a Web Bean, using the value "
"expression. </para> </callout> <callout arearefs=\"validator\"> <para> A "
"range validator is used to make sure the user doesn't accidentally input a "
"number outside of the range in which they can guess - if the validator "
"wasn't here, the user might use up a guess on an out of range number. </"
"para> </callout> <callout arearefs=\"submit\"> <para> And, of course, there "
"must be a way for the user to send their guess to the server. Here we bind "
"to an action method on the Web Bean. </para> </callout> </calloutlist> </"
"programlistingco>"
msgstr ""
"<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> "
"<area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default."
"suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area "
"id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA"
"[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"\n"
"<web-app version=\"2.5\"\n"
"    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun."
"com/xml/ns/javaee/web-app_2_5.xsd\">\n"
"   \n"
"   <display-name>Web Beans Numbergues example</display-name>\n"
"\n"
"   <!-- JSF -->\n"
"\n"
"   <servlet>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
"      <load-on-startup>1</load-on-startup>\n"
"   </servlet>\n"
"\n"
"   <servlet-mapping>\n"
"      <servlet-name>Faces Servlet</servlet-name>\n"
"      <url-pattern>*.jsf</url-pattern>\n"
"   </servlet-mapping>\n"
"   \n"
"   <context-param>\n"
"      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
"      <param-value>.xhtml</param-value>\n"
"   </context-param>\n"
"\n"
"   <session-config>\n"
"      <session-timeout>10</session-timeout>\n"
"   </session-config>\n"
"\n"
"</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces."
"servlet\"> <para> Enable and load the JSF servlet </para> </callout> "
"<callout arearefs=\"faces.servlet.mapping\"> <para> Configure requests to "
"<literal>.jsf</literal> pages to be handled by JSF </para> </callout> "
"<callout arearefs=\"faces.default.suffix\"> <para> Tell JSF that we will be "
"giving our source files (facelets) an extension of <literal>.jsf</literal> </"
"para> </callout> <callout arearefs=\"session.timeout\"> <para> Configure a "
"session timeout of 10 minutes </para> </callout> </calloutlist> </"
"programlistingco> <note> <para> Whilst this demo is a JSF demo, you can use "
"the Web Beans RI with any Servlet based web framework. </para> </note> "
"<para> Let's take a look at the Facelet view: </para> <programlistingco> "
"<areaspec> <area id=\"template\" coords=\"8\"/> <area id=\"messages\" coords="
"\"12\"/> <area id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords="
"\"25\"/> <area id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords="
"\"33\"/> </areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//"
"W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/"
"xhtml1-transitional.dtd\">\n"
"<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
"    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
"    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
"    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
"\n"
"  <ui:composition template=\"template.xhtml\">\n"
"    <ui:define name=\"content\">\n"
"       <h1>Guess a number...</h1>\n"
"       <h:form id=\"NumberGuessMain\">\n"
"          <div style=\"color: red\">\n"
"             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
"             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game."
"number gt game.guess and game.guess ne 0}\"/>\n"
"             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game."
"number lt game.guess and game.guess ne 0}\"/>\n"
"          </div>\n"
"   \n"
"          <div>\n"
"             I'm thinking of a number between #{game.smallest} and #{game."
"biggest}.\n"
"             You have #{game.remainingGuesses} guesses.\n"
"          </div>\n"
"     \n"
"          <div>\n"
"             Your guess: \n"
"             <h:inputText id=\"inputGuess\" \n"
"                          value=\"#{game.guess}\" \n"
"                          required=\"true\" \n"
"                          size=\"3\" \n"
"                          disabled=\"#{game.number eq game.guess}\">\n"
"                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
"                                     minimum=\"#{game.smallest}\"/>\n"
"             </h:inputText>\n"
"            <h:commandButton id=\"GuessButton\"  \n"
"                             value=\"Guess\" \n"
"                             action=\"#{game.check}\" \n"
"                             disabled=\"#{game.number eq game.guess}\"/>\n"
"          </div>\n"
"          <div>\n"
"            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#"
"{game.reset}\" immediate=\"true\" />\n"
"          </div>\n"
"       </h:form>\n"
"    </ui:define>\n"
"  </ui:composition>\n"
"</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> "
"<para> Facelets is a templating language for JSF, here we are wrapping our "
"page in a template which defines the header. </para> </callout> <callout "
"arearefs=\"messages\"> <para> There are a number of messages which can be "
"sent to the user, \"Higher!\", \"Lower!\" and \"Correct!\" </para> </"
"callout> <callout arearefs=\"instructions\"> <para> As the user guesses, the "
"range of numbers they can guess gets smaller - this sentance changes to make "
"sure they know what range to guess in. </para> </callout> <callout arearefs="
"\"guess\"> <para> This input field is bound to a Web Bean, using the value "
"expression. </para> </callout> <callout arearefs=\"validator\"> <para> A "
"range validator is used to make sure the user doesn't accidentally input a "
"number outside of the range in which they can guess - if the validator "
"wasn't here, the user might use up a guess on an out of range number. </"
"para> </callout> <callout arearefs=\"submit\"> <para> And, of course, there "
"must be a way for the user to send their guess to the server. Here we bind "
"to an action method on the Web Bean. </para> </callout> </calloutlist> </"
"programlistingco>"

#. Tag: para
#: ri.xml:287
#, no-c-format
msgid ""
"The example exists of 4 classes, the first two of which are binding types. "
"First, there is the <literal>@Random</literal> binding type, used for "
"injecting a random number:"
msgstr "예제에는 4 개의 클래스가 존재합니다, 첫 번째 두 개는 바인딩 유형입니다. 먼저, 임의의 숫자를 삽입하기 위해 사용되는 <literal>@Random</literal> 바인딩 유형이 있습니다:      "

#. Tag: programlisting
#: ri.xml:293
#, no-c-format
msgid ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface Random {}]]>"
msgstr ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface Random {}]]>"

#. Tag: para
#: ri.xml:295
#, no-c-format
msgid ""
"There is also the <literal>@MaxNumber</literal> binding type, used for "
"injecting the maximum number that can be injected:"
msgstr "삽입될 수 있는 최대 번호 삽입하기 위해 사용되는 <literal>@MaxNumber</literal> 바인딩 유형도 있습니다:       "

#. Tag: programlisting
#: ri.xml:300
#, no-c-format
msgid ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface MaxNumber {}\n"
"]]>"
msgstr ""
"<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@BindingType\n"
"public @interface MaxNumber {}\n"
"]]>"

#. Tag: para
#: ri.xml:302
#, no-c-format
msgid ""
"The <literal>Generator</literal> class is responsible for creating the "
"random number, via a producer method. It also exposes the maximum possible "
"number via a producer method:"
msgstr "<literal>Generator</literal> 클래스는 생산자 방식을 통해 임의의 숫자를 생성해야 할 책임이 있습니다. 또한 이는 생산자 방식을 통하여 가능한 최대 숫자를 나타냅니다:  "

#. Tag: programlisting
#: ri.xml:308
#, no-c-format
msgid ""
"<![CDATA[@ApplicationScoped\n"
"public class Generator {\n"
"   \n"
"   private java.util.Random random = new java.util.Random( System."
"currentTimeMillis() );\n"
"   \n"
"   private int maxNumber = 100;\n"
"   \n"
"   java.util.Random getRandom()\n"
"   {\n"
"      return random;\n"
"   }\n"
"   \n"
"   @Produces @Random int next() { \n"
"      return getRandom().nextInt(maxNumber); \n"
"   }\n"
"   \n"
"   @Produces @MaxNumber int getMaxNumber()\n"
"   {\n"
"      return maxNumber;\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@ApplicationScoped\n"
"public class Generator {\n"
"   \n"
"   private java.util.Random random = new java.util.Random( System."
"currentTimeMillis() );\n"
"   \n"
"   private int maxNumber = 100;\n"
"   \n"
"   java.util.Random getRandom()\n"
"   {\n"
"      return random;\n"
"   }\n"
"   \n"
"   @Produces @Random int next() { \n"
"      return getRandom().nextInt(maxNumber); \n"
"   }\n"
"   \n"
"   @Produces @MaxNumber int getMaxNumber()\n"
"   {\n"
"      return maxNumber;\n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: ri.xml:310
#, no-c-format
msgid ""
"You'll notice that the <literal>Generator</literal> is application scoped; "
"therefore we don't get a different random each time."
msgstr "<literal>Generator</literal>는 애플리케이션 범위로 되어 있음을 발견하실 것입니다; 따라서 매번 다른 임의 숫자를 갖지 않게 됩니다. "

#. Tag: para
#: ri.xml:315
#, no-c-format
msgid ""
"The final Web Bean in the application is the session scoped <literal>Game</"
"literal>."
msgstr "애플리케이션에 있는 마지막 Web Bean은 <literal>Game</literal> 범위 세션입니다. "

#. Tag: para
#: ri.xml:320
#, no-c-format
msgid ""
"You'll note that we've used the <literal>@Named</literal> annotation, so "
"that we can use the bean through EL in the JSF page. Finally, we've used "
"constructor injection to initialize the game with a random number. And of "
"course, we need to tell the player when they've won, so we give feedback "
"with a <literal>FacesMessage</literal>."
msgstr ""

#. Tag: programlisting
#: ri.xml:328
#, no-c-format
msgid ""
"<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
"\n"
"\n"
"import javax.annotation.PostConstruct;\n"
"import javax.faces.application.FacesMessage;\n"
"import javax.faces.context.FacesContext;\n"
"import javax.webbeans.AnnotationLiteral;\n"
"import javax.webbeans.Current;\n"
"import javax.webbeans.Initializer;\n"
"import javax.webbeans.Named;\n"
"import javax.webbeans.SessionScoped;\n"
"import javax.webbeans.manager.Manager;\n"
"\n"
"@Named\n"
"@SessionScoped\n"
"public class Game\n"
"{\n"
"   private int number;\n"
"   \n"
"   private int guess;\n"
"   private int smallest;\n"
"   private int biggest;\n"
"   private int remainingGuesses;\n"
"   \n"
"   @Current Manager manager;\n"
"   \n"
"   public Game()\n"
"   {\n"
"   }\n"
"   \n"
"   @Initializer\n"
"   Game(@MaxNumber int maxNumber)\n"
"   {      \n"
"      this.biggest = maxNumber;\n"
"   }\n"
"\n"
"   public int getNumber()\n"
"   {\n"
"      return number;\n"
"   }\n"
"   \n"
"   public int getGuess()\n"
"   {\n"
"      return guess;\n"
"   }\n"
"   \n"
"   public void setGuess(int guess)\n"
"   {\n"
"      this.guess = guess;\n"
"   }\n"
"   \n"
"   public int getSmallest()\n"
"   {\n"
"      return smallest;\n"
"   }\n"
"   \n"
"   public int getBiggest()\n"
"   {\n"
"      return biggest;\n"
"   }\n"
"   \n"
"   public int getRemainingGuesses()\n"
"   {\n"
"      return remainingGuesses;\n"
"   }\n"
"   \n"
"   public String check()\n"
"   {\n"
"      if (guess>number)\n"
"      {\n"
"         biggest = guess - 1;\n"
"      }\n"
"      if (guess<number)\n"
"      {\n"
"         smallest = guess + 1;\n"
"      }\n"
"      if (guess == number)\n"
"      {\n"
"         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage"
"(\"Correct!\"));\n"
"      }\n"
"      remainingGuesses--;\n"
"      return null;\n"
"   }\n"
"   \n"
"   @PostConstruct\n"
"   public void reset()\n"
"   {\n"
"      this.smallest = 0;\n"
"      this.guess = 0;\n"
"      this.remainingGuesses = 10;\n"
"      this.number = manager.getInstanceByType(Integer.class, new "
"AnnotationLiteral<Random>(){});\n"
"   }\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
"\n"
"\n"
"import javax.annotation.PostConstruct;\n"
"import javax.faces.application.FacesMessage;\n"
"import javax.faces.context.FacesContext;\n"
"import javax.webbeans.AnnotationLiteral;\n"
"import javax.webbeans.Current;\n"
"import javax.webbeans.Initializer;\n"
"import javax.webbeans.Named;\n"
"import javax.webbeans.SessionScoped;\n"
"import javax.webbeans.manager.Manager;\n"
"\n"
"@Named\n"
"@SessionScoped\n"
"public class Game\n"
"{\n"
"   private int number;\n"
"   \n"
"   private int guess;\n"
"   private int smallest;\n"
"   private int biggest;\n"
"   private int remainingGuesses;\n"
"   \n"
"   @Current Manager manager;\n"
"   \n"
"   public Game()\n"
"   {\n"
"   }\n"
"   \n"
"   @Initializer\n"
"   Game(@MaxNumber int maxNumber)\n"
"   {      \n"
"      this.biggest = maxNumber;\n"
"   }\n"
"\n"
"   public int getNumber()\n"
"   {\n"
"      return number;\n"
"   }\n"
"   \n"
"   public int getGuess()\n"
"   {\n"
"      return guess;\n"
"   }\n"
"   \n"
"   public void setGuess(int guess)\n"
"   {\n"
"      this.guess = guess;\n"
"   }\n"
"   \n"
"   public int getSmallest()\n"
"   {\n"
"      return smallest;\n"
"   }\n"
"   \n"
"   public int getBiggest()\n"
"   {\n"
"      return biggest;\n"
"   }\n"
"   \n"
"   public int getRemainingGuesses()\n"
"   {\n"
"      return remainingGuesses;\n"
"   }\n"
"   \n"
"   public String check()\n"
"   {\n"
"      if (guess>number)\n"
"      {\n"
"         biggest = guess - 1;\n"
"      }\n"
"      if (guess<number)\n"
"      {\n"
"         smallest = guess + 1;\n"
"      }\n"
"      if (guess == number)\n"
"      {\n"
"         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage"
"(\"Correct!\"));\n"
"      }\n"
"      remainingGuesses--;\n"
"      return null;\n"
"   }\n"
"   \n"
"   @PostConstruct\n"
"   public void reset()\n"
"   {\n"
"      this.smallest = 0;\n"
"      this.guess = 0;\n"
"      this.remainingGuesses = 10;\n"
"      this.number = manager.getInstanceByType(Integer.class, new "
"AnnotationLiteral<Random>(){});\n"
"   }\n"
"   \n"
"}]]>"

#. Tag: title
#: ri.xml:332
#, no-c-format
msgid "The translator example"
msgstr "번역 예제 "

#. Tag: para
#: ri.xml:334
#, no-c-format
msgid ""
"The translator example will take any sentences you enter, and translate them "
"to Latin."
msgstr "번역 예제는 입력하신 아무 문장을 가져가 이를 라틴어로 번역합니다. "

#. Tag: para
#: ri.xml:339
#, no-c-format
msgid ""
"The translator example is built as an ear, and contains EJBs. As a result, "
"it's structure is more complex than the numberguess example."
msgstr ""

#. Tag: para
#: ri.xml:345
#, no-c-format
msgid ""
"EJB 3.1 and Jave EE 6 allow you to package EJBs in a war, which will make "
"this structure much simpler!"
msgstr "EJB 3.1 및 Jave EE 6는 EJB를 war로 패키지하게 하여, 이러한 문장을 보다 간단하게 만들게 됩니다! "

#. Tag: para
#: ri.xml:351
#, no-c-format
msgid ""
"First, let's take a look at the ear aggregator, which is located in "
"<literal>webbeans-translator-ear</literal> module. Maven automatically "
"generates the <literal>application.xml</literal> for us:"
msgstr ""

#. Tag: programlisting
#: ri.xml:357
#, no-c-format
msgid ""
"<![CDATA[<plugin>\n"
"   <groupId>org.apache.maven.plugins</groupId>\n"
"   <artifactId>maven-ear-plugin</artifactId>\n"
"   <configuration>\n"
"      <modules>\n"
"         <webModule>\n"
"            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
"            <artifactId>webbeans-translator-war</artifactId>\n"
"            <contextRoot>/webbeans-translator</contextRoot>\n"
"         </webModule>\n"
"      </modules>\n"
"   </configuration>\n"
"</plugin>]]>"
msgstr ""
"<![CDATA[<plugin>\n"
"   <groupId>org.apache.maven.plugins</groupId>\n"
"   <artifactId>maven-ear-plugin</artifactId>\n"
"   <configuration>\n"
"      <modules>\n"
"         <webModule>\n"
"            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
"            <artifactId>webbeans-translator-war</artifactId>\n"
"            <contextRoot>/webbeans-translator</contextRoot>\n"
"         </webModule>\n"
"      </modules>\n"
"   </configuration>\n"
"</plugin>]]>"

#. Tag: para
#: ri.xml:359
#, no-c-format
msgid ""
"Here we set the context path, which gives us a nice url (<ulink url=\"http://"
"localhost:8080/webbeans-translator\">http://localhost:8080/webbeans-"
"translator</ulink>)."
msgstr ""

#. Tag: para
#: ri.xml:365
#, no-c-format
msgid ""
"If you aren't using Maven to generate these files, you would need "
"<literal>META-INF/application.xml</literal>:"
msgstr "Maven을 사용하여 이러한 파일을 생성할 경우, <literal>META-INF/application.xml</literal>이 필요합니다:  "

#. Tag: programlisting
#: ri.xml:370
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
"             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
"             version=\"5\">\n"
"  <display-name>webbeans-translator-ear</display-name>\n"
"  <description>Ear Example for the reference implementation of JSR 299: Web "
"Beans</description>\n"
"  \n"
"  <module>\n"
"    <web>\n"
"      <web-uri>webbeans-translator.war</web-uri>\n"
"      <context-root>/webbeans-translator</context-root>\n"
"    </web>\n"
"  </module>\n"
"  <module>\n"
"    <ejb>webbeans-translator.jar</ejb>\n"
"  </module>\n"
"</application>]]>"
msgstr ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
"             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://"
"java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
"             version=\"5\">\n"
"  <display-name>webbeans-translator-ear</display-name>\n"
"  <description>Ear Example for the reference implementation of JSR 299: Web "
"Beans</description>\n"
"  \n"
"  <module>\n"
"    <web>\n"
"      <web-uri>webbeans-translator.war</web-uri>\n"
"      <context-root>/webbeans-translator</context-root>\n"
"    </web>\n"
"  </module>\n"
"  <module>\n"
"    <ejb>webbeans-translator.jar</ejb>\n"
"  </module>\n"
"</application>]]>"

#. Tag: para
#: ri.xml:373
#, no-c-format
msgid ""
"Next, lets look at the war. Just as in the numberguess example, we have a "
"<literal>faces-config.xml</literal> (to enabled Facelets) and a <literal>web."
"xml</literal> (to enable JSF) in <literal>WebContent/WEB-INF</literal>."
msgstr ""

#. Tag: para
#: ri.xml:380
#, no-c-format
msgid ""
"More intersting is the facelet used to translate text. Just as in the "
"numberguess example we have a template, which surrounds the form (ommitted "
"here for brevity):"
msgstr ""

#. Tag: programlisting
#: ri.xml:386
#, no-c-format
msgid ""
"<![CDATA[<h:form id=\"NumberGuessMain\">\n"
"            \n"
"   <table>\n"
"      <tr align=\"center\" style=\"font-weight: bold\" >\n"
"         <td>\n"
"            Your text\n"
"         </td>\n"
"         <td>\n"
"            Translation\n"
"         </td>\n"
"      </tr>\n"
"      <tr>\n"
"         <td>\n"
"            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" "
"required=\"true\" rows=\"5\" cols=\"80\" />\n"
"         </td>\n"
"         <td>\n"
"            <h:outputText value=\"#{translator.translatedText}\" />\n"
"         </td>\n"
"      </tr>\n"
"   </table>\n"
"   <div>\n"
"      <h:commandButton id=\"button\" value=\"Translate\" action=\"#"
"{translator.translate}\"/>\n"
"   </div>\n"
"   \n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form id=\"NumberGuessMain\">\n"
"            \n"
"   <table>\n"
"      <tr align=\"center\" style=\"font-weight: bold\" >\n"
"         <td>\n"
"            Your text\n"
"         </td>\n"
"         <td>\n"
"            Translation\n"
"         </td>\n"
"      </tr>\n"
"      <tr>\n"
"         <td>\n"
"            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" "
"required=\"true\" rows=\"5\" cols=\"80\" />\n"
"         </td>\n"
"         <td>\n"
"            <h:outputText value=\"#{translator.translatedText}\" />\n"
"         </td>\n"
"      </tr>\n"
"   </table>\n"
"   <div>\n"
"      <h:commandButton id=\"button\" value=\"Translate\" action=\"#"
"{translator.translate}\"/>\n"
"   </div>\n"
"   \n"
"</h:form>]]>"

#. Tag: para
#: ri.xml:388
#, no-c-format
msgid ""
"The user can enter some text in the lefthand textarea, and hit the translate "
"button to see the result to the right."
msgstr ""

#. Tag: para
#: ri.xml:393
#, no-c-format
msgid ""
"Finally, let's look at the ejb module, <literal>webbeans-translator-ejb</"
"literal>. In <literal>src/main/resources/META-INF</literal> there is just an "
"empty <literal>web-beans.xml</literal>, used to mark the archive as "
"containing Web Beans."
msgstr ""

#. Tag: para
#: ri.xml:401
#, no-c-format
msgid ""
"We've saved the most interesting bit to last, the code! The project has two "
"simple beans, <literal>SentenceParser</literal> and <literal>TextTranslator</"
"literal> and two enterprise beans, <literal>TranslatorControllerBean</"
"literal> and <literal>SentenceTranslator</literal>. You should be getting "
"quite familiar with what a Web Bean looks like by now, so we'll just "
"highlight the most interesting bits here."
msgstr ""

#. Tag: para
#: ri.xml:411
#, no-c-format
msgid ""
"Both <literal>SentenceParser</literal> and <literal>TextTranslator</literal> "
"are dependent beans, and <literal>TextTranslator</literal> uses constructor "
"initialization:"
msgstr ""

#. Tag: programlisting
#: ri.xml:417
#, no-c-format
msgid ""
"<![CDATA[public class TextTranslator { \n"
"   private SentenceParser sentenceParser; \n"
"   private Translator sentenceTranslator; \n"
"   \n"
"   @Initializer\n"
"   TextTranslator(SentenceParser sentenceParser, Translator "
"sentenceTranslator) \n"
"   { \n"
"      this.sentenceParser = sentenceParser; \n"
"      this.sentenceTranslator = sentenceTranslator;]]>"
msgstr ""
"<![CDATA[public class TextTranslator { \n"
"   private SentenceParser sentenceParser; \n"
"   private Translator sentenceTranslator; \n"
"   \n"
"   @Initializer\n"
"   TextTranslator(SentenceParser sentenceParser, Translator "
"sentenceTranslator) \n"
"   { \n"
"      this.sentenceParser = sentenceParser; \n"
"      this.sentenceTranslator = sentenceTranslator;]]>"

#. Tag: para
#: ri.xml:419
#, no-c-format
msgid ""
"<literal>TextTranslator</literal> is a stateless bean (with a local business "
"interface), where the magic happens - of course, we couldn't develop a full "
"translator, but we gave it a good go!"
msgstr ""

#. Tag: para
#: ri.xml:425
#, no-c-format
msgid ""
"Finally, there is UI orientated controller, that collects the text from the "
"user, and dispatches it to the translator. This is a request scoped, named, "
"stateful session bean, which injects the translator."
msgstr ""

#. Tag: programlisting
#: ri.xml:431
#, no-c-format
msgid ""
"<![CDATA[@Stateful\n"
"@RequestScoped\n"
"@Named(\"translator\")\n"
"public class TranslatorControllerBean implements TranslatorController\n"
"{\n"
"   \n"
"   @Current TextTranslator translator;]]>"
msgstr ""
"<![CDATA[@Stateful\n"
"@RequestScoped\n"
"@Named(\"translator\")\n"
"public class TranslatorControllerBean implements TranslatorController\n"
"{\n"
"   \n"
"   @Current TextTranslator translator;]]>"

#. Tag: para
#: ri.xml:433
#, no-c-format
msgid "The bean also has getters and setters for all the fields on the page."
msgstr ""

#. Tag: para
#: ri.xml:437
#, no-c-format
msgid "As this is a stateful session bean, we have to have a remove method:"
msgstr ""

#. Tag: programlisting
#: ri.xml:441
#, no-c-format
msgid ""
"<![CDATA[   @Remove\n"
"   public void remove()\n"
"   {\n"
"      \n"
"   }]]>"
msgstr ""
"<![CDATA[   @Remove\n"
"   public void remove()\n"
"   {\n"
"      \n"
"   }]]>"

#. Tag: para
#: ri.xml:443
#, no-c-format
msgid ""
"The Web Beans manager will call the remove method for you when the bean is "
"destroyed; in this case at the end of the request."
msgstr ""

#. Tag: para
#: ri.xml:449
#, no-c-format
msgid ""
"That concludes our short tour of the Web Beans RI examples. For more on the "
"RI, or to help out, please visit <ulink url=\"http://www.seamframework.org/"
"WebBeans/Development\">http://www.seamframework.org/WebBeans/Development</"
"ulink>."
msgstr ""

#. Tag: para
#: ri.xml:455
#, no-c-format
msgid ""
"We need help in all areas - bug fixing, writing new features, writing "
"examples and translating this reference guide."
msgstr ""

