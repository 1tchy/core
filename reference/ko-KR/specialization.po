# translation of specialization.po to Korean
# Language ko-KR translations for Introduction_to_Web_Beans package.
#
# Automatically generated, 2009.
# Eunju Kim <eukim@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: specialization\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-06 11:30+0000\n"
"PO-Revision-Date: 2009-01-23 11:14+1000\n"
"Last-Translator: Eunju Kim <eukim@redhat.com>\n"
"Language-Team: Korean <ko@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"
"Plural-Forms:  nplurals=2; plural=(n!=1);\n\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"

#. Tag: title
#: specialization.xml:4
#, no-c-format
msgid "Specialization"
msgstr "특성화 "

#. Tag: para
#: specialization.xml:6
#, no-c-format
msgid ""
"We've already seen how the Web Beans dependency injection model lets us "
"<emphasis>override</emphasis> the implementation of an API at deployment "
"time. For example, the following enterprise Web Bean provides an "
"implementation of the API <literal>PaymentProcessor</literal> in production:"
msgstr "이미 Web Beans 의존성 삽입 모델은 배치시 API 구현을 <emphasis>덮어쓰기</emphasis> 하게 합니다. 예를 들어, 다음과 같은 엔터프라이즈 Web Bean은 제품에서 API <literal>PaymentProcessor</literal> 구현을 제공합니다:   "

#. Tag: programlisting
#: specialization.xml:11
#, no-c-format
msgid ""
"@CreditCard @Stateless\n"
"public class CreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"
msgstr ""
"@CreditCard @Stateless\n"
"public class CreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"

#. Tag: para
#: specialization.xml:13
#, no-c-format
msgid ""
"But in our staging environment, we override that implementation of "
"<literal>PaymentProcessor</literal> with a different Web Bean:"
msgstr "staging 환경에서, 다른 Web Bean을 사용하여 <literal>PaymentProcessor</literal> 구현을 덮어쓰기 합니다:  "

#. Tag: programlisting
#: specialization.xml:16
#, no-c-format
msgid ""
"@CreditCard @Stateless @Staging\n"
"public class StagingCreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"
msgstr ""
"@CreditCard @Stateless @Staging\n"
"public class StagingCreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"

#. Tag: para
#: specialization.xml:18
#, no-c-format
msgid ""
"What we've tried to do with <literal>StagingCreditCardPaymentProcessor</"
"literal> is to completely replace <literal>AsyncPaymentProcessor</literal> "
"in a particular deployment of the system. In that deployment, the deployment "
"type <literal>@Staging</literal> would have a higher priority than the "
"default deployment type <literal>@Production</literal>, and therefore "
"clients with the following injection point:"
msgstr ""
"<literal>StagingCreditCardPaymentProcessor</literal>를 사용하여 실행하려는 작업은 "
"특정 시스템 배치에 <literal>AsyncPaymentProcessor</literal>를 완전 교체하는 것입니다. 여기서 배치 유형 <literal>@Staging</literal>은 기본값 배치 유형 <literal>@Production</literal> 보다 높은 우선 순위를 갖게 되므로 클라이언트는 다음과 같은 삽입 지점을 사용하게 됩니다:  "

#. Tag: programlisting
#: specialization.xml:24
#, no-c-format
msgid "@CreditCard PaymentProcessor ccpp"
msgstr "@CreditCard PaymentProcessor ccpp"

#. Tag: para
#: specialization.xml:26
#, no-c-format
msgid ""
"Would receive an instance of <literal>StagingCreditCardPaymentProcessor</"
"literal>."
msgstr "<literal>StagingCreditCardPaymentProcessor</literal> 인스턴스를 받고자 합니다. "

#. Tag: para
#: specialization.xml:28
#, no-c-format
msgid "Unfortunately, there are several traps we can easily fall into:"
msgstr "불행하게도 여기에는 몇 가지 함정이 있습니다: "

#. Tag: para
#: specialization.xml:32
#, no-c-format
msgid ""
"the higher-priority Web Bean may not implement all the API types of the Web "
"Bean that it attempts to override,"
msgstr "높은 우선 순위의 Web Bean은 덮어쓰기하려는 Web Bean의 모든 API 유형을 구현할 수 없습니다. "

#. Tag: para
#: specialization.xml:36
#, no-c-format
msgid ""
"the higher-priority Web Bean may not declare all the binding types of the "
"Web Bean that it attempts to override,"
msgstr "높은 우선 순위의 Web Bean은 덮어쓰기하려는 Web Bean의 모든 바인딩 유형을 명시할 수 없습니다. "

#. Tag: para
#: specialization.xml:40
#, no-c-format
msgid ""
"the higher-priority Web Bean might not have the same name as the Web Bean "
"that it attempts to override, or"
msgstr "높은 우선 순위의 Web Bean은 덮어 쓰기하려는 Web Bean과 동일한 이름을 갖을 수 없습니다. "

#. Tag: para
#: specialization.xml:44
#, no-c-format
msgid ""
"the Web Bean that it attempts to override might declare a producer method, "
"disposal method or observer method."
msgstr "덮어쓰기하려는 Web Bean은 생산자 방식, 폐지 방식 또는 옵저버 방식을 명시할 수 있습니다.   "

#. Tag: para
#: specialization.xml:49
#, no-c-format
msgid ""
"In each of these cases, the Web Bean that we tried to override could still "
"be called at runtime. Therefore, overriding is somewhat prone to developer "
"error."
msgstr "이러한 경우, 덮어 쓰기하려는 Web Bean은 런타임시 호출 가능해야 합니다 따라서, 덮어쓰기는 다소 개발자 오류를 초래하는 경우가 있습니다. "

#. Tag: para
#: specialization.xml:52
#, no-c-format
msgid ""
"Web Beans provides a special feature, called <emphasis>specialization</"
"emphasis>, that helps the developer avoid these traps. Specialization looks "
"a little esoteric at first, but it's easy to use in practice, and you'll "
"really appreciate the extra security it provides."
msgstr "Web Beans는 <emphasis>특성화</emphasis>라는 특별 기능을 제공하여, 개발자들이 이러한 함정에 빠지지 않도록 돕습니다. 특성화 기능은 처음에는 조금 난해하게 보이지만, 익숙해 지면 사용하기 쉬우며 제공되는 추가 보안 기능에 만족하실 것입니다.  "

#. Tag: title
#: specialization.xml:58
#, no-c-format
msgid "Using specialization"
msgstr "특성화 기능 사용  "

#. Tag: para
#: specialization.xml:60
#, no-c-format
msgid ""
"Specialization is a feature that is specific to simple and enterprise Web "
"Beans. To make use of specialization, the higher-priority Web Bean must:"
msgstr "특성화는 심플 Web Beans 및 엔터프라이즈 Web Beans에만 있는 기능입니다. 특성화 기능을 사용하려면 높은 우선 순위의 Web Bean은 다음 사항을 따라야 합니다:  "

#. Tag: para
#: specialization.xml:65
#, no-c-format
msgid "be a direct subclass of the Web Bean it overrides, and"
msgstr "덮어쓰기할 Web Bean의 직접적인 하부 클래스가 되어야 합니다. "

#. Tag: para
#: specialization.xml:68
#, no-c-format
msgid ""
"be a simple Web Bean if the Web Bean it overrides is a simple Web Bean or an "
"enterprise Web Bean if the Web Bean it overrides is an enterprise Web Bean, "
"and"
msgstr "덮어쓰기할 Web Bean이 심플 Web Bean일 경우 심플 Web Bean이 되어야 하고 또는 덮어쓰기 할 Web Bean이 엔터프라이즈 Web Bean일 경우 엔터프라이즈 Web Bean이 되어야 합니다  "

#. Tag: para
#: specialization.xml:73
#, no-c-format
msgid "be annotated <literal>@Specializes</literal>."
msgstr "<literal>@Specializes</literal>로 어노테이션되어야 합니다. "

#. Tag: programlisting
#: specialization.xml:77
#, no-c-format
msgid ""
"@Stateless @Staging @Specializes\n"
"public class StagingCreditCardPaymentProcessor \n"
"        extends CreditCardPaymentProcessor {\n"
"    ...\n"
"}"
msgstr ""
"@Stateless @Staging @Specializes\n"
"public class StagingCreditCardPaymentProcessor \n"
"        extends CreditCardPaymentProcessor {\n"
"    ...\n"
"}"

#. Tag: para
#: specialization.xml:79
#, no-c-format
msgid ""
"We say that the higher-priority Web Bean <emphasis>specializes</emphasis> "
"its superclass."
msgstr "높은 우선 순위의 Web Bean이 해당 상위클래스를 <emphasis>특성화</emphasis>한다고 합니다.   "

#. Tag: title
#: specialization.xml:85
#, no-c-format
msgid "Advantages of specialization"
msgstr "특성화 기능의 장점  "

#. Tag: para
#: specialization.xml:87
#, no-c-format
msgid "When specialization is used:"
msgstr "특성화 기능 사용시:  "

#. Tag: para
#: specialization.xml:91
#, no-c-format
msgid ""
"the binding types of the superclass are automatically inherited by the Web "
"Bean annotated <literal>@Specializes</literal>, and"
msgstr ""
"상위클래스의 바인딩 유형은 <literal>@Specializes</literal>로 어노테이션된 Web "
"Bean에 의해 자동으로 상속됩니다   "

#. Tag: para
#: specialization.xml:95
#, no-c-format
msgid ""
"the Web Bean name of the superclass is automatically inherited by the Web "
"Bean annotated <literal>@Specializes</literal>, and"
msgstr ""
"상위클래스의 Web Bean 이름은 <literal>@Specializes</literal>로 어노테이션된 Web "
"Bean에 의해 자동으로 상속됩니다   "

#. Tag: para
#: specialization.xml:99
#, no-c-format
msgid ""
"producer methods, disposal methods and observer methods declared by the "
"superclass are called upon an instance of the Web Bean annotated "
"<literal>@Specializes</literal>."
msgstr "상위클래스에 의해 명시된 생산자 방식, 폐지 방식 및 옵저버 방식은 <literal>@Specializes</literal>로 어노테이션된 Web Bean 인스턴스를 호출합니다.   "

#. Tag: para
#: specialization.xml:105
#, no-c-format
msgid ""
"In our example, the binding type <literal>@CreditCard</literal> of "
"<literal>CreditCardPaymentProcessor</literal> is inherited by "
"<literal>StagingCreditCardPaymentProcessor</literal>."
msgstr "예에서 <literal>CreditCardPaymentProcessor</literal>의 <literal>@CreditCard</literal> 바인딩 유형은 <literal>StagingCreditCardPaymentProcessor</literal>에 의해 전승됩니다. "

#. Tag: para
#: specialization.xml:109
#, no-c-format
msgid "Furthermore, the Web Bean manager will validate that:"
msgstr "Web Bean 관리자는 다음 사항을 유효화합니다:  "

#. Tag: para
#: specialization.xml:113
#, no-c-format
msgid ""
"all API types of the superclass are API types of the Web Bean annotated "
"<literal>@Specializes</literal> (all local interfaces of the superclass "
"enterprise bean are also local interfaces of the subclass),"
msgstr "상위클래스의 모든 API 유형은 <literal>@Specializes</literal>로 어노테이션된 Web Bean의 API 유형입니다 (상위클래스 엔터프라이즈 빈의 모든 로컬 인터페이스는 하부클래스의 로컬 인터페이스도 됩니다)   "

#. Tag: para
#: specialization.xml:119
#, no-c-format
msgid ""
"the deployment type of the Web Bean annotated <literal>@Specializes</"
"literal> has a higher precedence than the deployment type of the superclass, "
"and"
msgstr "<literal>@Specializes</literal>로 어노테이션된 Web Bean의 배치 유형은 상위클래스의 배치 유형보다 높은 우선 순위를 갖습니다   "

#. Tag: para
#: specialization.xml:124
#, no-c-format
msgid "there is no other enabled Web Bean that also specializes the superclass."
msgstr "상위클래스를 특성화하는 활성화된 Web Bean이 없습니다.   "

#. Tag: para
#: specialization.xml:129
#, no-c-format
msgid ""
"If any of these conditions are violated, the Web Bean manager throws an "
"exception at initialization time."
msgstr "이러한 조건을 위반할 경우, Web Bean 관리자는 초기화시 예외 처리를 넘기게 됩니다.   "

#. Tag: para
#: specialization.xml:132
#, no-c-format
msgid ""
"Therefore, we can be certain that the superclass will <emphasis>never</"
"emphasis> be called in any deployment of the system where the Web Bean "
"annotated <literal>@Specializes</literal> is deployed and enabled."
msgstr "따라서, <literal>@Specializes</literal>라고 어노테이션된 Web Bean이 배치되어 활성화된 시스템의 어떤 배치에서도 상위클래스는 <emphasis>절대로</emphasis> 호출되지 않음을 확인할 수 있습니다.    "

