# translation of ee.po to Korean
# Language ko-KR translations for Introduction_to_Web_Beans package.
#
# Automatically generated, 2009.
# Eunju Kim <eukim@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: ee\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-06 11:30+0000\n"
"PO-Revision-Date: 2009-01-15 02:17+1000\n"
"Last-Translator: Eunju Kim <eukim@redhat.com>\n"
"Language-Team: Korean <ko@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"
"Plural-Forms:  nplurals=2; plural=(n!=1);\n\n"
"\n"
"\n"
"\n"

#. Tag: title
#: ee.xml:4
#, no-c-format
msgid "Java EE integration"
msgstr "Java EE 통합 "

#. Tag: para
#: ee.xml:6
#, no-c-format
msgid ""
"Web Beans is fully integrated into the Java EE environment. Web Beans have "
"access to Java EE resources and JPA persistence contexts. They may be used "
"in Unified EL expressions in JSF and JSP pages. They may even be injected "
"into some objects, such as Servlets and Message-Driven Beans, which are not "
"Web Beans."
msgstr "Web Beans는 Java EE 환경으로 완전 통합됩니다. Web Beans는 Java EE 리소스 및 JPA 지속성 컨텍스트로 액세스합니다. 이는 JSF 및 JSP 페이지에서 Unified EL 표현식으로 사용될 수 있습니다. 이는 Web Beans가 아닌 Servlets 및  Message-Driven Beans와 같은 일부 객체로 삽입될 수 도 있습니다. "

#. Tag: title
#: ee.xml:12
#, no-c-format
msgid "Injecting Java EE resources into a Web Bean"
msgstr "Java EE 리소스를 Web Bean으로 삽입 "

#. Tag: para
#: ee.xml:14
#, no-c-format
msgid ""
"All simple and enterprise Web Beans may take advantage of Java EE dependency "
"injection using <literal>@Resource</literal>, <literal>@EJB</literal> and "
"<literal>@PersistenceContext</literal>. We've already seen a couple of "
"examples of this, though we didn't pay much attention at the time:"
msgstr "모든 엔터프라이즈 Web Beans는 <literal>@Resource</literal>, <literal>@EJB</literal>, <literal>@PersistenceContext</literal>를 사용하여 Java EE 의존성 삽입의 장점을 취할 수 있습니다. 이미 이에 대한 몇몇 예를 살펴보았습니다: "

#. Tag: programlisting
#: ee.xml:19
#, no-c-format
msgid ""
"<![CDATA[@Transactional @Interceptor\n"
"public class TransactionInterceptor {\n"
"\n"
"    @Resource Transaction transaction;\n"
"\n"
"    @AroundInvoke public Object manageTransaction(InvocationContext ctx) "
"{ ... }\n"
"    \n"
"}]]>"
msgstr ""
"<![CDATA[@Transactional @Interceptor\n"
"public class TransactionInterceptor {\n"
"\n"
"    @Resource Transaction transaction;\n"
"\n"
"    @AroundInvoke public Object manageTransaction(InvocationContext ctx) "
"{ ... }\n"
"    \n"
"}]]>"

#. Tag: programlisting
#: ee.xml:21
#, no-c-format
msgid ""
"<![CDATA[@SessionScoped\n"
"public class Login {\n"
"\n"
"    @Current Credentials credentials;\n"
"    @PersistenceContext EntityManager userDatabase;\n"
"    \n"
"    ...\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@SessionScoped\n"
"public class Login {\n"
"\n"
"    @Current Credentials credentials;\n"
"    @PersistenceContext EntityManager userDatabase;\n"
"    \n"
"    ...\n"
"\n"
"}]]>"

#. Tag: para
#: ee.xml:23
#, no-c-format
msgid ""
"The Java EE <literal>@PostConstruct</literal> and <literal>@PreDestroy</"
"literal> callbacks are also supported for all simple and enterprise Web "
"Beans. The <literal>@PostConstruct</literal> method is called after "
"<emphasis>all</emphasis> injection has been performed."
msgstr "Java EE <literal>@PostConstruct</literal> 및 <literal>@PreDestroy</literal> 콜백은 모든 엔터프라이즈 Web Beans에 대해 지원됩니다. <emphasis>모든</emphasis> 삽입이 실행된 후 <literal>@PostConstruct</literal> 방식이 호출됩니다. "

#. Tag: para
#: ee.xml:28
#, no-c-format
msgid ""
"There is one restriction to be aware of here: <literal>@PersistenceContext"
"(type=EXTENDED)</literal> is not supported for simple Web Beans."
msgstr ""
"여기서 유의해야 할 한 가지 제한 사항이 있습니다: <literal>@PersistenceContext"
"(type=EXTENDED)</literal>는 단순한 Web Beans에 대해 지원되지 않습니다. "

#. Tag: title
#: ee.xml:35
#, no-c-format
msgid "Calling a Web Bean from a Servlet"
msgstr "Servlet에서 Web Bean 호출 "

#. Tag: para
#: ee.xml:37
#, no-c-format
msgid ""
"It's easy to use a Web Bean from a Servlet in Java EE 6. Simply inject the "
"Web Bean using Web Beans field or initializer method injection."
msgstr "Java EE 6에 있는 Servlet에서 Web Bean을 사용하기가 쉽습니다. Web Beans 영역 또는 초기화 방식 삽입을 사용하여 Web Bean을 삽입합니다. "

#. Tag: programlisting
#: ee.xml:40
#, no-c-format
msgid ""
"public class Login extends HttpServlet {\n"
"\n"
"    @Current Credentials credentials;\n"
"    @Current Login login;\n"
"\n"
"    @Override\n"
"    public void service(HttpServletRequest request, HttpServletResponse "
"response)\n"
"        throws ServletException, IOException {\n"
"        credentials.setUsername( request.getAttribute(\"username\") ):\n"
"        credentials.setPassword( request.getAttribute(\"password\") ):\n"
"        login.login();\n"
"        if ( login.isLoggedIn() ) {\n"
"            response.sendRedirect(\"/home.jsp\");\n"
"        }\n"
"        else {\n"
"            response.sendRedirect(\"/loginError.jsp\");\n"
"        }\n"
"    }\n"
"            \n"
"}"
msgstr ""
"public class Login extends HttpServlet {\n"
"\n"
"    @Current Credentials credentials;\n"
"    @Current Login login;\n"
"\n"
"    @Override\n"
"    public void service(HttpServletRequest request, HttpServletResponse "
"response)\n"
"        throws ServletException, IOException {\n"
"        credentials.setUsername( request.getAttribute(\"username\") ):\n"
"        credentials.setPassword( request.getAttribute(\"password\") ):\n"
"        login.login();\n"
"        if ( login.isLoggedIn() ) {\n"
"            response.sendRedirect(\"/home.jsp\");\n"
"        }\n"
"        else {\n"
"            response.sendRedirect(\"/loginError.jsp\");\n"
"        }\n"
"    }\n"
"            \n"
"}"

#. Tag: para
#: ee.xml:42
#, no-c-format
msgid ""
"The Web Beans client proxy takes care of routing method invocations from the "
"Servlet to the correct instances of <literal>Credentials</literal> and "
"<literal>Login</literal> for the current request and HTTP session."
msgstr "Web Beans 클라이언트 프록시는 Servlet에서 현재 요청 및 메소드 HTTP 세션의 올바른 <literal>Credentials</literal> 및 <literal>Login</literal> 인스턴스로 호출을 라우팅을 처리합니다.  "

#. Tag: title
#: ee.xml:49
#, no-c-format
msgid "Calling a Web Bean from a Message-Driven Bean"
msgstr "Message-Driven Bean에서 Web Bean 호출 "

#. Tag: para
#: ee.xml:51
#, no-c-format
msgid ""
"Web Beans injection applies to all EJBs, even when they aren't under the "
"control of the Web Bean manager (if they were obtained by direct JNDI "
"lookup, or injection using <literal>@EJB</literal>, for example. In "
"particular, you can use Web Beans injection in Message-Driven Beans, which "
"are not considered Web Beans because you can't inject them."
msgstr "Web Beans 삽입은 모든 EJB에 적용되며, Web Bean 관리자 제어 하에 있지 않을 경우에도 (예들 들어, JNDI lookup에 의해 획득되었거나 <literal>@EJB</literal>를 사용하여 삽입되었을 경우) 적용됩니다. 특히, Message-Driven Beans에서 Web Beans 삽입을 사용할 수 있으며, 이를 삽입할 수 없기 때문에 이는 Web Beans를 고려하지 않습니다. "

#. Tag: para
#: ee.xml:57
#, no-c-format
msgid "You can even use Web Beans interceptor bindings for Message-Driven Beans."
msgstr "Message-Driven Beans에 대한 Web Beans 인터셉터 바인딩을 사용할 수 있습니다.  "

#. Tag: programlisting
#: ee.xml:59
#, no-c-format
msgid ""
"@Transactional @MessageDriven\n"
"public class ProcessOrder implements MessageListener {\n"
"\n"
"    @Current Inventory inventory;\n"
"    @PersistenceContext EntityManager em;\n"
"\n"
"    public void onMessage(Message message) {\n"
"        ...\n"
"    }\n"
"            \n"
"}"
msgstr ""
"@Transactional @MessageDriven\n"
"public class ProcessOrder implements MessageListener {\n"
"\n"
"    @Current Inventory inventory;\n"
"    @PersistenceContext EntityManager em;\n"
"\n"
"    public void onMessage(Message message) {\n"
"        ...\n"
"    }\n"
"            \n"
"}"

#. Tag: para
#: ee.xml:61
#, no-c-format
msgid ""
"Thus, receiving messages is super-easy in a Web Beans environment. But "
"beware that there is no session or conversation context available when a "
"message is delivered to a Message-Driven Bean. Only <literal>@RequestScoped</"
"literal> and <literal>@ApplicationScoped</literal> Web Beans are available."
msgstr ""
"따라서, Web Beans 환경에서 메세지를 받는 것은 초간편합니다. 하지만 메세지가 Message-Driven Bean으로 전달될 때 사용할 수 있는 세션 또는 대화 컨텍스트가 없음에 유의하시기 바랍니다. <literal>@RequestScoped</"
"literal> 및 <literal>@ApplicationScoped</literal> Web Beans 만을 사용할 수 있습니다. "

#. Tag: para
#: ee.xml:66
#, no-c-format
msgid "It's also easy to send messages using Web Beans."
msgstr "또한 Web Beans를 사용하여 메세지를 전송하기 쉽습니다.  "

#. Tag: title
#: ee.xml:71
#, no-c-format
msgid "JMS endpoints"
msgstr "JMS 엔드포인트  "

#. Tag: para
#: ee.xml:73
#, no-c-format
msgid ""
"Sending messages using JMS can be quite complex, because of the number of "
"different objects you need to deal with. For queues we have <literal>Queue</"
"literal>, <literal>QueueConnectionFactory</literal>, "
"<literal>QueueConnection</literal>, <literal>QueueSession</literal> and "
"<literal>QueueSender</literal>. For topics we have <literal>Topic</literal>, "
"<literal>TopicConnectionFactory</literal>, <literal>TopicConnection</"
"literal>, <literal>TopicSession</literal> and <literal>TopicPublisher</"
"literal>. Each of these objects has its own lifecycle and threading model "
"that we need to worry about."
msgstr ""
"JMS를 사용하여 메세지를 전송하는 것은 다소 복잡할 수 있습니다. 이는 다수의 다른 개체를 처리해야 하기 때문입니다. 큐의 경우 <literal>Queue</"
"literal>, <literal>QueueConnectionFactory</literal>, "
"<literal>QueueConnection</literal>, <literal>QueueSession</literal> <literal>QueueSender</literal>를 갖습니다. 토픽의 경우 <literal>Topic</literal>, "
"<literal>TopicConnectionFactory</literal>, <literal>TopicConnection</"
"literal>, <literal>TopicSession</literal>, <literal>TopicPublisher</literal>를 갖습니다. 이러한 각각의 객체는 자체적으로 수명 주기 및 스레딩 모델을 갖고 있습니다.   "

#. Tag: para
#: ee.xml:82
#, no-c-format
msgid ""
"Web Beans takes care of all this for us. All we need to do is declare the "
"queue or topic in <literal>web-beans.xml</literal>, specifying an associated "
"binding type and connection factory."
msgstr "Web Beans는 이러한 모든 것을 처리합니다. 여기서 처리해야 할 사항은 <literal>web-beans.xml</literal>에 있는 큐 또는 토픽을 명명하고 관련된 바인딩 유형 및 연결 팩토리를 지정하는 것입니다.  "

#. Tag: programlisting
#: ee.xml:86
#, no-c-format
msgid ""
"<![CDATA[<Queue>\n"
"    <destination>java:comp/env/jms/OrderQueue</destination>\n"
"    <connectionFactory>java:comp/env/jms/QueueConnectionFactory</"
"connectionFactory>\n"
"    <myapp:OrderProcessor/>    \n"
"</Queue>]]>"
msgstr ""
"<![CDATA[<Queue>\n"
"    <destination>java:comp/env/jms/OrderQueue</destination>\n"
"    <connectionFactory>java:comp/env/jms/QueueConnectionFactory</"
"connectionFactory>\n"
"    <myapp:OrderProcessor/>    \n"
"</Queue>]]>"

#. Tag: programlisting
#: ee.xml:88
#, no-c-format
msgid ""
"<![CDATA[<Topic>\n"
"    <destination>java:comp/env/jms/StockPrices</destination>\n"
"    <connectionFactory>java:comp/env/jms/TopicConnectionFactory</"
"connectionFactory>\n"
"    <myapp:StockPrices/>    \n"
"</Topic>]]>"
msgstr ""
"<![CDATA[<Topic>\n"
"    <destination>java:comp/env/jms/StockPrices</destination>\n"
"    <connectionFactory>java:comp/env/jms/TopicConnectionFactory</"
"connectionFactory>\n"
"    <myapp:StockPrices/>    \n"
"</Topic>]]>"

#. Tag: para
#: ee.xml:90
#, no-c-format
msgid ""
"Now we can just inject the <literal>Queue</literal>, "
"<literal>QueueConnection</literal>, <literal>QueueSession</literal> or "
"<literal>QueueSender</literal> for a queue, or the <literal>Topic</literal>, "
"<literal>TopicConnection</literal>, <literal>TopicSession</literal> or "
"<literal>TopicPublisher</literal> for a topic."
msgstr ""
"이제 큐의 경우  <literal>Queue</literal>, "
"<literal>QueueConnection</literal>, <literal>QueueSession</literal>, "
"<literal>QueueSender</literal>를 삽입할 수 있고, 토픽의 경우 <literal>Topic</literal>, "
"<literal>TopicConnection</literal>, <literal>TopicSession</literal> "
"<literal>TopicPublisher</literal>를 삽입할 수 있습니다. "

#. Tag: programlisting
#: ee.xml:96
#, no-c-format
msgid ""
"@OrderProcessor QueueSender orderSender;\n"
"@OrderProcessor QueueSession orderSession;\n"
"\n"
"public void sendMessage() {\n"
"    MapMessage msg = orderSession.createMapMessage();\n"
"    ...\n"
"    orderSender.send(msg);\n"
"}"
msgstr ""
"@OrderProcessor QueueSender orderSender;\n"
"@OrderProcessor QueueSession orderSession;\n"
"\n"
"public void sendMessage() {\n"
"    MapMessage msg = orderSession.createMapMessage();\n"
"    ...\n"
"    orderSender.send(msg);\n"
"}"

#. Tag: programlisting
#: ee.xml:98
#, no-c-format
msgid ""
"@StockPrices TopicPublisher pricePublisher;\n"
"@StockPrices TopicSession priceSession;\n"
"\n"
"public void sendMessage(String price) {\n"
"    pricePublisher.send( priceSession.createTextMessage(price) );\n"
"}"
msgstr ""
"@StockPrices TopicPublisher pricePublisher;\n"
"@StockPrices TopicSession priceSession;\n"
"\n"
"public void sendMessage(String price) {\n"
"    pricePublisher.send( priceSession.createTextMessage(price) );\n"
"}"

#. Tag: para
#: ee.xml:100
#, no-c-format
msgid ""
"The lifecycle of the injected JMS objects is completely controlled by the "
"Web Bean manager."
msgstr "삽입된 JMS 객체의 수명주기는 Web Bean 관리자에 의해 전적으로 관리됩니다. "

#. Tag: title
#: ee.xml:106
#, no-c-format
msgid "Packaging and deployment"
msgstr "패키징 및 배포 "

#. Tag: para
#: ee.xml:108
#, no-c-format
msgid ""
"Web Beans doesn't define any special deployment archive. You can package Web "
"Beans in JARs, EJB-JARs or WARs&#151;any deployment location in the "
"application classpath. However, each archive that contains Web Beans must "
"include a file named <literal>web-beans.xml</literal> in the <literal>META-"
"INF</literal> or <literal>WEB-INF</literal> directory. The file may be "
"empty. Web Beans deployed in archives that do not have a <literal>web-beans."
"xml</literal> file will not be available for use in the application."
msgstr ""
"Web Beans는 특정 배포 아카이브를 지정하지 않습니다. JAR, EJB-JAR 또는 WAR에 있는 Web Beans &#151; 애플리케이션 classpath에 있는 배포 위치를 패키지화할 수 있습니다. 하지만 Web Beans이 있는 각각의 아카이브에는  <literal>META-INF</literal> 또는 <literal>WEB-INF</literal> 디렉토리에 있는 <literal>web-beans.xml</literal>라는 파일이 들어 있어야 합니다. 파일은 비어 있을 수 도 있습니다. <literal>web-beans."
"xml</literal> 파일이 없는 아카이브에 배포된 Web Beans는 애플리케이션에서 사용할 수 없습니다. "

#. Tag: para
#: ee.xml:116
#, no-c-format
msgid ""
"For Java SE execution, Web Beans may be deployed in any location in which "
"EJBs may be deployed for execution by the embeddable EJB Lite container. "
"Again, each location must contain a <literal>web-beans.xml</literal> file."
msgstr "Java SE 실행의 경우, 임베드 가능한 EJB Lite 컨테이너에 의해 실행용 EJB를 배포할 수 있는 위치에 Web Beans를 배포할 수 있습니다. 각 위치에서는 <literal>web-beans.xml</literal> 파일이 들어 있어야 합니다.     "

