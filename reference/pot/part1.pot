# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-03-28 17:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#: part1.xml:5
#, no-c-format
msgid ""
"The Web Beans (JSR-299) specification defines a set of services for the Java "
"EE environment that makes applications much easier to develop. Web Beans "
"layers an enhanced lifecycle and interaction model over existing Java "
"component types including JavaBeans and Enterprise Java Beans. As a "
"complement to the traditional Java EE programming model, the Web Beans "
"services provide:"
msgstr ""

#. Tag: para
#: part1.xml:14
#, no-c-format
msgid ""
"an improved lifecycle for stateful components, bound to well-defined "
"<emphasis>contexts</emphasis>,"
msgstr ""

#. Tag: para
#: part1.xml:18
#, no-c-format
msgid "a typesafe approach to <emphasis>dependency injection</emphasis>,"
msgstr ""

#. Tag: para
#: part1.xml:21
#, no-c-format
msgid ""
"interaction via an <emphasis>event notification</emphasis> facility, and"
msgstr ""

#. Tag: para
#: part1.xml:25
#, no-c-format
msgid ""
"a better approach to binding <emphasis>interceptors</emphasis> to "
"components, along with a new kind of interceptor, called a "
"<emphasis>decorator</emphasis>, that is more appropriate for use in solving "
"business problems."
msgstr ""

#. Tag: para
#: part1.xml:32
#, no-c-format
msgid ""
"Dependency injection, together with contextual lifecycle management, saves "
"the user of an unfamiliar API from having to ask and answer the following "
"questions:"
msgstr ""

#. Tag: para
#: part1.xml:38
#, no-c-format
msgid "what is the lifecycle of this object?"
msgstr ""

#. Tag: para
#: part1.xml:41
#, no-c-format
msgid "how many simultaneous clients can it have?"
msgstr ""

#. Tag: para
#: part1.xml:44
#, no-c-format
msgid "is it multithreaded?"
msgstr ""

#. Tag: para
#: part1.xml:47
#, no-c-format
msgid "where can I get one from?"
msgstr ""

#. Tag: para
#: part1.xml:50
#, no-c-format
msgid "do I need to explicitly destroy it?"
msgstr ""

#. Tag: para
#: part1.xml:53
#, no-c-format
msgid "where should I keep my reference to it when I'm not using it directly?"
msgstr ""

#. Tag: para
#: part1.xml:57
#, no-c-format
msgid ""
"how can I add an indirection layer, so that the implementation of this "
"object can vary at deployment time?"
msgstr ""

#. Tag: para
#: part1.xml:61
#, no-c-format
msgid "how should I go about sharing this object between other objects?"
msgstr ""

#. Tag: para
#: part1.xml:65
#, no-c-format
msgid ""
"A Web Bean specifies only the type and semantics of other Web Beans it "
"depends upon. It need not be aware of the actual lifecycle, concrete "
"implementation, threading model or other clients of any Web Bean it depends "
"upon. Even better, the concrete implementation, lifecycle and threading "
"model of a Web Bean it depends upon may vary according to the deployment "
"scenario, without affecting any client."
msgstr ""

#. Tag: para
#: part1.xml:72
#, no-c-format
msgid ""
"Events, interceptors and decorators enhance the <emphasis>loose-coupling</"
"emphasis> that is inherent in this model:"
msgstr ""

#. Tag: para
#: part1.xml:77
#, no-c-format
msgid ""
"<emphasis>event notifications</emphasis> decouple event producers from event "
"consumers,"
msgstr ""

#. Tag: para
#: part1.xml:81
#, no-c-format
msgid ""
"<emphasis>interceptors</emphasis> decouple technical concerns from business "
"logic, and"
msgstr ""

#. Tag: para
#: part1.xml:85
#, no-c-format
msgid ""
"<emphasis>decorators</emphasis> allow business concerns to be "
"compartmentalized."
msgstr ""

#. Tag: para
#: part1.xml:90
#, no-c-format
msgid ""
"Most importantly, Web Beans provides all these facilities in a "
"<emphasis>typesafe</emphasis> way. Web Beans never uses string-based "
"identifiers to determine how collaborating objects fit together. And XML, "
"though it remains an option, is rarely used. Instead, Web Beans uses the "
"typing information that is already available in the Java object model, "
"together with a new pattern, called <emphasis>binding annotations</"
"emphasis>, to wire together Web Beans, their dependencies, their "
"interceptors and decorators and their event consumers."
msgstr ""

#. Tag: para
#: part1.xml:100
#, no-c-format
msgid ""
"The Web Beans services are general and apply to the following types of "
"components that exist in the Java EE environment:"
msgstr ""

#. Tag: para
#: part1.xml:105
#, no-c-format
msgid "all JavaBeans,"
msgstr ""

#. Tag: para
#: part1.xml:108
#, no-c-format
msgid "all EJBs, and"
msgstr ""

#. Tag: para
#: part1.xml:111
#, no-c-format
msgid "all Servlets."
msgstr ""

#. Tag: para
#: part1.xml:115
#, no-c-format
msgid ""
"Web Beans even provides the necessary integration points so that other kinds "
"of components defined by future Java EE specifications or by non-standard "
"frameworks may be cleanly integrated with Web Beans, take advantage of the "
"Web Beans services, and interact with any other kind of Web Bean."
msgstr ""

#. Tag: para
#: part1.xml:120
#, no-c-format
msgid ""
"Web Beans was influenced by a number of existing Java frameworks, including "
"Seam, Guice and Spring. However, Web Beans has its own very distinct "
"character: more typesafe than Seam, more stateful and less XML-centric than "
"Spring, more web and enterprise-application capable than Guice."
msgstr ""

#. Tag: para
#: part1.xml:125
#, no-c-format
msgid ""
"Most importantly, Web Beans is a JCP standard that integrates cleanly with "
"Java EE, and with any Java SE environment where embeddable EJB Lite is "
"available."
msgstr ""
