# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-11-11 15:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: scopescontexts.xml:5
#, no-c-format
msgid "Scopes and contexts"
msgstr ""

#. Tag: para
#: scopescontexts.xml:7
#, no-c-format
msgid ""
"So far, we've seen a few examples of <emphasis>scope type annotations</"
"emphasis>. The scope of a bean determines the lifecycle of instances of the "
"bean. The scope also determines which clients refer to which instances of "
"the bean. According to the CDI specification, a scope determines:"
msgstr ""

#. Tag: para
#: scopescontexts.xml:16
#, no-c-format
msgid "When a new instance of any bean with that scope is created"
msgstr ""

#. Tag: para
#: scopescontexts.xml:19
#, no-c-format
msgid "When an existing instance of any bean with that scope is destroyed"
msgstr ""

#. Tag: para
#: scopescontexts.xml:22
#, no-c-format
msgid ""
"Which injected references refer to any instance of a bean with that scope"
msgstr ""

#. Tag: para
#: scopescontexts.xml:27
#, no-c-format
msgid ""
"For example, if we have a session-scoped bean, <literal>CurrentUser</"
"literal>, all beans that are called in the context of the same "
"<literal>HttpSession</literal> will see the same instance of "
"<literal>CurrentUser</literal>. This instance will be automatically created "
"the first time a <literal>CurrentUser</literal> is needed in that session, "
"and automatically destroyed when the session ends."
msgstr ""

#. Tag: para
#: scopescontexts.xml:35
#, no-c-format
msgid ""
"There's actually no way to remove a bean from a context until the entire "
"context is destroyed."
msgstr ""

#. Tag: title
#: scopescontexts.xml:41
#, no-c-format
msgid "Scope types"
msgstr ""

#. Tag: para
#: scopescontexts.xml:43
#, no-c-format
msgid ""
"CDI features an <emphasis>extensible context model</emphasis>. It's possible "
"to define new scopes by creating a new scope type annotation:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:48
#, no-c-format
msgid ""
"<![CDATA[@ScopeType\n"
"@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD})\n"
"public @interface ClusterScoped {}]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:50
#, no-c-format
msgid ""
"Of course, that's the easy part of the job. For this scope type to be "
"useful, we will also need to define a <literal>Context</literal> object that "
"implements the scope! Implementing a <literal>Context</literal> is usually a "
"very technical task, intended for framework development only. You can expect "
"an implementation of the business scope, for instance, in a future version "
"of Seam."
msgstr ""

#. Tag: para
#: scopescontexts.xml:57
#, no-c-format
msgid ""
"We can apply a scope type annotation to a bean implementation class to "
"specify the scope of the bean:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:61
#, no-c-format
msgid ""
"<![CDATA[@ClusterScoped\n"
"public class SecondLevelCache { ... }]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:63
#, no-c-format
msgid "Usually, you'll use one of CDI's built-in scopes."
msgstr ""

#. Tag: title
#: scopescontexts.xml:68
#, no-c-format
msgid "Built-in scopes"
msgstr ""

#. Tag: para
#: scopescontexts.xml:70
#, no-c-format
msgid "CDI defines four built-in scopes:"
msgstr ""

#. Tag: literal
#: scopescontexts.xml:74
#, no-c-format
msgid "@RequestScoped"
msgstr ""

#. Tag: literal
#: scopescontexts.xml:77
#, no-c-format
msgid "@SessionScoped"
msgstr ""

#. Tag: literal
#: scopescontexts.xml:80
#, no-c-format
msgid "@ApplicationScoped"
msgstr ""

#. Tag: literal
#: scopescontexts.xml:83
#, no-c-format
msgid "@ConversationScoped"
msgstr ""

#. Tag: para
#: scopescontexts.xml:87
#, no-c-format
msgid "For a web application that uses CDI:"
msgstr ""

#. Tag: para
#: scopescontexts.xml:91
#, no-c-format
msgid ""
"any servlet request has access to active request, session and application "
"scopes, and, additionally"
msgstr ""

#. Tag: para
#: scopescontexts.xml:96
#, no-c-format
msgid "any JSF request has access to an active conversation scope."
msgstr ""

#. Tag: para
#: scopescontexts.xml:101
#, no-c-format
msgid ""
"A CDI extension can support the conversation scope for other frameworks as "
"well."
msgstr ""

#. Tag: para
#: scopescontexts.xml:104
#, no-c-format
msgid "The request and application scopes are also active:"
msgstr ""

#. Tag: para
#: scopescontexts.xml:108
#, no-c-format
msgid "during invocations of EJB remote methods,"
msgstr ""

#. Tag: para
#: scopescontexts.xml:111
#, no-c-format
msgid "during EJB timeouts,"
msgstr ""

#. Tag: para
#: scopescontexts.xml:114
#, no-c-format
msgid "during message delivery to a message-driven bean, and"
msgstr ""

#. Tag: para
#: scopescontexts.xml:117
#, no-c-format
msgid "during web service invocations."
msgstr ""

#. Tag: para
#: scopescontexts.xml:121
#, no-c-format
msgid ""
"If the application tries to invoke a bean with a scope that does not have an "
"active context, a <literal>ContextNotActiveException</literal> is thrown by "
"the container at runtime."
msgstr ""

#. Tag: para
#: scopescontexts.xml:126
#, no-c-format
msgid ""
"Three of the four built-in scopes should be extremely familiar to every Java "
"EE developer, so let's not waste time discussing them here. One of the "
"scopes, however, is new."
msgstr ""

#. Tag: title
#: scopescontexts.xml:134
#, no-c-format
msgid "The conversation scope"
msgstr ""

#. Tag: para
#: scopescontexts.xml:136
#, no-c-format
msgid ""
"The conversation scope is a bit like the traditional session scope in that "
"it holds state associated with a user of the system, and spans multiple "
"requests to the server. However, unlike the session scope, the conversation "
"scope:"
msgstr ""

#. Tag: para
#: scopescontexts.xml:144
#, no-c-format
msgid "is demarcated explicitly by the application, and"
msgstr ""

#. Tag: para
#: scopescontexts.xml:147
#, no-c-format
msgid ""
"holds state associated with a particular web browser tab in a JSF "
"application (browsers tend to share domain cookies, and hence the session "
"cookie, between tabs, so this is not the case for the session scope)."
msgstr ""

#. Tag: para
#: scopescontexts.xml:154
#, no-c-format
msgid ""
"A conversation represents a task&#8212;a unit of work from the point of view "
"of the user. The conversation context holds state associated with what the "
"user is currently working on. If the user is doing multiple things at the "
"same time, there are multiple conversations."
msgstr ""

#. Tag: para
#: scopescontexts.xml:160
#, no-c-format
msgid ""
"The conversation context is active during any JSF request. Most "
"conversations are destroyed at the end of the request. If a conversation "
"should hold state across multiple requests, it must be explicitly promoted "
"to a <emphasis>long-running conversation</emphasis>."
msgstr ""

#. Tag: title
#: scopescontexts.xml:167
#, no-c-format
msgid "Conversation demarcation"
msgstr ""

#. Tag: para
#: scopescontexts.xml:169
#, no-c-format
msgid ""
"CDI provides a built-in bean for controlling the lifecycle of conversations "
"in a JSF application. This bean may be obtained by injection:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:174
#, no-c-format
msgid "@Inject Conversation conversation;"
msgstr ""

#. Tag: para
#: scopescontexts.xml:176
#, no-c-format
msgid ""
"To promote the conversation associated with the current request to a long-"
"running conversation, call the <literal>begin()</literal> method from "
"application code. To schedule the current long-running conversation context "
"for destruction at the end of the current request, call <literal>end()</"
"literal>."
msgstr ""

#. Tag: para
#: scopescontexts.xml:182
#, no-c-format
msgid ""
"In the following example, a conversation-scoped bean controls the "
"conversation with which it is associated:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:186
#, no-c-format
msgid ""
"<![CDATA[@ConversationScoped @Stateful\n"
"public class OrderBuilder {\n"
"   private Order order;\n"
"   private @Inject Conversation conversation;\n"
"   private @PersistenceContext(type = EXTENDED) EntityManager em;\n"
"   \n"
"   @Produces public Order getOrder() {\n"
"      return order;\n"
"   }\n"
"\n"
"   public Order createOrder() {\n"
"      order = new Order();\n"
"      conversation.begin();\n"
"      return order;\n"
"   }\n"
"   \n"
"   public void addLineItem(Product product, int quantity) {\n"
"      order.add(new LineItem(product, quantity));\n"
"   }\n"
"\n"
"   public void saveOrder(Order order) {\n"
"      em.persist(order);\n"
"      conversation.end();\n"
"   }\n"
"   \n"
"   @Remove\n"
"   public void destroy() {}\n"
"}]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:188
#, no-c-format
msgid ""
"This bean is able to control its own lifecycle through use of the "
"<literal>Conversation</literal> API. But some other beans have a lifecycle "
"which depends completely upon another object."
msgstr ""

#. Tag: title
#: scopescontexts.xml:196
#, no-c-format
msgid "Conversation propagation"
msgstr ""

#. Tag: para
#: scopescontexts.xml:198
#, no-c-format
msgid ""
"The conversation context automatically propagates with any JSF faces request "
"(JSF form submission) or redirect. It does not automatically propagate with "
"non-faces requests, for example, navigation via a link."
msgstr ""

#. Tag: para
#: scopescontexts.xml:203
#, no-c-format
msgid ""
"We can force the conversation to propagate with a non-faces request by "
"including the unique identifier of the conversation as a request parameter. "
"The CDI specification reserves the request parameter named <literal>cid</"
"literal> for this use. The unique identifier of the conversation may be "
"obtained from the <literal>Conversation</literal> object, which has the EL "
"bean name <literal>conversation</literal>."
msgstr ""

#. Tag: para
#: scopescontexts.xml:210
#, no-c-format
msgid "Therefore, the following link propagates the conversation:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:214
#, no-c-format
msgid ""
"<![CDATA[<a href=\"/addProduct.jsp?cid=#{conversation.id}\">Add Product</a>]]"
">"
msgstr ""

#. Tag: para
#: scopescontexts.xml:216
#, no-c-format
msgid "It's probably better to use one of the link components in JSF 2:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:220
#, no-c-format
msgid ""
"<![CDATA[<h:link outcome=\"/addProduct.xhtml value=\"Add Product\">\n"
"   <f:param name=\"cid\" value=\"#{conversation.id}\"/>\n"
"</h:link>]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:223
#, no-c-format
msgid ""
"The conversation context propagates across redirects, making it very easy to "
"implement the common POST-then-redirect pattern, without resort to fragile "
"constructs such as a \"flash\" object. The container automatically adds the "
"conversation id to the redirect URL as a request parameter."
msgstr ""

#. Tag: title
#: scopescontexts.xml:233
#, no-c-format
msgid "Conversation timeout"
msgstr ""

#. Tag: para
#: scopescontexts.xml:235
#, no-c-format
msgid ""
"The container is permitted to destroy a conversation and all state held in "
"its context at any time in order to conserve resources. A CDI implementation "
"will normally do this on the basis of some kind of timeout&#8212;though this "
"is not required by the specification. The timeout is the period of "
"inactivity before the conversation is destroyed (as opposed to the amount of "
"time the conversation is active)."
msgstr ""

#. Tag: para
#: scopescontexts.xml:242
#, no-c-format
msgid ""
"The <literal>Conversation</literal> object provides a method to set the "
"timeout. This is a hint to the container, which is free to ignore the "
"setting."
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:247
#, no-c-format
msgid "conversation.setTimeout(timeoutInMillis);"
msgstr ""

#. Tag: title
#: scopescontexts.xml:254
#, no-c-format
msgid "The dependent pseudo-scope"
msgstr ""

#. Tag: para
#: scopescontexts.xml:256
#, no-c-format
msgid ""
"In addition to the four built-in scopes, CDI features the so-called "
"<emphasis>dependent pseudo-scope</emphasis>. This is the default scope for a "
"bean which does not explicitly declare a scope type."
msgstr ""

#. Tag: para
#: scopescontexts.xml:261
#, no-c-format
msgid ""
"For example, this bean has the scope type <literal>@Dependent</literal>:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:265
#, no-c-format
msgid "<![CDATA[public class Calculator { ... }]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:267
#, no-c-format
msgid ""
"An instances of a dependent bean is never shared between different clients "
"or different injection points. It is strictly a <emphasis>dependent object</"
"emphasis> of some other object. It is instantiated when the object it "
"belongs to is created, and destroyed when the object it belongs to is "
"destroyed."
msgstr ""

#. Tag: para
#: scopescontexts.xml:273
#, no-c-format
msgid ""
"CDI makes it easy to obtain a dependent instance of a bean, even if the bean "
"is already declared as a bean with some other scope type."
msgstr ""

#. Tag: title
#: scopescontexts.xml:281
#, no-c-format
msgid "The <literal>@New</literal> qualifier"
msgstr ""

#. Tag: para
#: scopescontexts.xml:283
#, no-c-format
msgid ""
"The built-in qualifier <literal>@New</literal> allows us to obtain a "
"dependent object of a specified class."
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:287
#, no-c-format
msgid "<![CDATA[@Inject @New Calculator calculator;]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:289
#, no-c-format
msgid ""
"The class must be a valid managed bean or session bean, but need not be an "
"enabled bean."
msgstr ""

#. Tag: para
#: scopescontexts.xml:291
#, no-c-format
msgid ""
"This works even if <literal>Calculator</literal> is <emphasis>already</"
"emphasis> declared with a different scope type, for example:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:296
#, no-c-format
msgid ""
"<![CDATA[@ConversationScoped\n"
"public class Calculator { ... }]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:298
#, no-c-format
msgid ""
"So the following injected attributes each get a different instance of "
"<literal>Calculator</literal>:"
msgstr ""

#. Tag: programlisting
#: scopescontexts.xml:302
#, no-c-format
msgid ""
"<![CDATA[public class PaymentCalc {\n"
"   @Inject Calculator calculator;\n"
"   @Inject @New Calculator newCalculator;\n"
"}]]>"
msgstr ""

#. Tag: para
#: scopescontexts.xml:304
#, no-c-format
msgid ""
"The <literal>calculator</literal> field has a conversation-scoped instance "
"of <literal>Calculator</literal> injected. The <literal>newCalculator</"
"literal> field has a new instance of <literal>Calculator</literal> injected, "
"with a lifecycle that is bound to the owning <literal>PaymentCalc</literal>."
msgstr ""

#. Tag: para
#: scopescontexts.xml:310
#, no-c-format
msgid ""
"This feature is particularly useful with producer methods, as we'll see in "
"the next chapter."
msgstr ""
