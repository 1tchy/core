# translation of injection.po to Spanish
# Language es-ES translations for master.xml package.
#
# Automatically generated, 2008.
# Gladys Guerrero Lozano <gguerrer@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: injection\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-12-19 20:26+0000\n"
"PO-Revision-Date: 2009-01-19 15:18+1000\n"
"Last-Translator: Gladys Guerrero Lozano <gguerrer@redhat.com>\n"
"Language-Team: Spanish <fedora-trans-es@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: injection.xml:4
#, no-c-format
msgid "Dependency injection"
msgstr "Inyección de dependencia"

#. Tag: para
#: injection.xml:6
#, no-c-format
msgid "Web Beans supports three primary mechanisms for dependency injection:"
msgstr "Web Beans soporta tres mecanismos primarios para inyección de dependencia:"

#. Tag: para
#: injection.xml:8
#, no-c-format
msgid "Constructor parameter injection:"
msgstr "Constructor de inyección de parámetro:"

#. Tag: programlisting
#: injection.xml:10
#, no-c-format
msgid ""
"<![CDATA[public class Checkout {\n"
"        \n"
"    private final ShoppingCart cart;\n"
"    \n"
"    @Initializer\n"
"    public Checkout(ShoppingCart cart) {\n"
"        this.cart = cart;\n"
"    }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[public class Checkout {\n"
"        \n"
"    private final ShoppingCart cart;\n"
"    \n"
"    @Initializer\n"
"    public Checkout(ShoppingCart cart) {\n"
"        this.cart = cart;\n"
"    }\n"
"\n"
"}]]>"

#. Tag: para
#: injection.xml:12
#, no-c-format
msgid "<emphasis>Initializer</emphasis> method parameter injection:"
msgstr "Inyección de parámetro del método <emphasis>Inicializador</emphasis>:"

#. Tag: programlisting
#: injection.xml:14
#, no-c-format
msgid ""
"<![CDATA[public class Checkout {\n"
"        \n"
"    private ShoppingCart cart;\n"
"\n"
"    @Initializer \n"
"    void setShoppingCart(ShoppingCart cart) {\n"
"        this.cart = cart;\n"
"    }\n"
"    \n"
"}]]>"
msgstr ""
"<![CDATA[public class Checkout {\n"
"        \n"
"    private ShoppingCart cart;\n"
"\n"
"    @Initializer \n"
"    void setShoppingCart(ShoppingCart cart) {\n"
"        this.cart = cart;\n"
"    }\n"
"    \n"
"}]]>"

#. Tag: para
#: injection.xml:16
#, no-c-format
msgid "And direct field injection:"
msgstr "E inyección directa de campo:"

#. Tag: programlisting
#: injection.xml:18
#, no-c-format
msgid ""
"<![CDATA[public class Checkout {\n"
"\n"
"    private @Current ShoppingCart cart;\n"
"    \n"
"}]]>"
msgstr ""
"<![CDATA[public class Checkout {\n"
"\n"
"    private @Current ShoppingCart cart;\n"
"    \n"
"}]]>"

#. Tag: para
#: injection.xml:20
#, no-c-format
msgid ""
"Dependency injection always occurs when the Web Bean instance is first "
"instantiated."
msgstr "La inyección de dependencia siempre se presenta cuando la instancia de Web Bean es instanciada primero:"

#. Tag: para
#: injection.xml:25
#, no-c-format
msgid ""
"First, the Web Bean manager calls the Web Bean constructor, to obtain an "
"instance of the Web Bean."
msgstr "Primero, el administrador de Web Bean llama al constructor de Web Bean, para obtener una instancia del Web Bean."

#. Tag: para
#: injection.xml:29
#, no-c-format
msgid ""
"Next, the Web Bean manager initializes the values of all injected fields of "
"the Web Bean."
msgstr "Luego, el administrador de Web Bean inicializa los valores de los campos inyectados del Web Bean."

#. Tag: para
#: injection.xml:33
#, no-c-format
msgid "Next, the Web Bean manager calls all initializer methods of Web Bean."
msgstr "Más tarde, el administrador de Web Bean llama a todos los métodos inicializadores del Web Bean."

#. Tag: para
#: injection.xml:37
#, no-c-format
msgid ""
"Finally, the <literal>@PostConstruct</literal> method of the Web Bean, if "
"any, is called."
msgstr "Por último, se llama al método de Web Bean <literal>@PostConstruct</literal>, si existe."

#. Tag: para
#: injection.xml:42
#, no-c-format
msgid ""
"Constructor parameter injection is not supported for EJB beans, since the "
"EJB is instantiated by the EJB container, not the Web Bean manager."
msgstr ""
"La inyección de parámetro constructor no es admitida por beans de EJB, porque "
"EJB es instanciado por el contenedor de EJB, no por el administrador de Web Bean."

#. Tag: para
#: injection.xml:45
#, no-c-format
msgid ""
"Parameters of constructors and initializer methods need not be explicitly "
"annotated when the default binding type <literal>@Current</literal> applies. "
"Injected fields, however, <emphasis>must</emphasis> specify a binding type, "
"even when the default binding type applies. If the field does not specify a "
"binding type, it will not be injected."
msgstr "Los parámetros de constructores y métodos de inicializador no necesitan ser anotados explícitamente cuando se aplique el tipo de enlace predeterminado <literal>@Current</literal>. Los campos inyectados, sin embargo, <emphasis>deben</emphasis> especificar un tipo de enlace, cuando se aplique el tipo de enlace predeterminado. Si el campo no especifica ningún tipo de enlace, no será inyectado."

#. Tag: para
#: injection.xml:51
#, no-c-format
msgid "Producer methods also support parameter injection:"
msgstr "Los métodos de productor también admiten inyección de parámetro:"

#. Tag: programlisting
#: injection.xml:53
#, no-c-format
msgid ""
"<![CDATA[@Produces Checkout createCheckout(ShoppingCart cart) {\n"
"    return new Checkout(cart);\n"
"}]]>"
msgstr ""
"<![CDATA[@Produces Checkout createCheckout(ShoppingCart cart) {\n"
"    return new Checkout(cart);\n"
"}]]>"

#. Tag: para
#: injection.xml:55
#, no-c-format
msgid ""
"Finally, observer methods (which we'll meet in <xref linkend=\"events\"/>), "
"disposal methods and destructor methods all support parameter injection."
msgstr "Por último, los métodos de observador (que encontraremos en <xref linkend=\"events\"/>), los métodos desechables y los métodos destructores, admiten inyección de parámetro."

#. Tag: para
#: injection.xml:58
#, no-c-format
msgid ""
"The Web Beans specification defines a procedure, called the "
"<emphasis>typesafe resolution algorithm</emphasis>, that the Web Bean "
"manager follows when identifying the Web Bean to inject to an injection "
"point. This algorithm looks complex at first, but once you understand it, "
"it's really quite intuitive. Typesafe resolution is performed at system "
"initialization time, which means that the manager will inform the user "
"immediately if a Web Bean's dependencies cannot be satisfied, by throwing a "
"<literal>UnsatisfiedDependencyException</literal> or "
"<literal>AmbiguousDependencyException</literal>."
msgstr "La especificación de Web Beans define un procedimiento, llamado <emphasis>algoritmo de resolución de typesafe</emphasis> que el administrador de Web Bean sigue al identificar el Web Bean para inyectar a un punto de inyección. Este algoritmo parece complejo en un principio, pero una vez que lo entienda, es en realidad muy intuitivo. La resolución de Typesafe se realiza al inicializar el sistema, lo que significa que el administrador informará al usuario inmediatamente si se pueden cumplir las dependencias de un Web Bean, produciendo una <literal>UnsatisfiedDependencyException</literal> o una <literal>AmbiguousDependencyException</literal>."

#. Tag: para
#: injection.xml:67
#, no-c-format
msgid ""
"The purpose of this algorithm is to allow multiple Web Beans to implement "
"the same API type and either:"
msgstr "El propósito de este algoritmo es permitir a múltiples Web Beans implementar el mismo tipo API ya sea:"

#. Tag: para
#: injection.xml:72
#, no-c-format
msgid ""
"allow the client to select which implementation it requires using "
"<emphasis>binding annotations</emphasis>,"
msgstr "permitiendo al cliente seleccionar la aplicación requerida mediante <emphasis>anotaciones de enlace</emphasis>,"

#. Tag: para
#: injection.xml:77
#, no-c-format
msgid ""
"allow the application deployer to select which implementation is appropriate "
"for a particular deployment, without changes to the client, by enabling or "
"disabling <emphasis>deployment types</emphasis>, or"
msgstr "permitiendo al desplegador de aplicación seleccionar la aplicación apropiada para una despliegue particular, sin cambios en el cliente, habilitando o inhabilitando los <emphasis>tipos de despliegue</emphasis>, o"

#. Tag: para
#: injection.xml:82
#, no-c-format
msgid ""
"allow one implementation of an API to override another implementation of the "
"same API at deployment time, without changes to the client, using "
"<emphasis>deployment type precedence</emphasis>."
msgstr "permitiendo que una implementación de una API remplace otra implementación de la misma API en el momento del despliegue, sin cambios al cliente, mediante <emphasis>prioridad de tipo de despliegue</emphasis>."

#. Tag: para
#: injection.xml:88
#, no-c-format
msgid "Let's explore how the Web Beans manager determines a Web Bean to be injected."
msgstr "Exploremos cómo el administrador de Web Beans determina una Web Bean para ser inyectado."

#. Tag: title
#: injection.xml:91
#, no-c-format
msgid "Binding annotations"
msgstr "Anotaciones de Enlace"

#. Tag: para
#: injection.xml:93
#, no-c-format
msgid ""
"If we have more than one Web Bean that implements a particular API type, the "
"injection point can specify exactly which Web Bean should be injected using "
"a binding annotation. For example, there might be two implementations of "
"<literal>PaymentProcessor</literal>:"
msgstr "Si tenemos más de un Web Bean que implemente un tipo determinado de API, el punto de inyección puede especificar el Web Bean que debe ser inyectado mediante una anotación de enlace. Por ejemplo, deberían haber dos aplicaciones del <literal>PaymentProcessor</literal>:"

#. Tag: programlisting
#: injection.xml:98
#, no-c-format
msgid ""
"<![CDATA[@PayByCheque\n"
"public class ChequePaymentProcessor implements PaymentProcessor {\n"
"    public void process(Payment payment) { ... }\n"
"}]]>"
msgstr ""
"<![CDATA[@PayByCheque\n"
"public class ChequePaymentProcessor implements PaymentProcessor {\n"
"    public void process(Payment payment) { ... }\n"
"}]]>"

#. Tag: programlisting
#: injection.xml:100
#, no-c-format
msgid ""
"<![CDATA[@PayByCreditCard\n"
"public class CreditCardPaymentProcessor implements PaymentProcessor {\n"
"    public void process(Payment payment) { ... }\n"
"}]]>"
msgstr ""
"<![CDATA[@PayByCreditCard\n"
"public class CreditCardPaymentProcessor implements PaymentProcessor {\n"
"    public void process(Payment payment) { ... }\n"
"}]]>"

#. Tag: para
#: injection.xml:102
#, no-c-format
msgid ""
"Where <literal>@PayByCheque</literal> and <literal>@PayByCreditCard</"
"literal> are binding annotations:"
msgstr ""
"Donde <literal>@PayByCheque</literal> y <literal>@PayByCreditCard</"
"literal> son anotaciones de enlace:"

#. Tag: programlisting
#: injection.xml:105
#, no-c-format
msgid ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"@BindingType\n"
"public @interface PayByCheque {}]]>"
msgstr ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"@BindingType\n"
"public @interface PayByCheque {}]]>"

#. Tag: programlisting
#: injection.xml:107
#, no-c-format
msgid ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"@BindingType\n"
"public @interface PayByCreditCard {}]]>"
msgstr ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"@BindingType\n"
"public @interface PayByCreditCard {}]]>"

#. Tag: para
#: injection.xml:109
#, no-c-format
msgid ""
"A client Web Bean developer uses the binding annotation to specify exactly "
"which Web Bean should be injected."
msgstr "Un desarrollador de cliente de Web Bean utiliza la anotación de enlace para especificar exactamente el Web Bean que debe inyectarse."

#. Tag: para
#: injection.xml:112
#, no-c-format
msgid "Using field injection:"
msgstr "Uso de inyección de campo:"

#. Tag: programlisting
#: injection.xml:114
#, no-c-format
msgid ""
"<![CDATA[@PayByCheque PaymentProcessor chequePaymentProcessor;\n"
"@PayByCreditCard PaymentProcessor creditCardPaymentProcessor;]]>"
msgstr ""
"<![CDATA[@PayByCheque PaymentProcessor chequePaymentProcessor;\n"
"@PayByCreditCard PaymentProcessor creditCardPaymentProcessor;]]>"

#. Tag: para
#: injection.xml:116
#, no-c-format
msgid "Using initializer method injection:"
msgstr "Uso de inyección de método inicializador:"

#. Tag: programlisting
#: injection.xml:118
#, no-c-format
msgid ""
"<![CDATA[@Initializer\n"
"public void setPaymentProcessors(@PayByCheque PaymentProcessor "
"chequePaymentProcessor, \n"
"                                 @PayByCreditCard PaymentProcessor "
"creditCardPaymentProcessor) {\n"
"   this.chequePaymentProcessor = chequePaymentProcessor;\n"
"   this.creditCardPaymentProcessor = creditCardPaymentProcessor;\n"
"}]]>"
msgstr ""
"<![CDATA[@Initializer\n"
"public void setPaymentProcessors(@PayByCheque PaymentProcessor "
"chequePaymentProcessor, \n"
"                                 @PayByCreditCard PaymentProcessor "
"creditCardPaymentProcessor) {\n"
"   this.chequePaymentProcessor = chequePaymentProcessor;\n"
"   this.creditCardPaymentProcessor = creditCardPaymentProcessor;\n"
"}]]>"

#. Tag: para
#: injection.xml:120
#, no-c-format
msgid "Or using constructor injection:"
msgstr "O uso de inyección de constructor:"

#. Tag: programlisting
#: injection.xml:122
#, no-c-format
msgid ""
"<![CDATA[@Initializer\n"
"public Checkout(@PayByCheque PaymentProcessor chequePaymentProcessor, \n"
"                @PayByCreditCard PaymentProcessor "
"creditCardPaymentProcessor) {\n"
"   this.chequePaymentProcessor = chequePaymentProcessor;\n"
"   this.creditCardPaymentProcessor = creditCardPaymentProcessor;\n"
"}]]>"
msgstr ""
"<![CDATA[@Initializer\n"
"public Checkout(@PayByCheque PaymentProcessor chequePaymentProcessor, \n"
"                @PayByCreditCard PaymentProcessor "
"creditCardPaymentProcessor) {\n"
"   this.chequePaymentProcessor = chequePaymentProcessor;\n"
"   this.creditCardPaymentProcessor = creditCardPaymentProcessor;\n"
"}]]>"

#. Tag: title
#: injection.xml:125
#, no-c-format
msgid "Binding annotations with members"
msgstr "Anotaciones de enlace con miembros"

#. Tag: para
#: injection.xml:127
#, no-c-format
msgid "Binding annotations may have members:"
msgstr "Las anotaciones de enlace pueden tener miembros:"

#. Tag: programlisting
#: injection.xml:129
#, no-c-format
msgid ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"@BindingType\n"
"public @interface PayBy {\n"
"    PaymentType value();\n"
"}]]>"
msgstr ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"@BindingType\n"
"public @interface PayBy {\n"
"    PaymentType value();\n"
"}]]>"

#. Tag: para
#: injection.xml:131
#, no-c-format
msgid "In which case, the member value is significant:"
msgstr "En cuyo caso, el valor de miembro es importante:"

#. Tag: programlisting
#: injection.xml:133
#, no-c-format
msgid ""
"<![CDATA[@PayBy(CHEQUE) PaymentProcessor chequePaymentProcessor;\n"
"@PayBy(CREDIT_CARD) PaymentProcessor creditCardPaymentProcessor;]]>"
msgstr ""
"<![CDATA[@PayBy(CHEQUE) PaymentProcessor chequePaymentProcessor;\n"
"@PayBy(CREDIT_CARD) PaymentProcessor creditCardPaymentProcessor;]]>"

#. Tag: para
#: injection.xml:135
#, no-c-format
msgid ""
"You can tell the Web Bean manager to ignore a member of a binding annotation "
"type by annotating the member <literal>@NonBinding</literal>."
msgstr "Se puede pedir al administrador de Web Bean que ignore a un miembro de un tipo de anotación de enlace anotando al miembro <literal>@NonBinding</literal>."

#. Tag: title
#: injection.xml:141
#, no-c-format
msgid "Combinations of binding annnotations"
msgstr "Combinaciones de anotaciones de enlace"

#. Tag: para
#: injection.xml:143
#, no-c-format
msgid "An injection point may even specify multiple binding annotations:"
msgstr "Un punto de inyección puede incluso especificar múltiples anotaciones de enlace:"

#. Tag: programlisting
#: injection.xml:145
#, no-c-format
msgid "<![CDATA[@Asynchronous @PayByCheque PaymentProcessor paymentProcessor]]>"
msgstr "<![CDATA[@Asynchronous @PayByCheque PaymentProcessor paymentProcessor]]>"

#. Tag: para
#: injection.xml:147
#, no-c-format
msgid ""
"In this case, only a Web Bean which has <emphasis>both</emphasis> binding "
"annotations would be eligible for injection."
msgstr "En este caso, sólo el Web Bean que tiene <emphasis>ambas</emphasis> anotaciones de enlace sería elegible para inyección."

#. Tag: title
#: injection.xml:153
#, no-c-format
msgid "Binding annotations and producer methods"
msgstr "Anotaciones de enlace y métodos de productor"

#. Tag: para
#: injection.xml:155
#, no-c-format
msgid "Even producer methods may specify binding annotations:"
msgstr "Incluso los métodos de productor pueden especificar anotaciones de enlace:"

#. Tag: programlisting
#: injection.xml:157
#, no-c-format
msgid ""
"<![CDATA[@Produces \n"
"@Asynchronous @PayByCheque \n"
"PaymentProcessor createAsyncPaymentProcessor(@PayByCheque PaymentProcessor "
"processor) {\n"
"    return new AsynchronousPaymentProcessor(processor);\n"
"}]]>"
msgstr ""
"<![CDATA[@Produces \n"
"@Asynchronous @PayByCheque \n"
"PaymentProcessor createAsyncPaymentProcessor(@PayByCheque PaymentProcessor "
"processor) {\n"
"    return new AsynchronousPaymentProcessor(processor);\n"
"}]]>"

#. Tag: title
#: injection.xml:162
#, no-c-format
msgid "The default binding type"
msgstr "El tipo de enlace predeterminado"

#. Tag: para
#: injection.xml:164
#, no-c-format
msgid ""
"Web Beans defines a binding type <literal>@Current</literal> that is the "
"default binding type for any injection point or Web Bean that does not "
"explicitly specify a binding type."
msgstr "Web Beans define un tipo de enlace <literal>@Current</literal>, el cual es el tipo de enlace predeterminado para cualquier punto de inyección o Web Bean que no especifique explícitamente un tipo de enlace."

#. Tag: para
#: injection.xml:168
#, no-c-format
msgid ""
"There are two common circumstances in which it is necessary to explicitly "
"specify <literal>@Current</literal>:"
msgstr "Hay dos circunstancias comunes en que se necesita especificar explícitamente a <literal>@Current</literal>:"

#. Tag: para
#: injection.xml:173
#, no-c-format
msgid ""
"on a field, in order to declare it as an injected field with the default "
"binding type, and"
msgstr "en un campo, para declararlo como un campo inyectado con el tipo de enlace por defecto, y "

#. Tag: para
#: injection.xml:177
#, no-c-format
msgid ""
"on a Web Bean which has another binding type in addition to the default "
"binding type."
msgstr "en un Web Bean, el cual tiene otro tipo de enlace además del tipo de enlace predeterminado."

#. Tag: title
#: injection.xml:187
#, no-c-format
msgid "Deployment types"
msgstr "Tipos de despliegue"

#. Tag: para
#: injection.xml:189
#, no-c-format
msgid ""
"All Web Beans have a <emphasis>deployment type</emphasis>. Each deployment "
"type identifies a set of Web Beans that should be conditionally installed in "
"some deployments of the system."
msgstr "Todos los Web Beans tienen un <emphasis>tipo de despliegue</emphasis>. Cada tipo de despliegue identifica un conjunto de Web Beans que debería ser instalado bajo condiciones en algunos despliegues del sistema."

#. Tag: para
#: injection.xml:193
#, no-c-format
msgid ""
"For example, we could define a deployment type named <literal>@Mock</"
"literal>, which would identify Web Beans that should only be installed when "
"the system executes inside an integration testing environment:"
msgstr ""
"Por ejemplo, podríamos definir un tipo de despliegue llamado <literal>@Mock</"
"literal>, el cual identificaría Web Beans que deben ser instalados sólo cuando el sistema se ejecute dentro de un entorno de pruebas de integración:"

#. Tag: programlisting
#: injection.xml:197
#, no-c-format
msgid ""
"<![CDATA[@Retention(RUNTIME)\n"
"  @Target({TYPE, METHOD})\n"
"  @DeploymentType\n"
"  public @interface Mock {}]]>"
msgstr ""
"<![CDATA[@Retention(RUNTIME)\n"
"  @Target({TYPE, METHOD})\n"
"  @DeploymentType\n"
"  public @interface Mock {}]]>"

#. Tag: para
#: injection.xml:199
#, no-c-format
msgid ""
"Suppose we had some Web Bean that interacted with an external system to "
"process payments:"
msgstr "Supongamos que tenemos algunos Web Bean que interactuaron con un sistema externo para procesar pagos:"

#. Tag: programlisting
#: injection.xml:202
#, no-c-format
msgid ""
"<![CDATA[public class ExternalPaymentProcessor {\n"
"        \n"
"    public void process(Payment p) {\n"
"        ...\n"
"    }\n"
"    \n"
"}]]>"
msgstr ""
"<![CDATA[public class ExternalPaymentProcessor {\n"
"        \n"
"    public void process(Payment p) {\n"
"        ...\n"
"    }\n"
"    \n"
"}]]>"

#. Tag: para
#: injection.xml:204
#, no-c-format
msgid ""
"Since this Web Bean does not explicitly specify a deployment type, it has "
"the default deployment type <literal>@Production</literal>."
msgstr "Como este Web Bean no especifica explícitamente un tipo de despliegue, tiene el tipo de despliegue predeterminado <literal>@Production</literal>."

#. Tag: para
#: injection.xml:207
#, no-c-format
msgid ""
"For integration or unit testing, the external system is slow or unavailable. "
"So we would create a mock object:"
msgstr "Para prueba de integración o de unidad, el sistema externo está lento o no está disponible. Por lo tanto, creamos el objeto mock:"

#. Tag: programlisting
#: injection.xml:210
#, no-c-format
msgid ""
"<![CDATA[@Mock \n"
"public class MockPaymentProcessor implements PaymentProcessor {\n"
"\n"
"    @Override\n"
"    public void process(Payment p) {\n"
"        p.setSuccessful(true);\n"
"    }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@Mock \n"
"public class MockPaymentProcessor implements PaymentProcessor {\n"
"\n"
"    @Override\n"
"    public void process(Payment p) {\n"
"        p.setSuccessful(true);\n"
"    }\n"
"\n"
"}]]>"

#. Tag: para
#: injection.xml:212
#, no-c-format
msgid ""
"But how does the Web Bean manager determine which implementation to use in a "
"particular deployment?"
msgstr "Pero, ¿cómo determina el administrador de Web Bean la aplicación que debe utilizar en un despliegue determinado?"

#. Tag: title
#: injection.xml:216
#, no-c-format
msgid "Enabling deployment types"
msgstr "Habilitar tipos de despliegue"

#. Tag: para
#: injection.xml:218
#, no-c-format
msgid ""
"Web Beans defines two built-in deployment types: <literal>@Production</"
"literal> and <literal>@Standard</literal>. By default, only Web Beans with "
"the built-in deployment types are enabled when the system is deployed. We "
"can identify additional deployment types to be enabled in a particular "
"deployment by listing them in <literal>web-beans.xml</literal>."
msgstr ""
"Web Beans define dos tipos de despliegue incorporados: <literal>@Production</"
"literal> y <literal>@Standard</literal>. Por defecto, sólo los Web Beans con tipos de despliegue incorporados se habilitan cuando se despliega el sistema. Podemos identificar tipos de despliegue adicionales en un despliegue particular listándolos en <literal>web-beans.xml</literal>."

#. Tag: para
#: injection.xml:224
#, no-c-format
msgid ""
"Going back to our example, when we deploy our integration tests, we want all "
"our <literal>@Mock</literal> objects to be installed:"
msgstr "Volviendo a nuestro ejemplo, cuando desplegamos nuestras pruebas de integración, deseamos que todos nuestros objetos <literal>@Mock</literal> sean instalados:"

#. Tag: programlisting
#: injection.xml:227
#, no-c-format
msgid ""
"<![CDATA[<WebBeans>\n"
"    <Deploy>\n"
"        <Standard/>\n"
"        <Production/>\n"
"        <test:Mock/>\n"
"    </Deploy>\n"
"</WebBeans>]]>"
msgstr ""
"<![CDATA[<WebBeans>\n"
"    <Deploy>\n"
"        <Standard/>\n"
"        <Production/>\n"
"        <test:Mock/>\n"
"    </Deploy>\n"
"</WebBeans>]]>"

#. Tag: para
#: injection.xml:229
#, no-c-format
msgid ""
"Now the Web Bean manager will identify and install all Web Beans annotated "
"<literal>@Production</literal>, <literal>@Standard</literal> or "
"<literal>@Mock</literal> at deployment time."
msgstr ""
"Ahora el administrador de Web Bean identificará e instalará todos los Web Beans anotados <literal>@Production</literal>, <literal>@Standard</literal> o "
"<literal>@Mock</literal> en el momento del despliegue."

#. Tag: para
#: injection.xml:233
#, no-c-format
msgid ""
"The deployment type <literal>@Standard</literal> is used only for certain "
"special Web Beans defined by the Web Beans specification. We can't use it "
"for our own Web Beans, and we can't disable it."
msgstr "El tipo de despliegue <literal>@Standard</literal> es utilizado únicamente por algunos Web Beans especiales definidos por la especificación de Web Beans. No podemos utilizarlo para nuestros propios Web Beans ni inhabilitarlo."

#. Tag: para
#: injection.xml:237
#, no-c-format
msgid ""
"The deployment type <literal>@Production</literal> is the default deployment "
"type for Web Beans which don't explicitly declare a deployment type, and may "
"be disabled."
msgstr "El tipo de despliegue <literal>@Production</literal> es el tipo de despliegue predeterminado para Web Beans que no declaran explícitamente un tipo de despliegue, y que se puede inhabilitar."

#. Tag: title
#: injection.xml:244
#, no-c-format
msgid "Deployment type precedence"
msgstr "Prioridad de tipo de despliegue"

#. Tag: para
#: injection.xml:246
#, no-c-format
msgid ""
"If you've been paying attention, you're probably wondering how the Web Bean "
"manager decides which implementation&#151;<literal>ExternalPaymentProcessor</"
"literal> or <literal>MockPaymentProcessor</literal>&#151;to choose. Consider "
"what happens when the manager encounters this injection point:"
msgstr ""
"Si ha prestado atención, probablemente se estará preguntando cómo escoge Web Bean "
"la aplicación&#151;<literal>ExternalPaymentProcessor</"
"literal> o <literal>MockPaymentProcessor</literal>&#151;. Piense en lo que sucede cuando el administrador encuentra este punto de inyección:"

#. Tag: programlisting
#: injection.xml:251
#, no-c-format
msgid "<![CDATA[@Current PaymentProcessor paymentProcessor]]>"
msgstr "<![CDATA[@Current PaymentProcessor paymentProcessor]]>"

#. Tag: para
#: injection.xml:253
#, no-c-format
msgid ""
"There are now two Web Beans which satisfy the <literal>PaymentProcessor</"
"literal> contract. Of course, we can't use a binding annotation to "
"disambiguate, since binding annotations are hard-coded into the source at "
"the injection point, and we want the manager to be able to decide at "
"deployment time!"
msgstr ""
"Ahora hay dos Web Beans que cumplen el contrato <literal>PaymentProcessor</"
"literal>. Claro está que no podemos utilizar una anotación de enlace para explicar, porque las anotaciones de enlace están codificadas dentro de la fuente en el punto de inyección, y queremos que el administrador pueda decidir en el ¡momento de despliegue!"

#. Tag: para
#: injection.xml:258
#, no-c-format
msgid ""
"The solution to this problem is that each deployment type has a different "
"<emphasis>precedence</emphasis>. The precedence of the deployment types is "
"determined by the order in which they appear in <literal>web-beans.xml</"
"literal>. In our example, <literal>@Mock</literal> appears later than "
"<literal>@Production</literal> so it has a higher precedence."
msgstr ""
"La solución a este problema es que cada tipo de despliegue tiene una <emphasis>prioridad</emphasis> diferente. La prioridad de los tipos de despliegue es determinada por el orden de aparición en <literal>web-beans.xml</"
"literal>. En nuestro ejemplo, <literal>@Mock</literal> es posterior a <literal>@Production</literal> por lo tanto tiene mayor prioridad."

#. Tag: para
#: injection.xml:264
#, no-c-format
msgid ""
"Whenever the manager discovers that more than one Web Bean could satisfy the "
"contract (API type plus binding annotations) specified by an injection "
"point, it considers the relative precedence of the Web Beans. If one has a "
"higher precedence than the others, it chooses the higher precedence Web Bean "
"to inject. So, in our example, the Web Bean manager will inject "
"<literal>MockPaymentProcessor</literal> when executing in our integration "
"testing environment (which is exactly what we want)."
msgstr "Cada vez que el administrador descubre que más de un Web Bean cumple el contrato (tipo API más anotaciones de enlace) especificado por un punto de inyección, considera la prioridad relativa de los Web Beans. Se escoge el Web Bean que tiene prioridad respecto de los otros para inyectar. Por lo tanto, en nuestro ejemplo, el administrador de Web Bean inyectará <literal>MockPaymentProcessor</literal> al ejecutar en nuestro entorno de prueba de integración (que es precisamente lo que queremos)."

#. Tag: para
#: injection.xml:271
#, no-c-format
msgid ""
"It's interesting to compare this facility to today's popular manager "
"architectures. Various \"lightweight\" containers also allow conditional "
"deployment of classes that exist in the classpath, but the classes that are "
"to be deployed must be explicity, individually, listed in configuration code "
"or in some XML configuration file. Web Beans does support Web Bean "
"definition and configuration via XML, but in the common case where no "
"complex configuration is required, deployment types allow a whole set of Web "
"Beans to be enabled with a single line of XML. Meanwhile, a developer "
"browsing the code can easily identify what deployment scenarios the Web Bean "
"will be used in."
msgstr ""
"Es interesante comparar esta facilidad con las arquitecturas populares del administrador de hoy. Varios contenedores \"ligeros\" también permiten el despliegue condicional de clases existentes en el classpath, pero las clases que van a ser desplegadas deben ser explícitamente, listadas de modo individual en el código de configuración o en algún archivo de configuración XML. Web Beans no admite definición de Web Bean "
"ni configuración vía XML, pero en el común de los casos donde no se requiere una configuración compleja, los tipos de despliegue permiten habilitar un conjunto completo de Web Beans con una sóla línea de XML. Mientras tanto, un desarrollador que esté navegando el código puede fácilmente identificar en qué escenarios de despliegue se utilizará el Web Bean."

#. Tag: title
#: injection.xml:284
#, no-c-format
msgid "Example deployment types"
msgstr "Ejemplo de tipos de despliegue"

#. Tag: para
#: injection.xml:286
#, no-c-format
msgid "Deployment types are useful for all kinds of things, here's some examples:"
msgstr "Los tipos de despliegue son útiles para toda clase de cosas, algunos ejemplos a continuación:"

#. Tag: para
#: injection.xml:290
#, no-c-format
msgid ""
"<literal>@Mock</literal> and <literal>@Staging</literal> deployment types "
"for testing"
msgstr "Tipos de despliegue <literal>@Mock</literal> y <literal>@Staging</literal> para pruebas"

#. Tag: para
#: injection.xml:294
#, no-c-format
msgid "<literal>@AustralianTaxLaw</literal> for site-specific Web Beans"
msgstr "<literal>@AustralianTaxLaw</literal> para Web Beans de sitio específico"

#. Tag: para
#: injection.xml:297
#, no-c-format
msgid ""
"<literal>@SeamFramework</literal>, <literal>@Guice</literal> for third-party "
"frameworks which build on Web Beans"
msgstr "<literal>@SeamFramework</literal>, <literal>@Guice</literal> para marcos de terceras partes generados en Web Beans"

#. Tag: para
#: injection.xml:301
#, no-c-format
msgid ""
"<literal>@Standard</literal> for standard Web Beans defined by the Web Beans "
"specification"
msgstr "<literal>@Standard</literal>para Web Beans estándar definidos por la especificación Web Beans"

#. Tag: para
#: injection.xml:306
#, no-c-format
msgid "I'm sure you can think of more applications..."
msgstr "Estamos seguros que puede pensar en más aplicaciones..."

#. Tag: title
#: injection.xml:313
#, no-c-format
msgid "Fixing unsatisfied dependencies"
msgstr "Corregir dependencias insatisfechas"

#. Tag: para
#: injection.xml:315
#, no-c-format
msgid ""
"The typesafe resolution algorithm fails when, after considering the binding "
"annotations and and deployment types of all Web Beans that implement the API "
"type of an injection point, the Web Bean manager is unable to identify "
"exactly one Web Bean to inject."
msgstr "El algoritmo de resolución typesafe falla cuando, después de considerar las anotaciones de enlace y los tipos de despliegue de todos los Web Beans que implementan el tipo API de un punto de inyección, el administrador de Web Bean no puede identificar con precisión un Web Bean para inyectar."

#. Tag: para
#: injection.xml:320
#, no-c-format
msgid ""
"It's usually easy to fix an <literal>UnsatisfiedDependencyException</"
"literal> or <literal>AmbiguousDependencyException</literal>."
msgstr ""
"Por lo general es fácil corregir una <literal>UnsatisfiedDependencyException</"
"literal> o una <literal>AmbiguousDependencyException</literal>."

#. Tag: para
#: injection.xml:323
#, no-c-format
msgid ""
"To fix an <literal>UnsatisfiedDependencyException</literal>, simply provide "
"a Web Bean which implements the API type and has the binding types of the "
"injection point&#151;or enable the deployment type of a Web Bean that "
"already implements the API type and has the binding types."
msgstr "Para corregir una <literal>UnsatisfiedDependencyException</literal>, basta con proporcionar un Web Bean que implemente el tipo API y tenga los tipos de enlace del punto de inyección&#151;o permita el tipo de despliegue de un Web Bean que ya implemente el tipo API y tenga los tipos de enlace."

#. Tag: para
#: injection.xml:328
#, no-c-format
msgid ""
"To fix an <literal>AmbiguousDependencyException</literal>, introduce a "
"binding type to distinguish between the two implementations of the API type, "
"or change the deployment type of one of the implementations so that the Web "
"Bean manager can use deployment type precedence to choose between them. An "
"<literal>AmbiguousDependencyException</literal> can only occur if two Web "
"Beans share a binding type and have exactly the same deployment type."
msgstr ""
"Para corregir una <literal>AmbiguousDependencyException</literal>, introduzca un tipo de enlace para distinguir entre las dos implementaciones del tipo de API o cambie el tipo de despliegue de una de las implementaciones con el fin de que el administrador de Web Bean pueda utilizar la prioridad de tipo de despliegue para escoger entre ellas. Una <literal>AmbiguousDependencyException</literal> sólo puede presentarse si dos Web "
"Beans comparten un tipo de enlace y tienen exactamente el mismo tipo de despliegue."

#. Tag: para
#: injection.xml:335
#, no-c-format
msgid ""
"There's one more issue you need to be aware of when using dependency "
"injection in Web Beans."
msgstr "Hay algo más que necesita saber cuando utilice inyección de dependencia en Web Beans."

#. Tag: title
#: injection.xml:341
#, no-c-format
msgid "Client proxies"
msgstr "Los proxy de cliente"

#. Tag: para
#: injection.xml:343
#, no-c-format
msgid ""
"Clients of an injected Web Bean do not usually hold a direct reference to a "
"Web Bean instance."
msgstr "Los clientes de un Web Bean inyectado no suelen mantener una referencia directa a una instancia de Web Bean."

#. Tag: para
#: injection.xml:346
#, no-c-format
msgid ""
"Imagine that a Web Bean bound to the application scope held a direct "
"reference to a Web Bean bound to the request scope. The application scoped "
"Web Bean is shared between many different requests. However, each request "
"should see a different instance of the request scoped Web bean!"
msgstr "Imagine que un Web Bean vinculado al ámbito de aplicación mantiene una referencia directa a un Web Bean vinculado al ámbito de petición. La aplicación en el ámbito de Web Bean es compartida entre muchas peticiones diferentes. No obstante, cada petición ¡debe ver una instancia diferente de la petición en el ámbito de WebBean!"

#. Tag: para
#: injection.xml:351
#, no-c-format
msgid ""
"Now imagine that a Web Bean bound to the session scope held a direct "
"reference to a Web Bean bound to the application scope. From time to time, "
"the session context is serialized to disk in order to use memory more "
"efficiently. However, the application scoped Web Bean instance should not be "
"serialized along with the session scoped Web Bean!"
msgstr "Ahora imaginemos que un enlace de Web Bean a la sesión mantiene una referencia directa a un Web Bean enlazado al ámbito de la aplicación. De vez en cuando, el contexto de sesión se serializa al disco con el fin de utilizar la memoria de un modo más eficiente. Sin embargo, la aplicación en el ámbito de la instancia de Web Bean ¡no debe serializarse junto con la sesión en el ámbito de Web Bean!"

#. Tag: para
#: injection.xml:357
#, no-c-format
msgid ""
"Therefore, unless a Web Bean has the default scope <literal>@Dependent</"
"literal>, the Web Bean manager must indirect all injected references to the "
"Web Bean through a proxy object. This <emphasis>client proxy</emphasis> is "
"responsible for ensuring that the Web Bean instance that receives a method "
"invocation is the instance that is associated with the current context. The "
"client proxy also allows Web Beans bound to contexts such as the session "
"context to be serialized to disk without recursively serializing other "
"injected Web Beans."
msgstr ""
"Por lo tanto, a menos que un Web Bean tenga un ámbito predeterminado <literal>@Dependent</"
"literal>, el administrador de Web Bean deberá direccionar indirectamente todas las referencias inyectadas al "
"Web Bean a través del objeto de proxy. Este <emphasis>proxy de cliente</emphasis> responsable de garantizar que la instancia de Web Bean reciba un método de invocación es la instancia asociada con el contexto actual. El proxy de cliente también permite a los Web Beans vincularse a contextos tales como el contexto de sesión que debe serializarse al disco sin serializar de modo recursivo a otros Web Beans inyectados."

#. Tag: para
#: injection.xml:365
#, no-c-format
msgid ""
"Unfortunately, due to limitations of the Java language, some Java types "
"cannot be proxied by the Web Bean manager. Therefore, the Web Bean manager "
"throws an <literal>UnproxyableDependencyException</literal> if the type of "
"an injection point cannot be proxied."
msgstr "Lamentablemente, debido a limitaciones del lenguaje de Java, el administrador de Web Bean no puede utilizar proxy en algunos tipos de Java. Por lo tanto, el administrador de Web Bean produce un <literal>UnproxyableDependencyException</literal> si no se puede aplicar proxy al tipo de un punto de inyección."

#. Tag: para
#: injection.xml:370
#, no-c-format
msgid "The following Java types cannot be proxied by the Web Bean manager:"
msgstr "El administrador de Web Bean no puede aplicar proxy en los siguientes tipos de Java:"

#. Tag: para
#: injection.xml:374
#, no-c-format
msgid ""
"classes which are declared <literal>final</literal> or have a "
"<literal>final</literal> method,"
msgstr "las clases que son declaradas <literal>final</literal> o tienen un método <literal>final</literal>,"

#. Tag: para
#: injection.xml:378
#, no-c-format
msgid "classes which have no non-private constructor with no parameters, and"
msgstr "las clases que no tienen un constructor no-privado sin parámetros y "

#. Tag: para
#: injection.xml:381
#, no-c-format
msgid "arrays and primitive types."
msgstr "matrices y tipos primarios."

#. Tag: para
#: injection.xml:385
#, no-c-format
msgid ""
"It's usually very easy to fix an <literal>UnproxyableDependencyException</"
"literal>. Simply add a constructor with no parameters to the injected class, "
"introduce an interface, or change the scope of the injected Web Bean to "
"<literal>@Dependent</literal>."
msgstr ""
"Suele ser muy fácil corregir una <literal>UnproxyableDependencyException</"
"literal>. Basta con añadir un constructor sin parámetros a la clase inyectada, introducir una interfaz, o cambiar el ámbito del Web Bean inyectado a <literal>@Dependent</literal>."

#. Tag: title
#: injection.xml:392
#, no-c-format
msgid "Obtaining a Web Bean by programatic lookup"
msgstr "Obtención de un Web Bean por búsqueda programática"

#. Tag: para
#: injection.xml:394
#, no-c-format
msgid ""
"The application may obtain an instance of the interface <literal>Manager</"
"literal> by injection:"
msgstr ""
"La aplicación puede obtener una instancia de la interfaz <literal>Manager</"
"literal> a través de inyección:"

#. Tag: programlisting
#: injection.xml:397
#, no-c-format
msgid "<![CDATA[@Current Manager manager;]]>"
msgstr "<![CDATA[@Current Manager manager;]]>"

#. Tag: para
#: injection.xml:399
#, no-c-format
msgid ""
"The <literal>Manager</literal> object provides a set of methods for "
"obtaining a Web Bean instance programatically."
msgstr "El objeto <literal>Manager</literal> proporciona un grupo de métodos para obtener una instancia de Web Bean en forma programática."

#. Tag: programlisting
#: injection.xml:402
#, no-c-format
msgid ""
"<![CDATA[PaymentProcessor p = manager.getInstanceByType(PaymentProcessor."
"class);]]>"
msgstr ""
"<![CDATA[PaymentProcessor p = manager.getInstanceByType(PaymentProcessor."
"class);]]>"

#. Tag: para
#: injection.xml:404
#, no-c-format
msgid ""
"Binding annotations may be specified by subclassing the helper class "
"<literal>AnnotationLiteral</literal>, since it is otherwise difficult to "
"instantiate an annotation type in Java."
msgstr "Las anotaciones de enlace se pueden especificar a través de subclasificaciones de la clase auxiliar <literal>AnnotationLiteral</literal>, porque de otra manera es difícil instanciar un tipo de anotación en Java."

#. Tag: programlisting
#: injection.xml:408
#, no-c-format
msgid ""
"<![CDATA[PaymentProcessor p = manager.getInstanceByType(PaymentProcessor."
"class, \n"
"                                               new "
"AnnotationLiteral<CreditCard>(){});]]>"
msgstr ""
"<![CDATA[PaymentProcessor p = manager.getInstanceByType(PaymentProcessor."
"class, \n"
"                                               new "
"AnnotationLiteral<CreditCard>(){});]]>"

#. Tag: para
#: injection.xml:410
#, no-c-format
msgid ""
"If the binding type has an annotation member, we can't use an anonymous "
"subclass of <literal>AnnotationLiteral</literal>&#151;instead we'll need to "
"create a named subclass:"
msgstr "Si el tipo de vinculación tiene un miembro de anotación, no podemos utilizar una subclase anónima de <literal>AnnotationLiteral</literal>&#151;en su lugar, necesitaremos crear una subclase llamada:"

#. Tag: programlisting
#: injection.xml:413
#, no-c-format
msgid ""
"<![CDATA[abstract class CreditCardBinding \n"
"    extends AnnotationLiteral<CreditCard> \n"
"    implements CreditCard {}]]>"
msgstr ""
"<![CDATA[abstract class CreditCardBinding \n"
"    extends AnnotationLiteral<CreditCard> \n"
"    implements CreditCard {}]]>"

#. Tag: programlisting
#: injection.xml:415
#, no-c-format
msgid ""
"<![CDATA[PaymentProcessor p = manager.getInstanceByType(PaymentProcessor."
"class, \n"
"                                               new CreditCardBinding() { \n"
"                                                   public void value() "
"{ return paymentType; } \n"
"                                               } );]]>"
msgstr ""
"<![CDATA[PaymentProcessor p = manager.getInstanceByType(PaymentProcessor."
"class, \n"
"                                               new CreditCardBinding() { \n"
"                                                   public void value() "
"{ return paymentType; } \n"
"                                               } );]]>"

#. Tag: title
#: injection.xml:419
#, no-c-format
msgid ""
"Lifecycle callbacks, <literal>@Resource</literal>, <literal>@EJB</literal> "
"and <literal>@PersistenceContext</literal>"
msgstr ""
"El ciclo de vida de los callbacks, <literal>@Resource</literal>, <literal>@EJB</literal> "
"y <literal>@PersistenceContext</literal>"

#. Tag: para
#: injection.xml:422
#, no-c-format
msgid ""
"Enterprise Web Beans support all the lifecycle callbacks defined by the EJB "
"specification: <literal>@PostConstruct</literal>, <literal>@PreDestroy</"
"literal>, <literal>@PrePassivate</literal> and <literal>@PostActivate</"
"literal>."
msgstr ""
"Los Web Beans de empresa admiten todos los ciclos de vida de las devoluciones de llamadas definidas por la especificación EJB: <literal>@PostConstruct</literal>, <literal>@PreDestroy</"
"literal>, <literal>@PrePassivate</literal> y <literal>@PostActivate</"
"literal>."

#. Tag: para
#: injection.xml:426
#, no-c-format
msgid ""
"Simple Web Beans support only the <literal>@PostConstruct</literal> and "
"<literal>@PreDestroy</literal> callbacks."
msgstr ""
"Los Web Beans sencillos admiten únicamente las devoluciones de llamadas <literal>@PostConstruct</literal> y "
"<literal>@PreDestroy</literal>."

#. Tag: para
#: injection.xml:429
#, no-c-format
msgid ""
"Both enterprise and simple Web Beans support the use of <literal>@Resource</"
"literal>, <literal>@EJB</literal> and <literal>@PersistenceContext</literal> "
"for injection of Java EE resources, EJBs and JPA persistence contexts, "
"respectively. Simple Web Beans do not support the use of "
"<literal>@PersistenceContext(type=EXTENDED)</literal>."
msgstr ""
"Web Beans sencillos y empresariales soportan el uso de <literal>@Resource</"
"literal>, <literal>@EJB</literal> y <literal>@PersistenceContext</literal> para inyección de recursos de Java EE, EJB y contextos de persistencia JPA, respectivamente. Web Beans sencillos no admiten el uso de "
"<literal>@PersistenceContext(type=EXTENDED)</literal>."

#. Tag: para
#: injection.xml:434
#, no-c-format
msgid ""
"The <literal>@PostConstruct</literal> callback always occurs after all "
"dependencies have been injected."
msgstr "La devolución de llamada <literal>@PostConstruct</literal> siempre se presenta tras la inyección de todas las dependencias."

#. Tag: title
#: injection.xml:440
#, no-c-format
msgid "The <literal>InjectionPoint</literal> object"
msgstr "El objeto <literal>InjectionPoint</literal>"

#. Tag: para
#: injection.xml:442
#, no-c-format
msgid ""
"There are certain kinds of dependent objects&#151;Web Beans with scope "
"<literal>@Dependent</literal>&#151;that need to know something about the "
"object or injection point into which they are injected in order to be able "
"to do what they do. For example:"
msgstr "Hay algunas clases de objetos&#151;con ámbito <literal>@Dependent</literal>&#151;que necesitan saber algo acerca del objeto o punto de inyección dentro del cual son inyectados para poder hacer lo que hacen. Por ejemplo:"

#. Tag: para
#: injection.xml:448
#, no-c-format
msgid ""
"The log category for a <literal>Logger</literal> depends upon the class of "
"the object that owns it."
msgstr "La categoría de registro para un <literal>Logger</literal> depende de la clase de objeto que lo posea."

#. Tag: para
#: injection.xml:452
#, no-c-format
msgid ""
"Injection of a HTTP parameter or header value depends upon what parameter or "
"header name was specified at the injection point."
msgstr "La inyección de un parámetro HTTP o valor de encabezado depende del parámetro o del nombre de encabezado especificado en el punto de inyección."

#. Tag: para
#: injection.xml:456
#, no-c-format
msgid ""
"Injection of the result of an EL expression evaluation depends upon the "
"expression that was specified at the injection point."
msgstr "La inyección del resultado de una prueba de expresión EL depende de la expresión que fue especificada en el punto de inyección."

#. Tag: para
#: injection.xml:461
#, no-c-format
msgid ""
"A Web Bean with scope <literal>@Dependent</literal> may inject an instance "
"of <literal>InjectionPoint</literal> and access metadata relating to the "
"injection point to which it belongs."
msgstr "Un Web Bean con ámbito <literal>@Dependent</literal> puede inyectar una instancia de <literal>InjectionPoint</literal> y acceder a metadatos relativos al punto de inyección al que pertenezca."

#. Tag: para
#: injection.xml:465
#, no-c-format
msgid ""
"Let's look at an example. The following code is verbose, and vulnerable to "
"refactoring problems:"
msgstr "Veamos un ejemplo. El código siguiente es detallado, y vulnerable a problemas de refactorización:"

#. Tag: programlisting
#: injection.xml:468
#, no-c-format
msgid "<![CDATA[Logger log = Logger.getLogger(MyClass.class.getName());]]>"
msgstr "<![CDATA[Logger log = Logger.getLogger(MyClass.class.getName());]]>"

#. Tag: para
#: injection.xml:470
#, no-c-format
msgid ""
"This clever little producer method lets you inject a JDK <literal>Logger</"
"literal> without explicitly specifying the log category:"
msgstr "Este método inteligente de productor permite inyectar un <literal>Logger</literal> JDK sin especificar explícitamente la categoría de registro:"

#. Tag: programlisting
#: injection.xml:473
#, no-c-format
msgid ""
"<![CDATA[class LogFactory {\n"
"\n"
"   @Produces Logger createLogger(InjectionPoint injectionPoint) { \n"
"      return Logger.getLogger(injectionPoint.getMember().getDeclaringClass()."
"getName()); \n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[class LogFactory {\n"
"\n"
"   @Produces Logger createLogger(InjectionPoint injectionPoint) { \n"
"      return Logger.getLogger(injectionPoint.getMember().getDeclaringClass()."
"getName()); \n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: injection.xml:475
#, no-c-format
msgid "We can now write:"
msgstr "Ahora podemos escribir:"

#. Tag: programlisting
#: injection.xml:477
#, no-c-format
msgid "<![CDATA[@Current Logger log;]]>"
msgstr "<![CDATA[@Current Logger log;]]>"

#. Tag: para
#: injection.xml:479
#, no-c-format
msgid ""
"Not convinced? Then here's a second example. To inject HTTP parameters, we "
"need to define a binding type:"
msgstr "¿No está convencido? Entonces, veamos un segundo ejemplo. Para inyectar parámetros, necesitamos definir el tipo de vinculación:"

#. Tag: programlisting
#: injection.xml:482
#, no-c-format
msgid ""
"<![CDATA[@BindingType\n"
"@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"public @interface HttpParam {\n"
"   @NonBinding public String value();\n"
"}]]>"
msgstr ""
"<![CDATA[@BindingType\n"
"@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD, PARAMETER})\n"
"public @interface HttpParam {\n"
"   @NonBinding public String value();\n"
"}]]>"

#. Tag: para
#: injection.xml:484
#, no-c-format
msgid "We would use this binding type at injection points as follows:"
msgstr "Utilizaríamos este tipo de enlace en puntos de inyección, como a continuación:"

#. Tag: programlisting
#: injection.xml:486
#, no-c-format
msgid ""
"<![CDATA[@HttpParam(\"username\") String username;\n"
"@HttpParam(\"password\") String password;]]>"
msgstr ""
"<![CDATA[@HttpParam(\"username\") String username;\n"
"@HttpParam(\"password\") String password;]]>"

#. Tag: para
#: injection.xml:488
#, no-c-format
msgid "The following producer method does the work:"
msgstr "El siguiente método de productor sí funciona:"

#. Tag: programlisting
#: injection.xml:490
#, no-c-format
msgid ""
"<![CDATA[class HttpParams\n"
"\n"
"   @Produces @HttpParam(\"\")\n"
"   String getParamValue(ServletRequest request, InjectionPoint ip) {\n"
"      return request.getParameter(ip.getAnnotation(HttpParam.class).value"
"());\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[class HttpParams\n"
"\n"
"   @Produces @HttpParam(\"\")\n"
"   String getParamValue(ServletRequest request, InjectionPoint ip) {\n"
"      return request.getParameter(ip.getAnnotation(HttpParam.class).value"
"());\n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: injection.xml:492
#, no-c-format
msgid ""
"(Note that the <literal>value()</literal> member of the <literal>HttpParam</"
"literal> annotation is ignored by the Web Bean manager since it is annotated "
"<literal>@NonBinding.</literal>)"
msgstr ""
"(Observe que el miembro del <literal>valor()</literal> de la anotación <literal>HttpParam</"
"literal> es ignorado por el administrador de Web Bean porque está anotado como <literal>@NonBinding.</literal>)"

#. Tag: para
#: injection.xml:495
#, no-c-format
msgid ""
"The Web Bean manager provides a built-in Web Bean that implements the "
"<literal>InjectionPoint</literal> interface:"
msgstr "El administrador de Web Bean proporciona un Web Bean incorporado que implementa la interfaz <literal>InjectionPoint</literal>:"

#. Tag: programlisting
#: injection.xml:498
#, no-c-format
msgid ""
"<![CDATA[public interface InjectionPoint { \n"
"   public Object getInstance(); \n"
"   public Bean<?> getBean(); \n"
"   public Member getMember(): \n"
"   public <T extends Annotation> T getAnnotation(Class<T> annotation); \n"
"   public Set<T extends Annotation> getAnnotations(); \n"
"}]]>"
msgstr ""
"<![CDATA[public interface InjectionPoint { \n"
"   public Object getInstance(); \n"
"   public Bean<?> getBean(); \n"
"   public Member getMember(): \n"
"   public <T extends Annotation> T getAnnotation(Class<T> annotation); \n"
"   public Set<T extends Annotation> getAnnotations(); \n"
"}]]>"

