# Language it-IT translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-18 16:31+0000\n"
"PO-Revision-Date: 2009-01-18 17:43+0100\n"
"Last-Translator: Nicola Benaglia <nico.benaz@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: ri-spi.xml:4
#, no-c-format
msgid "Integrating the Web Beans RI into other environments"
msgstr "Integrazione di Web Beans RI in altri ambienti"

#. Tag: para
#: ri-spi.xml:6
#, no-c-format
msgid "Currently the Web Beans RI only runs in JBoss AS 5; integrating the RI into other EE environments (for example another application server like Glassfish), into a servlet container (like Tomcat), or with an Embedded EJB3.1 implementation is fairly easy. In this Appendix we will briefly discuss the steps needed."
msgstr "Attualmente Web Bean RI funziona solo in JBoss AS 5; l'integrazione di RI in altri ambienti EE (per esempio in un application server come Glassfish), in un servlet container (come Tomcat), o con un'implementazione EJB3.1 Embedded è abbastanza facile. In questo appendice si discuterà brevemente dei passi necessari."

#. Tag: para
#: ri-spi.xml:15
#, no-c-format
msgid "It should be possible to run Web Beans in an SE environment, but you'll to do more work, adding your own contexts and lifecycle. The Web Beans RI currently doesn't expose lifecycle extension points, so you would have to code directly against Web Beans RI classes."
msgstr "Dovrebbe essere possibile far funzionare Web Beans in un ambiente SE, ma occorre molto lavoro per aggiungere i propri contesti ed il ciclo di vita. Web Beans RI attualmente non espone punti di estensione del ciclo di vita, così occorre codificare direttamente nelle classi Web Beans RI."

#. Tag: title
#: ri-spi.xml:24
#, no-c-format
msgid "The Web Beans RI SPI"
msgstr "Web Beans RI SPI"

#. Tag: para
#: ri-spi.xml:26
#, no-c-format
msgid "The Web Beans SPI is located in <literal>webbeans-ri-spi</literal> module, and packaged as <literal>webbeans-ri-spi.jar</literal>. Some SPIs are optional, if you need to override the default behavior, others are required."
msgstr "Web Beans SPI è collocato nel modulo <literal>webbeans-ri-spi</literal>, ed è impacchettato come <literal>webbeans-ri-spi.jar</literal>. Alcuni SPI sono opzionali se occorre fare override del comportamento di default, altri sono richiesti."

#. Tag: para
#: ri-spi.xml:33
#, no-c-format
msgid "You can specify the implementation of an SPI either as a system property, or in a properties file <literal>META-INF/web-beans-ri.properties</literal>. All property names are the fully qualified class name of the implemented interface; all property values are the fully qualified class name of the implementation class."
msgstr "Si può specificare l'implementazione di un SPI sia come proprietà di sistema, sia in un file di proprietà <literal>META-INF/web-beans-ri.properties</literal>. Tutti i nomi delle proprietà sono nomi di classi fully qualified dell'interfaccia di implementazione; tutti i valori sono nomi di classi fully qualified della classe di implementazione."

#. Tag: para
#: ri-spi.xml:42
#, no-c-format
msgid "All interfaces in the SPI support the decorator pattern and provide a <literal>Forwarding</literal> class."
msgstr "Tutte le interfacce in SPI supportano il pattern decorator e forniscono una classe <literal>Forwarding</literal>."

#. Tag: title
#: ri-spi.xml:48
#, no-c-format
msgid "Web Bean Discovery"
msgstr "Web Bean Discovery"

#. Tag: programlisting
#: ri-spi.xml:50
#, no-c-format
msgid ""
"<![CDATA[public interface WebBeanDiscovery {\n"
"   /**\n"
"    * Gets list of all classes in classpath archives with web-beans.xml files\n"
"    * \n"
"    * @return An iterable over the classes \n"
"    */\n"
"   public Iterable<Class<?>> discoverWebBeanClasses();\n"
"   \n"
"   /**\n"
"    * Gets a list of all web-beans.xml files in the app classpath\n"
"    * \n"
"    * @return An iterable over the web-beans.xml files \n"
"    */\n"
"   public Iterable<URL> discoverWebBeansXml();\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface WebBeanDiscovery {\n"
"   /**\n"
"    * Gets list of all classes in classpath archives with web-beans.xml files\n"
"    * \n"
"    * @return An iterable over the classes \n"
"    */\n"
"   public Iterable<Class<?>> discoverWebBeanClasses();\n"
"   \n"
"   /**\n"
"    * Gets a list of all web-beans.xml files in the app classpath\n"
"    * \n"
"    * @return An iterable over the web-beans.xml files \n"
"    */\n"
"   public Iterable<URL> discoverWebBeansXml();\n"
"   \n"
"}]]>"

#. Tag: para
#: ri-spi.xml:52
#, no-c-format
msgid "The discovery of Web Bean classes and <literal>web-bean.xml</literal> files is self-explanatory (the algorithm is described in Section 11.1 of the JSR-299 specification, and isn't repeated here)."
msgstr "L'analisi dei file delle classi Web Bean e di <literal>web-bean.xml</literal> è molto istruttiva (l'algoritmo è descritto nella sezione 11.1 della specifica JSR-299 e non viene qua ripetuto)."

#. Tag: para
#: ri-spi.xml:58
#, no-c-format
msgid "The Web Beans RI can be told to load your implementation of <literal>WebBeanDiscovery</literal> using the property <literal>org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery</literal> with the fully qualified class name as the value. For example:"
msgstr "Web Beans RI può essere istruita a caricare la propria implementazione di <literal>WebBeanDiscovery</literal> usando la proprietà <literal>org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery</literal> con il nome della classe pienamente qualificato (fully qualified) come valore. Per esempio:"

#. Tag: programlisting
#: ri-spi.xml:65
#, no-c-format
msgid "org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery=org.jboss.webbeans.integration.jbossas.WebBeanDiscoveryImpl"
msgstr "org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery=org.jboss.webbeans.integration.jbossas.WebBeanDiscoveryImpl"

#. Tag: para
#: ri-spi.xml:67
#: ri-spi.xml:113
#: ri-spi.xml:146
#: ri-spi.xml:179
#, no-c-format
msgid "If the Web Beans RI is being used in a servlet container, it expects a constructor of the form:"
msgstr "Se Web Beans RI viene usato in un servlet container, si aspetta un costruttore della forma:"

#. Tag: programlisting
#: ri-spi.xml:72
#, no-c-format
msgid "<![CDATA[public WebBeanDiscoveryImpl(ServletContext servletContext) {}]]>"
msgstr "<![CDATA[public WebBeanDiscoveryImpl(ServletContext servletContext) {}]]>"

#. Tag: para
#: ri-spi.xml:74
#, no-c-format
msgid "The servlet context can be used to allow your implementation of <literal>WebBeanDiscovery</literal> to interact with the container."
msgstr "Il contesto del servlet può essere usato per consentire all'implementazione di <literal>WebBeanDiscovery</literal> di interagire con il container."

#. Tag: title
#: ri-spi.xml:82
#, no-c-format
msgid "EJB Discovery"
msgstr "EJB Discovery"

#. Tag: para
#: ri-spi.xml:84
#, no-c-format
msgid "The Web Beans RI also delegates EJB3 bean discovery to the container so that it doesn't have to scan for EJB3 annotations or parse <literal>ejb-jar.xml</literal>. For each EJB in the application an EJBDescriptor should be discovered:"
msgstr "Web Beans RI delega al container la rilevazione dei bean EJB3 e quindi risulta non essere necessario eseguire lo scan delle annotazioni EJB3 o fare il parsing di <literal>ejb-jar.xml</literal>. Per ciascun EJB nell'applicazione dovrebbe essere rilevato un EJBDescriptor:"

#. Tag: programlisting
#: ri-spi.xml:91
#, no-c-format
msgid ""
"<![CDATA[public interface EjbDiscovery\n"
"{\n"
"   public static final String PROPERTY_NAME = EjbDiscovery.class.getName();\n"
"   \n"
"   /**\n"
"    * Gets a descriptor for each EJB in the application\n"
"    * \n"
"    * @return The bean class to descriptor map \n"
"    */\n"
"   public Iterable<EjbDescriptor<?>> discoverEjbs();\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface EjbDiscovery\n"
"{\n"
"   public static final String PROPERTY_NAME = EjbDiscovery.class.getName();\n"
"   \n"
"   /**\n"
"    * Gets a descriptor for each EJB in the application\n"
"    * \n"
"    * @return The bean class to descriptor map \n"
"    */\n"
"   public Iterable<EjbDescriptor<?>> discoverEjbs();\n"
"   \n"
"}]]>"

#. Tag: programlisting
#: ri-spi.xml:93
#, no-c-format
msgid ""
"<![CDATA[public interface EjbDescriptor<T> {\n"
"   \n"
"   /**\n"
"    * Gets the EJB type\n"
"    * \n"
"    * @return The EJB Bean class\n"
"    */\n"
"   public Class<T> getType();\n"
"\n"
"   /**\n"
"    * Gets the local business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the local business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getLocalBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Gets the remote business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the remote business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getRemoteBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Get the remove methods of the EJB\n"
"    * \n"
"    * @return An iterator over the remove methods\n"
"    */\n"
"   public Iterable<Method> getRemoveMethods();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is stateless\n"
"    * \n"
"    * @return True if stateless, false otherwise\n"
"    */\n"
"   public boolean isStateless();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is a EJB 3.1 Singleton\n"
"    * \n"
"    * @return True if the bean is a singleton, false otherwise\n"
"    */\n"
"   public boolean isSingleton();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is stateful\n"
"    * \n"
"    * @return True if the bean is stateful, false otherwise\n"
"    */\n"
"   public boolean isStateful();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is and MDB\n"
"    * \n"
"    * @return True if the bean is an MDB, false otherwise\n"
"    */\n"
"   public boolean isMessageDriven();\n"
"\n"
"   /**\n"
"    * Gets the EJB name\n"
"    * \n"
"    * @return The name\n"
"    */\n"
"   public String getEjbName();\n"
"   \n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface EjbDescriptor<T> {\n"
"   \n"
"   /**\n"
"    * Gets the EJB type\n"
"    * \n"
"    * @return The EJB Bean class\n"
"    */\n"
"   public Class<T> getType();\n"
"\n"
"   /**\n"
"    * Gets the local business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the local business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getLocalBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Gets the remote business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the remote business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getRemoteBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Get the remove methods of the EJB\n"
"    * \n"
"    * @return An iterator over the remove methods\n"
"    */\n"
"   public Iterable<Method> getRemoveMethods();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is stateless\n"
"    * \n"
"    * @return True if stateless, false otherwise\n"
"    */\n"
"   public boolean isStateless();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is a EJB 3.1 Singleton\n"
"    * \n"
"    * @return True if the bean is a singleton, false otherwise\n"
"    */\n"
"   public boolean isSingleton();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is stateful\n"
"    * \n"
"    * @return True if the bean is stateful, false otherwise\n"
"    */\n"
"   public boolean isStateful();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is and MDB\n"
"    * \n"
"    * @return True if the bean is an MDB, false otherwise\n"
"    */\n"
"   public boolean isMessageDriven();\n"
"\n"
"   /**\n"
"    * Gets the EJB name\n"
"    * \n"
"    * @return The name\n"
"    */\n"
"   public String getEjbName();\n"
"   \n"
"   \n"
"}]]>"

#. Tag: para
#: ri-spi.xml:95
#, no-c-format
msgid "The <literal>EjbDescriptor</literal> is fairly self-explanatory, and should return the relevant metadata as defined in the EJB specification. In addition to these two interfaces, there is <literal>BusinessInterfaceDescriptor</literal> which represents a local business interface (encapsulating the interface class and jndi name used to look up an instance of the EJB)."
msgstr "Il <literal>EjbDescriptor</literal> è abbastanza auto-esplicatorio e dovrebbe restituire i metadati rilevanti definiti nella specifica EJB. In aggiunta a queste due interfacce, vi è <literal>BusinessInterfaceDescriptor</literal> a rappresentare un'interfaccia locale di business (che incapsula la classe d'interfaccia ed il nome jndi usato per la ricerca di una istanza EJB)."

#. Tag: para
#: ri-spi.xml:104
#, no-c-format
msgid "The Web Beans RI can be told to load your implementation of <literal>EjbDiscovery</literal> using the property <literal>org.jboss.webbeans.bootstrap.spi.EjbDiscovery</literal> with the fully qualified class name as the value. For example:"
msgstr "Web Beans RI può essere istruita a caricare la propria implementazione di <literal>EjbDiscovery</literal> usando la proprietà <literal>org.jboss.webbeans.bootstrap.spi.EjbDiscovery</literal> con il nome della classe pienamente qualificato (fully qualified) come valore. Per esempio:"

#. Tag: programlisting
#: ri-spi.xml:111
#, no-c-format
msgid "org.jboss.webbeans.bootstrap.spi.EjbDiscovery=org.jboss.webbeans.integration.jbossas.EjbDiscoveryImpl"
msgstr "org.jboss.webbeans.bootstrap.spi.EjbDiscovery=org.jboss.webbeans.integration.jbossas.EjbDiscoveryImpl"

#. Tag: programlisting
#: ri-spi.xml:118
#, no-c-format
msgid "<![CDATA[public EjbDiscoveryImpl(ServletContext servletContext) {}]]>"
msgstr "<![CDATA[public EjbDiscoveryImpl(ServletContext servletContext) {}]]>"

#. Tag: para
#: ri-spi.xml:120
#, no-c-format
msgid "The servlet context can be used to allow your implementation of <literal>EjbDiscovery</literal> to interact with the container."
msgstr "Il contesto del servlet può essere usato per consentire all'implementazione di <literal>EjbDiscovery</literal> di interagire con il container."

#. Tag: title
#: ri-spi.xml:128
#, no-c-format
msgid "JNDI"
msgstr "JNDI"

#. Tag: para
#: ri-spi.xml:130
#, no-c-format
msgid "The Web Beans RI implements JNDI binding and lookup according to standards, however you may want to alter the binding and lookup (for example in an environment where JNDI isn't available). To do this, implement <literal>org.jboss.webbeans.spi.resources.NamingContext</literal>:"
msgstr "Web Beans RI implementa la ricerca e l'associazione JNDI secondo gli standard, ma può capitare di dover modificare la ricerca e l'associazione (per esempio in un ambiente dove JNDI non è disponibile). Per fare questo occorre implementare <literal>org.jboss.webbeans.spi.resources.NamingContext</literal>:"

#. Tag: programlisting
#: ri-spi.xml:138
#, no-c-format
msgid ""
"<![CDATA[public interface NamingContext extends Serializable {\n"
"   \n"
"   /**\n"
"    * Typed JNDI lookup\n"
"    * \n"
"    * @param <T> The type\n"
"    * @param name The JNDI name\n"
"    * @param expectedType The expected type\n"
"    * @return The object\n"
"    */\n"
"   public <T> T lookup(String name, Class<? extends T> expectedType);\n"
"\n"
"   /**\n"
"    * Binds an item to JNDI\n"
"    * \n"
"    * @param name The key to bind under\n"
"    * @param value The item to bind\n"
"    */\n"
"   public void bind(String name, Object value);\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface NamingContext extends Serializable {\n"
"   \n"
"   /**\n"
"    * Typed JNDI lookup\n"
"    * \n"
"    * @param <T> The type\n"
"    * @param name The JNDI name\n"
"    * @param expectedType The expected type\n"
"    * @return The object\n"
"    */\n"
"   public <T> T lookup(String name, Class<? extends T> expectedType);\n"
"\n"
"   /**\n"
"    * Binds an item to JNDI\n"
"    * \n"
"    * @param name The key to bind under\n"
"    * @param value The item to bind\n"
"    */\n"
"   public void bind(String name, Object value);\n"
"   \n"
"}]]>"

#. Tag: para
#: ri-spi.xml:140
#: ri-spi.xml:173
#, no-c-format
msgid "and tell the RI to use it:"
msgstr "e dire a RI di usarlo:"

#. Tag: programlisting
#: ri-spi.xml:144
#, no-c-format
msgid "org.jboss.webbeans.resources.spi.NamingContext=com.acme.MyNamingContext"
msgstr "org.jboss.webbeans.resources.spi.NamingContext=com.acme.MyNamingContext"

#. Tag: programlisting
#: ri-spi.xml:151
#, no-c-format
msgid "<![CDATA[public MyNamingContext(ServletContext servletContext) {}]]>"
msgstr "<![CDATA[public MyNamingContext(ServletContext servletContext) {}]]>"

#. Tag: para
#: ri-spi.xml:153
#, no-c-format
msgid "The servlet context can be used to allow your implementation of <literal>NamingContext</literal> to interact with the container."
msgstr "Il contesto del servlet può essere usato per consentire all'implementazione di <literal>NamingContext</literal> di interagire con il container."

#. Tag: title
#: ri-spi.xml:161
#, no-c-format
msgid "Resource loading"
msgstr "Caricamento risorse"

#. Tag: para
#: ri-spi.xml:163
#, no-c-format
msgid "The Web Beans RI needs to load classes and resources from the classpath at various times. By default, they are loaded from the same classloader that was used to load the RI, however this may not be correct for some environments. If this is case, you can implement <literal>org.jboss.webbeans.spi.ResourceLoader</literal>:"
msgstr "Web Beans RI deve caricare le classi e le risorse dal classpath in vari momenti. Di default vengono caricati dallo stesso classloader usato per caricare RI, comunque questo potrebbe non essere corretto in alcuni ambienti. Se è questo il caso si può implementare  <literal>org.jboss.webbeans.spi.ResourceLoader</literal>:"

#. Tag: programlisting
#: ri-spi.xml:171
#, no-c-format
msgid ""
"<![CDATA[\n"
"         public interface ResourceLoader {\n"
"    \n"
"   /**\n"
"    * Creates a class from a given FQCN\n"
"    * \n"
"    * @param name The name of the clsas\n"
"    * @return The class\n"
"    */\n"
"   public Class<?> classForName(String name);\n"
"   \n"
"   /**\n"
"    * Gets a resource as a URL by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An URL to the resource\n"
"    */\n"
"   public URL getResource(String name);\n"
"   \n"
"   /**\n"
"    * Gets resources as URLs by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An iterable reference to the URLS\n"
"    */\n"
"   public Iterable<URL> getResources(String name);\n"
"   \n"
"}\n"
"         ]]>"
msgstr ""
"<![CDATA[\n"
"         public interface ResourceLoader {\n"
"    \n"
"   /**\n"
"    * Creates a class from a given FQCN\n"
"    * \n"
"    * @param name The name of the clsas\n"
"    * @return The class\n"
"    */\n"
"   public Class<?> classForName(String name);\n"
"   \n"
"   /**\n"
"    * Gets a resource as a URL by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An URL to the resource\n"
"    */\n"
"   public URL getResource(String name);\n"
"   \n"
"   /**\n"
"    * Gets resources as URLs by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An iterable reference to the URLS\n"
"    */\n"
"   public Iterable<URL> getResources(String name);\n"
"   \n"
"}\n"
"         ]]>"

#. Tag: programlisting
#: ri-spi.xml:177
#, no-c-format
msgid "org.jboss.webbeans.resources.spi.ResourceLoader=com.acme.ResourceLoader"
msgstr "org.jboss.webbeans.resources.spi.ResourceLoader=com.acme.ResourceLoader"

#. Tag: programlisting
#: ri-spi.xml:184
#, no-c-format
msgid "<![CDATA[public MyResourceLoader(ServletContext servletContext) {}]]>"
msgstr "<![CDATA[public MyResourceLoader(ServletContext servletContext) {}]]>"

#. Tag: para
#: ri-spi.xml:186
#, no-c-format
msgid "The servlet context can be used to allow your implementation of <literal>ResourceLoader</literal> to interact with the container."
msgstr "Il contesto del servlet può essere usato per consentire all'implementazione di <literal>ResourceLoader</literal> di interagire con il container."

#. Tag: title
#: ri-spi.xml:196
#, no-c-format
msgid "The contract with the container"
msgstr "Il contratto con il container"

#. Tag: para
#: ri-spi.xml:198
#, no-c-format
msgid "There are a number of requirements that the Web Beans RI places on the container for correct functioning that fall outside implementation of APIs"
msgstr "Per il corretto funzionamento al di fuori dell'implementazione delle API, ci sono un numero di requisiti che Web Beans RI pone nel container."

#. Tag: term
#: ri-spi.xml:206
#, no-c-format
msgid "Classloader isolation"
msgstr "Isolamento del classloader"

#. Tag: para
#: ri-spi.xml:210
#, no-c-format
msgid "If you are integrating the Web Beans RI into an environment that supports deployment of multiple applications, you must enable, automatically, or through user configuation, classloader isolation for each Web Beans application."
msgstr "Se si integra Web Beans in un ambiente che supporta il deploy di applicazioni, occorre abilitare, automaticamente o attraverso la configurazione utente, l'isolamento del classloader per ogni applicazione Web Beans."

#. Tag: term
#: ri-spi.xml:219
#, no-c-format
msgid "Servlet listener"
msgstr "Servlet listener"

#. Tag: para
#: ri-spi.xml:223
#, no-c-format
msgid "If you are integrating the Web Beans into a Servlet environment you must register <literal>org.jboss.webbeans.servlet.WebBeansListener</literal> as a Servlet listener, either automatically, or through user configuration, for each Web Beans application which uses Servlet."
msgstr "Se si integra Web Beans in un ambiente Servlet occorre registrare <literal>org.jboss.webbeans.servlet.WebBeansListener</literal> come Servlet listener, o automaticamente, o attraverso una configurazione utente, per ciascuna applicazione Web Beans che usa Servlet."

#. Tag: term
#: ri-spi.xml:234
#, no-c-format
msgid "Session Bean Interceptor"
msgstr "Session Bean Interceptor"

#. Tag: para
#: ri-spi.xml:238
#, no-c-format
msgid "If you are integrating the Web Beans into an EJB environment you must register <literal>org.jboss.webbeans.ejb.SessionBeanInterceptor</literal> as a EJB interceptor for all EJBs in the application, either automatically, or through user configuration, for each Web Beans application which uses enterprise beans."
msgstr "Se si integra Web Beans in un ambiente EJB occorre registrare <literal>org.jboss.webbeans.ejb.SessionBeanInterceptor</literal> come interceptor EJB per ogni EJB dell'applicazione, o automaticamente o attraverso una configurazione utente, per ciascuna applicazione Web Beans che utilizza bean enterprise."

#. Tag: term
#: ri-spi.xml:249
#, no-c-format
msgid "The <literal>webbeans-ri.jar</literal>"
msgstr "<literal>webbeans-ri.jar</literal>"

#. Tag: para
#: ri-spi.xml:253
#, no-c-format
msgid "If you are integrating the Web Beans into an environment that supports deployment of applications, you must insert the <literal>webbeans-ri.jar</literal> into the applications isolated classloader. It cannot be loaded from a shared classloader."
msgstr "Se si integra Web Beans in un ambiente che supporta il deploy di applicazioni, occorre inserire <literal>webbeans-ri.jar</literal> nel classloader isolato delle applicazioni. Non può essere caricato da un classloader condiviso."

#~ msgid "Currently, the only SPI to implement is the bootstrap spi:"
#~ msgstr ""
#~ "Attualmente l'unico SPI (Service Provider Interface) da implementare è "
#~ "l'spi di bootstrap:"
#~ msgid ""
#~ "The property can either be specified as a system property, or in a "
#~ "properties file <literal>META-INF/web-beans-ri.properties</literal>."
#~ msgstr ""
#~ "La proprietà può essere specificata come proprietà di sistema o nel file "
#~ "di proprietà <literal>META-INF/web-beans-ri.properties</literal>."

