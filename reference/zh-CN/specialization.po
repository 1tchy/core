# Language zh-CN translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-04 23:18+0000\n"
"PO-Revision-Date: 2009-03-13 16:32+0800\n"
"Last-Translator: Sean Wu <alartin@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: specialization.xml:4
#, no-c-format
msgid "Specialization"
msgstr "特化"

#. Tag: para
#: specialization.xml:6
#, no-c-format
msgid "We've already seen how the Web Beans dependency injection model lets us <emphasis>override</emphasis> the implementation of an API at deployment time. For example, the following enterprise Web Bean provides an implementation of the API <literal>PaymentProcessor</literal> in production:"
msgstr "我们已经看到Web Bean的依赖注入模型如何让我们在部署时期 <emphasis>重载</emphasis> 一个API实现。例如，下面的企业级Web Bean在生产环境下使提供一个<literal>PaymentProcessor</literal>接口的实现："

#. Tag: programlisting
#: specialization.xml:11
#, no-c-format
msgid ""
"@CreditCard @Stateless\n"
"public class CreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"
msgstr ""
"@CreditCard @Stateless\n"
"public class CreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"

#. Tag: para
#: specialization.xml:13
#, no-c-format
msgid "But in our staging environment, we override that implementation of <literal>PaymentProcessor</literal> with a different Web Bean:"
msgstr "但在我们的阶段开发环境中，我们可以使用一个不同的Web Bean来重载这个<literal>PaymentProcessor</literal> 实现："

#. Tag: programlisting
#: specialization.xml:16
#, no-c-format
msgid ""
"@CreditCard @Stateless @Staging\n"
"public class StagingCreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"
msgstr ""
"@CreditCard @Stateless @Staging\n"
"public class StagingCreditCardPaymentProcessor \n"
"        implements PaymentProcessor {\n"
"    ...\n"
"}"

#. Tag: para
#: specialization.xml:18
#, no-c-format
msgid "What we've tried to do with <literal>StagingCreditCardPaymentProcessor</literal> is to completely replace <literal>AsyncPaymentProcessor</literal> in a particular deployment of the system. In that deployment, the deployment type <literal>@Staging</literal> would have a higher priority than the default deployment type <literal>@Production</literal>, and therefore clients with the following injection point:"
msgstr "我们试图做的是在特定的系统部署环境中使用<literal>StagingCreditCardPaymentProcessor</literal>来完全替代<literal>AsyncPaymentProcessor</literal>。在这个部署中，部署类型为<literal>@Staging</literal>的将有比默认部署类型<literal>@Production</literal>更高的优先级，因此下面注入点的客户："

#. Tag: programlisting
#: specialization.xml:24
#, no-c-format
msgid "@CreditCard PaymentProcessor ccpp"
msgstr "@CreditCard PaymentProcessor ccpp"

#. Tag: para
#: specialization.xml:26
#, no-c-format
msgid "Would receive an instance of <literal>StagingCreditCardPaymentProcessor</literal>."
msgstr "将会收到一个 <literal>StagingCreditCardPaymentProcessor</literal> 的实例。"

#. Tag: para
#: specialization.xml:28
#, no-c-format
msgid "Unfortunately, there are several traps we can easily fall into:"
msgstr "不幸的是，我们很容易掉入几个陷阱："

#. Tag: para
#: specialization.xml:32
#, no-c-format
msgid "the higher-priority Web Bean may not implement all the API types of the Web Bean that it attempts to override,"
msgstr "更高优先级的Web Bean可能没有实现其要重载的所有的API类型，"

#. Tag: para
#: specialization.xml:36
#, no-c-format
msgid "the higher-priority Web Bean may not declare all the binding types of the Web Bean that it attempts to override,"
msgstr "更高优先级的Web Bean可能没有声明其要重载的所有绑定类型，"

#. Tag: para
#: specialization.xml:40
#, no-c-format
msgid "the higher-priority Web Bean might not have the same name as the Web Bean that it attempts to override, or"
msgstr "更高优先级的Web Bean可能没有和其要重载的Web Bean拥有相同的名字，或者"

#. Tag: para
#: specialization.xml:44
#, no-c-format
msgid "the Web Bean that it attempts to override might declare a producer method, disposal method or observer method."
msgstr "其要重载的Web Bean有可能声明了一个生产者方法，清除方法或者观察者方法。"

#. Tag: para
#: specialization.xml:49
#, no-c-format
msgid "In each of these cases, the Web Bean that we tried to override could still be called at runtime. Therefore, overriding is somewhat prone to developer error."
msgstr "在上面的任何一种情况，我们试图重载的Web Bean仍旧可以在运行时被调用。因此重载对于开发者来说是很容易出错的。"

#. Tag: para
#: specialization.xml:52
#, no-c-format
msgid "Web Beans provides a special feature, called <emphasis>specialization</emphasis>, that helps the developer avoid these traps. Specialization looks a little esoteric at first, but it's easy to use in practice, and you'll really appreciate the extra security it provides."
msgstr "Web Bean提供了一个特殊的特性，称之为<emphasis>特化</emphasis>，能够帮助开发者避免这些陷阱。特化初看起来有些神秘，但是在实际应用中非常容易使用，你很快就会感激它提供的特殊的安全性。"

#. Tag: title
#: specialization.xml:58
#, no-c-format
msgid "Using specialization"
msgstr "使用特化"

#. Tag: para
#: specialization.xml:60
#, no-c-format
msgid "Specialization is a feature that is specific to simple and enterprise Web Beans. To make use of specialization, the higher-priority Web Bean must:"
msgstr "特化是为简单和企业级Web Bean提供的特性。要使用特化，更高优先级的Web Bean必须："

#. Tag: para
#: specialization.xml:65
#, no-c-format
msgid "be a direct subclass of the Web Bean it overrides, and"
msgstr "是其重载的Web Bean的直接子类，并且"

#. Tag: para
#: specialization.xml:68
#, no-c-format
msgid "be a simple Web Bean if the Web Bean it overrides is a simple Web Bean or an enterprise Web Bean if the Web Bean it overrides is an enterprise Web Bean, and"
msgstr "如果其重载的是简单的Web Bean, 它也要是一个简单的Web Bean；如果其重载的是企业级的Web Bean, 它也要是一个企业级的Web Bean，并且"

#. Tag: para
#: specialization.xml:73
#, no-c-format
msgid "be annotated <literal>@Specializes</literal>."
msgstr "需要使用 <literal>@Specializes</literal> 注释。"

#. Tag: programlisting
#: specialization.xml:77
#, no-c-format
msgid ""
"@Stateless @Staging @Specializes\n"
"public class StagingCreditCardPaymentProcessor \n"
"        extends CreditCardPaymentProcessor {\n"
"    ...\n"
"}"
msgstr ""
"@Stateless @Staging @Specializes\n"
"public class StagingCreditCardPaymentProcessor \n"
"        extends CreditCardPaymentProcessor {\n"
"    ...\n"
"}"

#. Tag: para
#: specialization.xml:79
#, no-c-format
msgid "We say that the higher-priority Web Bean <emphasis>specializes</emphasis> its superclass."
msgstr "我们称更高优先级的Web Bean<emphasis>特化</emphasis>了它的超类。"

#. Tag: title
#: specialization.xml:85
#, no-c-format
msgid "Advantages of specialization"
msgstr "特化的优点"

#. Tag: para
#: specialization.xml:87
#, no-c-format
msgid "When specialization is used:"
msgstr "当使用特化时："

#. Tag: para
#: specialization.xml:91
#, no-c-format
msgid "the binding types of the superclass are automatically inherited by the Web Bean annotated <literal>@Specializes</literal>, and"
msgstr "超类的绑定类型自动被使用<literal>@Specializes</literal>注释的Web Bean继承，并且"

#. Tag: para
#: specialization.xml:95
#, no-c-format
msgid "the Web Bean name of the superclass is automatically inherited by the Web Bean annotated <literal>@Specializes</literal>, and"
msgstr "超类的Web Bean名称自动被使用<literal>@Specializes</literal>注释的Web Bean继承，并且"

#. Tag: para
#: specialization.xml:99
#, no-c-format
msgid "producer methods, disposal methods and observer methods declared by the superclass are called upon an instance of the Web Bean annotated <literal>@Specializes</literal>."
msgstr "超类声明的生产者方法，清除方法和观察者方法将在使用<literal>@Specializes</literal>注释的Web Bean实例上调用。"

#. Tag: para
#: specialization.xml:105
#, no-c-format
msgid "In our example, the binding type <literal>@CreditCard</literal> of <literal>CreditCardPaymentProcessor</literal> is inherited by <literal>StagingCreditCardPaymentProcessor</literal>."
msgstr "在我们这个例子中，<literal>CreditCardPaymentProcessor</literal> 的绑定类型 <literal>@CreditCard</literal>  被<literal>StagingCreditCardPaymentProcessor</literal>继承。"

#. Tag: para
#: specialization.xml:109
#, no-c-format
msgid "Furthermore, the Web Bean manager will validate that:"
msgstr "进一步，Web Bean管理器将验证："

#. Tag: para
#: specialization.xml:113
#, no-c-format
msgid "all API types of the superclass are API types of the Web Bean annotated <literal>@Specializes</literal> (all local interfaces of the superclass enterprise bean are also local interfaces of the subclass),"
msgstr "超类的所有API类型是使用 <literal>@Specializes</literal> 注释的Web Bean的API类型（所有企业级Bean超类的本地接口是子类的本地接口）"

#. Tag: para
#: specialization.xml:119
#, no-c-format
msgid "the deployment type of the Web Bean annotated <literal>@Specializes</literal> has a higher precedence than the deployment type of the superclass, and"
msgstr "使用 <literal>@Specializes</literal> 注释的Web Bean的部署类型比超类的部署类型拥有更高的优先级，并且"

#. Tag: para
#: specialization.xml:124
#, no-c-format
msgid "there is no other enabled Web Bean that also specializes the superclass."
msgstr "没有其他特化该超类的Web Bean被激活。"

#. Tag: para
#: specialization.xml:129
#, no-c-format
msgid "If any of these conditions are violated, the Web Bean manager throws an exception at initialization time."
msgstr "如果任何一条有冲突的话，Web Bean管理器将在初始化时抛出一个异常。"

#. Tag: para
#: specialization.xml:132
#, no-c-format
msgid "Therefore, we can be certain that the superclass will <emphasis>never</emphasis> be called in any deployment of the system where the Web Bean annotated <literal>@Specializes</literal> is deployed and enabled."
msgstr "因此，我们可以确定当使用<literal>@Specializes</literal>注释的Web Bean被部署和激活时，超类在系统的任何部署中<emphasis>都不会</emphasis>被调用。"

