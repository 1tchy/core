# translation of example.po to
# Language de-DE translations for Introduction_to_Web_Beans package.
# Automatically generated, 2009.
#
msgid ""
msgstr ""
"Project-Id-Version: example\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-01-06 12:17+0000\n"
"PO-Revision-Date: 2009-01-28 07:53+1100\n"
"Last-Translator: \n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: example.xml:4
#, no-c-format
msgid "JSF web application example"
msgstr "Beispiel einer JSF-Webanwendung"

#. Tag: para
#: example.xml:6
#, fuzzy, no-c-format
msgid ""
"Let's illustrate these ideas with a full example. We're going to implement "
"user login/logout for an application that uses JSF. First, we'll define a "
"request-scoped bean to hold the username and password entered during login, "
"with constraints defined using annotations from the Bean Validation "
"specification:"
msgstr ""
"Illustrieren wir diese Ideen an einem vollständigen Beispiel. Wir werden "
"einen Benutzer Login/Logout für eine JSF verwendende Anwendung "
"implementieren. Zunächst definieren wir ein Web Bean das den während des "
"Logins eingegebenen Benutzernamen und das Passwort verwahrt:"

#. Tag: programlisting
#: example.xml:12
#, fuzzy, no-c-format
msgid ""
"<![CDATA[@Named @RequestScoped\n"
"public class Credentials {\n"
"    private String username;\n"
"    private String password;\n"
"    \n"
"    @NotNull @Length(min=3, max=25)\n"
"    public String getUsername() { return username; }\n"
"    public void setUsername(String username) { this.username = username; }\n"
"    \n"
"    @NotNull @Length(min=6, max=20)\n"
"    public String getPassword() { return password; }\n"
"    public void setPassword(String password) { this.password = password; }\n"
"}]]>"
msgstr ""
"<![CDATA[@Named @RequestScoped\n"
"public class Credentials {\n"
"        \n"
"    private String username;\n"
"    private String password;\n"
"    \n"
"    public String getUsername() { return username; }\n"
"    public void setUsername(String username) { this.username = username; }\n"
"    \n"
"    public String getPassword() { return password; }\n"
"    public void setPassword(String password) { this.password = password; }\n"
"    \n"
"}]]>"

#. Tag: para
#: example.xml:14
#, fuzzy, no-c-format
msgid "This bean is bound to the login prompt in the following JSF form:"
msgstr ""
"Dieses Web Bean ist an den Login-Prompt in folgendem JSF-Formular gebunden:"

#. Tag: programlisting
#: example.xml:16
#, fuzzy, no-c-format
msgid ""
"<![CDATA[<h:form>\n"
"   <h:panelGrid columns=\"2\" rendered=\"#{!login.loggedIn}\">\n"
"      <f:validateBean>\n"
"         <h:outputLabel for=\"username\">Username:</h:outputLabel>\n"
"         <h:inputText id=\"username\" value=\"#{credentials.username}\"/>\n"
"         <h:outputLabel for=\"password\">Password:</h:outputLabel>\n"
"         <h:inputText id=\"password\" value=\"#{credentials.password}\"/>\n"
"      </f:validateBean>\n"
"   </h:panelGrid>\n"
"   <h:commandButton value=\"Login\" action=\"#{login.login}\" rendered=\"#{!"
"login.loggedIn}\"/>\n"
"   <h:commandButton value=\"Logout\" action=\"#{login.logout}\" rendered=\"#"
"{login.loggedIn}\"/>\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form>\n"
"    <h:panelGrid columns=\"2\" rendered=\"#{!login.loggedIn}\">\n"
"        <h:outputLabel for=\"username\">Username:</h:outputLabel>\n"
"        <h:inputText id=\"username\" value=\"#{credentials.username}\"/>\n"
"        <h:outputLabel for=\"password\">Password:</h:outputLabel>\n"
"        <h:inputText id=\"password\" value=\"#{credentials.password}\"/>\n"
"    </h:panelGrid>\n"
"    <h:commandButton value=\"Login\" action=\"#{login.login}\" rendered=\"#{!"
"login.loggedIn}\"/>\n"
"    <h:commandButton value=\"Logout\" acion=\"#{login.logout}\" rendered=\"#"
"{login.loggedIn}\"/>\n"
"</h:form>]]>"

#. Tag: para
#: example.xml:18
#, no-c-format
msgid "Users are represented by a JPA entity:"
msgstr ""

#. Tag: programlisting
#: example.xml:22
#, fuzzy, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class User {\n"
"   private @NotNull @Length(min=3, max=25) @Id String username;\n"
"   private @NotNull @Length(min=6, max=20) String password;\n"
"   \n"
"   public String getUsername() { return username; }\n"
"   public void setUsername(String username) { this.username = username; }\n"
"   public String setPassword(String password) { this.password = password; }\n"
"}]]>"
msgstr ""
"<![CDATA[@Named @RequestScoped\n"
"public class Credentials {\n"
"        \n"
"    private String username;\n"
"    private String password;\n"
"    \n"
"    public String getUsername() { return username; }\n"
"    public void setUsername(String username) { this.username = username; }\n"
"    \n"
"    public String getPassword() { return password; }\n"
"    public void setPassword(String password) { this.password = password; }\n"
"    \n"
"}]]>"

#. Tag: para
#: example.xml:24
#, no-c-format
msgid ""
"(Note that we're also going to need a <literal>persistence.xml</literal> "
"file to configure the JPA persistence unit containing <literal>User</"
"literal>.)"
msgstr ""

#. Tag: para
#: example.xml:29
#, fuzzy, no-c-format
msgid ""
"The actual work is done by a session-scoped bean that maintains information "
"about the currently logged-in user and exposes the <literal>User</literal> "
"entity to other beans:"
msgstr ""
"Die eigentliche Arbeit wird durch ein Session-begrenztes Web Bean "
"übernommen, dass Informationen zum aktuell eingeloggten Benutzer verwahrt "
"und anderen Web Beans die <literal>User</literal>-Entity offenlegt:"

#. Tag: programlisting
#: example.xml:34
#, fuzzy, no-c-format
msgid ""
"<![CDATA[@SessionScoped @Named\n"
"public class Login implements Serializable {\n"
"\n"
"   @Inject Credentials credentials;\n"
"   @Inject @UserDatabase EntityManager userDatabase;\n"
"\n"
"   private User user;\n"
"    \n"
"   public void login() {\n"
"      List<User> results = userDatabase.createQuery(\n"
"         \"select u from User u where u.username = :username and u.password "
"= :password\")\n"
"         .setParameter(\"username\", credentials.getUsername())\n"
"         .setParameter(\"password\", credentials.getPassword())\n"
"         .getResultList();\n"
"        \n"
"      if (!results.isEmpty()) {\n"
"         user = results.get(0);\n"
"      }\n"
"      else {\n"
"         // perhaps add code here to report a failed login\n"
"      }\n"
"   }\n"
"    \n"
"   public void logout() {\n"
"      user = null;\n"
"   }\n"
"    \n"
"   public boolean isLoggedIn() {\n"
"      return user != null;\n"
"   }\n"
"    \n"
"   @Produces @LoggedIn User getCurrentUser() {\n"
"      return user;\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@SessionScoped @Named\n"
"public class Login {\n"
"\n"
"    @Current Credentials credentials;\n"
"    @PersistenceContext EntityManager userDatabase;\n"
"\n"
"    private User user;\n"
"    \n"
"    public void login() {\n"
"            \n"
"        List<User> results = userDatabase.createQuery(\n"
"           \"select u from User u where u.username=:username and u.password=:"
"password\")\n"
"           .setParameter(\"username\", credentials.getUsername())\n"
"           .setParameter(\"password\", credentials.getPassword())\n"
"           .getResultList();\n"
"        \n"
"        if ( !results.isEmpty() ) {\n"
"           user = results.get(0);\n"
"        }\n"
"        \n"
"    }\n"
"    \n"
"    public void logout() {\n"
"        user = null;\n"
"    }\n"
"    \n"
"    public boolean isLoggedIn() {\n"
"       return user!=null;\n"
"    }\n"
"    \n"
"    @Produces @LoggedIn User getCurrentUser() {\n"
"        return user;\n"
"    }\n"
"\n"
"}]]>"

#. Tag: para
#: example.xml:36
#, no-c-format
msgid ""
"<literal>@LoggedIn</literal> and <literal>@UserDatabase</literal> are custom "
"qualifier annotations:"
msgstr ""

#. Tag: programlisting
#: example.xml:38
#, fuzzy, no-c-format
msgid ""
"<![CDATA[@Qualifier\n"
"@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, PARAMETER, FIELD})\n"
"public @interface LoggedIn {}]]>"
msgstr ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD})\n"
"@BindingType\n"
"public @interface LoggedIn {}]]>"

#. Tag: programlisting
#: example.xml:40
#, fuzzy, no-c-format
msgid ""
"<![CDATA[@Qualifier\n"
"@Retention(RUNTIME)\n"
"@Target({METHOD, PARAMETER, FIELD})\n"
"public @interface UserDatabase {}]]>"
msgstr ""
"<![CDATA[@Retention(RUNTIME)\n"
"@Target({TYPE, METHOD, FIELD})\n"
"@BindingType\n"
"public @interface LoggedIn {}]]>"

#. Tag: para
#: example.xml:42
#, no-c-format
msgid ""
"We need an adaptor bean to expose our typesafe <literal>EntityManager</"
"literal>:"
msgstr ""

#. Tag: programlisting
#: example.xml:46
#, no-c-format
msgid ""
"<![CDATA[class UserDatabaseProducer {\n"
"   @Produces @UserDatabase @PersistenceContext \n"
"   static EntityManager userDatabase;\n"
"}]]>"
msgstr ""

#. Tag: para
#: example.xml:48
#, fuzzy, no-c-format
msgid ""
"Now <literal>DocumentEditor</literal>, or any other bean, can easily inject "
"the current user:"
msgstr ""
"Jetzt kann jedes andere Web Bean den aktuellen Benutzer auf leichte Weise "
"einspeisen:"

#. Tag: programlisting
#: example.xml:50
#, fuzzy, no-c-format
msgid ""
"<![CDATA[public class DocumentEditor {\n"
"   @Inject Document document;\n"
"   @Inject @LoggedIn User currentUser;\n"
"   @Inject @DocumentDatabase EntityManager docDatabase;\n"
"    \n"
"   public void save() {\n"
"      document.setCreatedBy(currentUser);\n"
"      docDatabase.persist(document);\n"
"   }\n"
"}]]>"
msgstr ""
"<![CDATA[public class DocumentEditor {\n"
"\n"
"    @Current Document document;\n"
"    @LoggedIn User currentUser;\n"
"    @PersistenceContext EntityManager docDatabase;\n"
"    \n"
"    public void save() {\n"
"        document.setCreatedBy(currentUser);\n"
"        docDatabase.persist(document);\n"
"    }\n"
"    \n"
"}]]>"

#. Tag: para
#: example.xml:52
#, no-c-format
msgid "Or we can reference the current user in a JSF view:"
msgstr ""

#. Tag: programlisting
#: example.xml:54
#, no-c-format
msgid ""
"<![CDATA[<h:panelGroup rendered=\"#{login.loggedIn}\">\n"
"   signed in as #{currentUser.username}\n"
"</h:panelGroup>]]>"
msgstr ""

#. Tag: para
#: example.xml:56
#, fuzzy, no-c-format
msgid ""
"Hopefully, this example gave you a taste of the CDI programming model. In "
"the next chapter, we'll explore dependency injection in greater depth."
msgstr ""
"Wir hoffen, dass Ihnen dieses Beispiel einen Vorgeschmack auf das Web Bean "
"Programmiermodell gegeben hat. Im nächsten Kapitel sehen wir uns die Web "
"Beans Dependency-Einspeisung näher an."

#~ msgid "Of course, <literal>@LoggedIn</literal> is a binding annotation:"
#~ msgstr ""
#~ "Natürlich handelt es sich bei <literal>@LoggedIn</literal> um eine "
#~ "\"Binding\"-Annotation:"
