# Language fr-FR translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-12-19 20:26+0000\n"
"PO-Revision-Date: 2009-02-07 14:53+0100\n"
"Last-Translator: Vincent Latombe <vincent.latombe@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: xml.xml:4
#, no-c-format
msgid "Defining Web Beans using XML"
msgstr "Définir des Web Beans en utilisant XML"

#. Tag: para
#: xml.xml:6
#, no-c-format
msgid "So far, we've seen plenty of examples of Web Beans declared using annotations. However, there are a couple of occasions when we can't use annotations to define the Web Bean:"
msgstr "Jusqu'ici, nous avons vu plein d'exemples de Web Beans déclarés à l'aide d'annotations. Cependant, il y a quelques cas où nous ne pouvons pas utiliser les annotations pour définir un Web Bean:"

#. Tag: para
#: xml.xml:12
#, no-c-format
msgid "when the implementation class comes from some preexisting library, or"
msgstr "quand la class d'implémentation provient d'une librairie existante, ou"

#. Tag: para
#: xml.xml:15
#, no-c-format
msgid "when there should be multiple Web Beans with the same implementation class."
msgstr "quand il y aurait plusieurs Web Beans ayant la même classe d'implémentation."

#. Tag: para
#: xml.xml:20
#, no-c-format
msgid "In either of these cases, Web Beans gives us two options:"
msgstr "Dans tous ces cas, les Web Beans nous offrent deux possibilités:"

#. Tag: para
#: xml.xml:23
#, no-c-format
msgid "write a producer method, or"
msgstr "écrire une méthode productrice, ou"

#. Tag: para
#: xml.xml:24
#, no-c-format
msgid "declare the Web Bean using XML."
msgstr "déclarer le Web Bean en utilisant XML."

#. Tag: para
#: xml.xml:27
#, no-c-format
msgid "Many frameworks use XML to provide metadata relating to Java classes. However, Web Beans uses a very different approach to specifying the names of Java classes, fields or methods to most other frameworks. Instead of writing class and member names as the string values of XML elements and attributes, Web Beans lets you use the class or member name as the name of the XML element."
msgstr "De nombreux frameworks utilisent XML pour fournir des métadonnées relatives aux classes Java. Cependant, les Web Beans utilisent une approche très différente pour spécifier les noms des classes, champs ou méthodes Java aux autres frameworks. Au lieu d'écrire les noms des classes et des membres dans des éléments et attributs XML, les Web Beans vous permettent d'utiliser le nom de class ou de membre comme nom de l'élément XML."

#. Tag: para
#: xml.xml:33
#, no-c-format
msgid "The advantage of this approach is that you can write an XML schema that prevents spelling errors in your XML document. It's even possible for a tool to generate the XML schema automatically from the compiled Java code. Or, an integrated development environment could perform the same validation without the need for the explicit intermediate generation step."
msgstr "L'avantage de cette méthode est que vous pouvez écrire une schéma XML qui empêche les erreurs de saisies dans votre document XML. Il est même possible de générer le schéma XML automatiquement à partir du code Java compilé, grâce à un outil. Ou, un environnement de développement intégré pourrait effectuer la même validation sans avoir besoin d'une étape de génération explicite."

#. Tag: title
#: xml.xml:40
#, no-c-format
msgid "Declaring Web Bean classes"
msgstr "Déclarer des classes Web Beans"

#. Tag: para
#: xml.xml:42
#, no-c-format
msgid "For each Java package, Web Beans defines a corresponding XML namespace. The namespace is formed by prepending <literal>urn:java:</literal> to the Java package name. For the package <literal>com.mydomain.myapp</literal>, the XML namespace is <literal>urn:java:com.mydomain.myapp</literal>."
msgstr "Pour chaque paquetage Java, les Web Beans définissent un espace de nom XML correspondant. L'espace de nom est fabriqué en préfixant le nom du paquetage Java par <literal>urn:java:</literal>. Pour le paquetage <literal>com.mydomain.myapp</literal>, l'espace de nom XML est <literal>urn:java:com.mydomain.myapp</literal>."

#. Tag: para
#: xml.xml:47
#, no-c-format
msgid "Java types belonging to a package are referred to using an XML element in the namespace corresponding to the package. The name of the element is the name of the Java type. Fields and methods of the type are specified by child elements in the same namespace. If the type is an annotation, members are specified by attributes of the element."
msgstr "Les types Java appartenant à un paquetage sont référencés dans un élément XML du namespace correspondant au paquetage. Le nom de l'élément est le nom du type Java. Les champs et méthodes du type sont spécifiés par des éléments enfants dans le même espace de noms. Si le type est une annotation, les membres sont spécifiés par des attributs de l'élément."

#. Tag: para
#: xml.xml:53
#, no-c-format
msgid "For example, the element <literal>&lt;util:Date/&gt;</literal> in the following XML fragment refers to the class <literal>java.util.Date</literal>:"
msgstr "Par exemple, l'élément <literal>&lt;util:Date/&gt;</literal> dans le fragment XML suivant référencela class <literal>java.util.Date</literal>:"

#. Tag: programlisting
#: xml.xml:56
#, no-c-format
msgid ""
"<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
"          xmlns:util=\"urn:java:java.util\">\n"
"\n"
"    <util:Date/>\n"
"\n"
"</WebBeans>]]>"
msgstr ""
"<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
"          xmlns:util=\"urn:java:java.util\">\n"
"\n"
"    <util:Date/>\n"
"\n"
"</WebBeans>]]>"

#. Tag: para
#: xml.xml:58
#, no-c-format
msgid "And this is all the code we need to declare that <literal>Date</literal> is a simple Web Bean! An instance of <literal>Date</literal> may now be injected by any other Web Bean:"
msgstr "Et ceci est tout le code dont nous avons besoin pour déclarer que <literal>Date</literal> est un simple Web  Bean! Un instance de <literal>Date</literal> peut maintenant être injectée par n'importe quel autre Web Bean:"

#. Tag: programlisting
#: xml.xml:62
#, no-c-format
msgid "<![CDATA[@Current Date date]]>"
msgstr "<![CDATA[@Current Date date]]>"

#. Tag: title
#: xml.xml:67
#, no-c-format
msgid "Declaring Web Bean metadata"
msgstr "Déclarer les métadonnées d'un Web Bean"

#. Tag: para
#: xml.xml:69
#, no-c-format
msgid "We can declare the scope, deployment type and interceptor binding types using direct child elements of the Web Bean declaration:"
msgstr "Nous pouvons déclarer la portée, le type de déploiement et les types de liaison d'intercepteurs en utilisant les éléments enfants directs de la déclaration du Web Bean:"

#. Tag: programlisting
#: xml.xml:72
#, no-c-format
msgid ""
"<![CDATA[<myapp:ShoppingCart>\n"
"    <SessionScoped/>\n"
"    <myfwk:Transactional requiresNew=\"true\"/>\n"
"    <myfwk:Secure/>\n"
"</myapp:ShoppingCart>]]>"
msgstr ""
"<![CDATA[<myapp:ShoppingCart>\n"
"    <SessionScoped/>\n"
"    <myfwk:Transactional requiresNew=\"true\"/>\n"
"    <myfwk:Secure/>\n"
"</myapp:ShoppingCart>]]>"

#. Tag: para
#: xml.xml:74
#, no-c-format
msgid "We use exactly the same approach to specify names and binding type:"
msgstr "Nous utilisons exactement la même approche pour spécifier les noms et les types de liaison:"

#. Tag: programlisting
#: xml.xml:76
#, no-c-format
msgid ""
"<![CDATA[<util:Date>\n"
"    <Named>currentTime</Named>\n"
"</util:Date>\n"
"\n"
"<util:Date>\n"
"    <SessionScoped/>\n"
"    <myapp:Login/>\n"
"    <Named>loginTime</Named>\n"
"</util:Date>\n"
"\n"
"<util:Date>\n"
"    <ApplicationScoped/>\n"
"    <myapp:SystemStart/>\n"
"    <Named>systemStartTime</Named>\n"
"</util:Date>]]>"
msgstr ""
"<![CDATA[<util:Date>\n"
"    <Named>currentTime</Named>\n"
"</util:Date>\n"
"\n"
"<util:Date>\n"
"    <SessionScoped/>\n"
"    <myapp:Login/>\n"
"    <Named>loginTime</Named>\n"
"</util:Date>\n"
"\n"
"<util:Date>\n"
"    <ApplicationScoped/>\n"
"    <myapp:SystemStart/>\n"
"    <Named>systemStartTime</Named>\n"
"</util:Date>]]>"

#. Tag: para
#: xml.xml:78
#, no-c-format
msgid "Where <literal>@Login</literal> and <literal>@SystemStart</literal> are binding annotations types."
msgstr "Où <literal>@Login</literal> et <literal>@SystemStart</literal> sont des types d'annotations de liaison."

#. Tag: programlisting
#: xml.xml:81
#, no-c-format
msgid ""
"<![CDATA[@Current Date currentTime;\n"
"@Login Date loginTime;\n"
"@SystemStart Date systemStartTime;]]>"
msgstr ""
"<![CDATA[@Current Date currentTime;\n"
"@Login Date loginTime;\n"
"@SystemStart Date systemStartTime;]]>"

#. Tag: para
#: xml.xml:83
#, no-c-format
msgid "As usual, a Web Bean may support multiple binding types:"
msgstr "Comme d'habitude, un Web Bean supporte plusieurs types de liaison:"

#. Tag: programlisting
#: xml.xml:85
#, no-c-format
msgid ""
"<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
"    <myapp:PayByCheque/>\n"
"    <myapp:Asynchronous/>\n"
"</myapp:AsynchronousChequePaymentProcessor>]]>"
msgstr ""
"<![CDATA[<myapp:AsynchronousChequePaymentProcessor>\n"
"    <myapp:PayByCheque/>\n"
"    <myapp:Asynchronous/>\n"
"</myapp:AsynchronousChequePaymentProcessor>]]>"

#. Tag: para
#: xml.xml:87
#, no-c-format
msgid "Interceptors and decorators are just simple Web Beans, so they may be declared just like any other simple Web Bean:"
msgstr "Les intercepteurs et les décorateurs sont juste de Web Beans simples, donc ils peuvent être déclarés comme n'importe quel Web Bean simple:"

#. Tag: programlisting
#: xml.xml:90
#, no-c-format
msgid ""
"<![CDATA[<myfwk:TransactionInterceptor>\n"
"    <Interceptor/>\n"
"    <myfwk:Transactional/>\n"
"</myfwk:TransactionInterceptor>]]>"
msgstr ""
"<![CDATA[<myfwk:TransactionInterceptor>\n"
"    <Interceptor/>\n"
"    <myfwk:Transactional/>\n"
"</myfwk:TransactionInterceptor>]]>"

#. Tag: title
#: xml.xml:95
#, no-c-format
msgid "Declaring Web Bean members"
msgstr "Déclarer des membres de Web Beans"

#. Tag: para
#: xml.xml:97
#, no-c-format
msgid "TODO!"
msgstr "TODO!"

#. Tag: title
#: xml.xml:104
#, no-c-format
msgid "Declaring inline Web Beans"
msgstr "Déclarer des Web Beans à la volée"

#. Tag: para
#: xml.xml:106
#, no-c-format
msgid "Web Beans lets us define a Web Bean at an injection point. For example:"
msgstr "Les Web Beans nous permettent de définir un Web Bean à un point d'injection. Par exemple:"

#. Tag: programlisting
#: xml.xml:108
#, no-c-format
msgid ""
"<![CDATA[<myapp:System>\n"
"    <ApplicationScoped/>\n"
"    <myapp:admin>\n"
"        <myapp:Name>\n"
"            <myapp:firstname>Gavin</myapp:firstname>\n"
"            <myapp:lastname>King</myapp:lastname>\n"
"            <myapp:email>gavin@hibernate.org</myapp:email>\n"
"        </myapp:Name>\n"
"    </myapp:admin>\n"
"</myapp:System>]]>"
msgstr ""
"<![CDATA[<myapp:System>\n"
"    <ApplicationScoped/>\n"
"    <myapp:admin>\n"
"        <myapp:Name>\n"
"            <myapp:firstname>Gavin</myapp:firstname>\n"
"            <myapp:lastname>King</myapp:lastname>\n"
"            <myapp:email>gavin@hibernate.org</myapp:email>\n"
"        </myapp:Name>\n"
"    </myapp:admin>\n"
"</myapp:System>]]>"

#. Tag: para
#: xml.xml:110
#, no-c-format
msgid "The <literal>&lt;Name&gt;</literal> element declares a simple Web Bean of scope <literal>@Dependent</literal> and class <literal>Name</literal>, with a set of initial field values. This Web Bean has a special, container-generated binding and is therefore injectable only to the specific injection point at which it is declared."
msgstr "L'élément <literal>&lt;Name&gt;</literal> déclare un Web Bean simple de portée <literal>@Dependant</literal> et la classe <literal>Name</literal>, avec un ensembl de valeurs initials sur ses champs. Ce Web Bean a une liaison spéciale générée par le conteneur, et est par conséquent injectable seulement au point d'injection spécifique où il a été déclaré."

#. Tag: para
#: xml.xml:116
#, no-c-format
msgid "This simple but powerful feature allows the Web Beans XML format to be used to specify whole graphs of Java objects. It's not quite a full databinding solution, but it's close!"
msgstr "Cette fonctionnalité simple, mais puissante permet au format XML des Web Beans d'être utilisé pour spécifier des graphes entiers d'objets Java. Ce n'est pas une solution intégrale pour la liaison de données, mais cela s'en approche!"

#. Tag: title
#: xml.xml:123
#, no-c-format
msgid "Using a schema"
msgstr "Utiliser un schéma"

#. Tag: para
#: xml.xml:125
#, no-c-format
msgid "If we want our XML document format to be authored by people who aren't Java developers, or who don't have access to our code, we need to provide a schema. There's nothing specific to Web Beans about writing or using the schema."
msgstr "Si nous voulons que le format de notre document XML soit écrit par des gens qui ne sont pas des développeurs Java, ou qui n'ont pas accès à notre code, nous devons fournir un schéma. Ecrire ou utiliser le schéma n'a rien de spécifique aux Web Beans."

#. Tag: programlisting
#: xml.xml:130
#, no-c-format
msgid ""
"<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
"          xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
"          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"          xsi:schemaLocation=\"urn:java:javax.webbeans http://java.sun.com/jee/web-beans-1.0.xsd\n"
"                              urn:java:com.mydomain.myapp http://mydomain.com/xsd/myapp-1.2.xsd\">\n"
"\n"
"    <myapp:System>\n"
"        ...\n"
"    </myapp:System>\n"
"\n"
"</WebBeans>]]>"
msgstr ""
"<![CDATA[<WebBeans xmlns=\"urn:java:javax.webbeans\"\n"
"          xmlns:myapp=\"urn:java:com.mydomain.myapp\"\n"
"          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"          xsi:schemaLocation=\"urn:java:javax.webbeans http://java.sun.com/jee/web-beans-1.0.xsd\n"
"                              urn:java:com.mydomain.myapp http://mydomain.com/xsd/myapp-1.2.xsd\">\n"
"\n"
"    <myapp:System>\n"
"        ...\n"
"    </myapp:System>\n"
"\n"
"</WebBeans>]]>"

#. Tag: para
#: xml.xml:132
#, no-c-format
msgid "Writing an XML schema is quite tedious. Therefore, the Web Beans RI project will provide a tool which automatically generates the XML schema from compiled Java code."
msgstr "Ecrire un schéma XML est assez ennuyeux. C'est pour cela que le projet Web Beans RI fournira un outil qui génèrera automatiquement le schéma XML à partir du code Java compilé."

