# translation of ri-spi.po to Traditional Chinese
# Language zh-TW translations for Introduction_to_Web_Beans package.
#
# Automatically generated, 2009.
# Terry Chuang <tchuang@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: ri-spi\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-03-28 17:09+0000\n"
"PO-Revision-Date: 2009-01-20 11:43+1000\n"
"Last-Translator: Terry Chuang <tchuang@redhat.com>\n"
"Language-Team: Traditional Chinese <zh@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: ri-spi.xml:4
#, no-c-format
msgid "Integrating the Web Beans RI into other environments"
msgstr "將 Web Bean RI 整合入其它環境中"

#. Tag: para
#: ri-spi.xml:6
#, no-c-format
msgid ""
"Currently the Web Beans RI only runs in JBoss AS 5; integrating the RI into "
"other EE environments (for example another application server like "
"Glassfish), into a servlet container (like Tomcat), or with an Embedded "
"EJB3.1 implementation is fairly easy. In this Appendix we will briefly "
"discuss the steps needed."
msgstr ""
"目前，Web Bean RI 只能在 JBoss AS 5 中執行；要將 RI 整合入其它 EE 環境中（比"
"方說另一個像是 Glassfish 的應用程式伺服器）、整合入一個 servlet 容器（例如 "
"Tomcat）中，或是和一個崁入式的 EJB3.1 實做整合都是相當容易的。在此附錄中，我"
"們將簡略地討論所需的步驟。"

#. Tag: para
#: ri-spi.xml:15
#, no-c-format
msgid ""
"It should be possible to run Web Beans in an SE environment, but you'll to "
"do more work, adding your own contexts and lifecycle. The Web Beans RI "
"currently doesn't expose lifecycle extension points, so you would have to "
"code directly against Web Beans RI classes."
msgstr ""
"您可在一個 SE 環境下執行 Web Bean，不過您必須進行較多步驟，包括新增您自己的 "
"context 和生命週期。Web Bean RI 目前並不會顯示生命週期的延伸點，因此您必須針"
"對於 Web Bean RI 的 class 來直接地進行程式撰寫。"

#. Tag: title
#: ri-spi.xml:24
#, no-c-format
msgid "The Web Beans RI SPI"
msgstr "Web Beans RI SPI"

#. Tag: para
#: ri-spi.xml:26
#, no-c-format
msgid ""
"The Web Beans SPI is located in <literal>webbeans-ri-spi</literal> module, "
"and packaged as <literal>webbeans-ri-spi.jar</literal>. Some SPIs are "
"optional, if you need to override the default behavior, others are required."
msgstr ""
"Web Bean SPI 位於 <literal>webbeans-ri-spi</literal> 模組中，並且被封裝為 "
"<literal>webbeans-ri-spi.jar</literal>。有些 SPI 為可選的，若您需要置換預設的"
"特性，您則需要其它 SPI。"

#. Tag: para
#: ri-spi.xml:33
#, no-c-format
msgid ""
"All interfaces in the SPI support the decorator pattern and provide a "
"<literal>Forwarding</literal> class."
msgstr ""
"SPI 中所有的介面都支援裝飾器模式並提供了一個 <literal>Forwarding</literal> "
"class。"

#. Tag: title
#: ri-spi.xml:39
#, no-c-format
msgid "Web Bean Discovery"
msgstr "Web Bean 搜尋"

#. Tag: programlisting
#: ri-spi.xml:41
#, no-c-format
msgid ""
"<![CDATA[public interface WebBeanDiscovery {\n"
"   /**\n"
"    * Gets list of all classes in classpath archives with web-beans.xml "
"files\n"
"    * \n"
"    * @return An iterable over the classes \n"
"    */\n"
"   public Iterable<Class<?>> discoverWebBeanClasses();\n"
"   \n"
"   /**\n"
"    * Gets a list of all web-beans.xml files in the app classpath\n"
"    * \n"
"    * @return An iterable over the web-beans.xml files \n"
"    */\n"
"   public Iterable<URL> discoverWebBeansXml();\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface WebBeanDiscovery {\n"
"   /**\n"
"    * Gets list of all classes in classpath archives with web-beans.xml "
"files\n"
"    * \n"
"    * @return An iterable over the classes \n"
"    */\n"
"   public Iterable<Class<?>> discoverWebBeanClasses();\n"
"   \n"
"   /**\n"
"    * Gets a list of all web-beans.xml files in the app classpath\n"
"    * \n"
"    * @return An iterable over the web-beans.xml files \n"
"    */\n"
"   public Iterable<URL> discoverWebBeansXml();\n"
"   \n"
"}]]>"

#. Tag: para
#: ri-spi.xml:43
#, no-c-format
msgid ""
"The discovery of Web Bean classes and <literal>web-bean.xml</literal> files "
"is self-explanatory (the algorithm is described in Section 11.1 of the JSR-"
"299 specification, and isn't repeated here)."
msgstr ""
"Web Bean 類別和 <literal>web-bean.xml</literal> 檔案的搜尋相當明顯（演算法描"
"述於 JSR-299 規格的章節 11.1 中，在此不重複）。"

#. Tag: title
#: ri-spi.xml:52
#, no-c-format
msgid "EJB services"
msgstr ""

#. Tag: para
#: ri-spi.xml:54
#, no-c-format
msgid ""
"The Web Beans RI also delegates EJB3 bean discovery to the container so that "
"it doesn't have to scan for EJB3 annotations or parse <literal>ejb-jar.xml</"
"literal>. For each EJB in the application an EJBDescriptor should be "
"discovered:"
msgstr ""
"Web Bean RI 也會委派 EJB3 bean discovery 至 container，因此它便無須掃描 EJB3 "
"記號或剖析 <literal>ejb-jar.xml</literal>。針對於應用程式中的各個 EJB 都應該"
"能發現一個 EJBDescriptor："

#. Tag: programlisting
#: ri-spi.xml:61
#, fuzzy, no-c-format
msgid ""
"<![CDATA[public interface EjbServices\n"
"{\n"
"   \n"
"   /**\n"
"    * Gets a descriptor for each EJB in the application\n"
"    * \n"
"    * @return The bean class to descriptor map \n"
"    */\n"
"   public Iterable<EjbDescriptor<?>> discoverEjbs();]]>"
msgstr ""
"<![CDATA[public interface EjbDiscovery\n"
"{\n"
"   public static final String PROPERTY_NAME = EjbDiscovery.class.getName();\n"
"   \n"
"   /**\n"
"    * Gets a descriptor for each EJB in the application\n"
"    * \n"
"    * @return The bean class to descriptor map \n"
"    */\n"
"   public Iterable<EjbDescriptor<?>> discoverEjbs();\n"
"   \n"
"}]]>"

#. Tag: programlisting
#: ri-spi.xml:63
#, no-c-format
msgid ""
"<![CDATA[public interface EjbDescriptor<T> {\n"
"   \n"
"   /**\n"
"    * Gets the EJB type\n"
"    * \n"
"    * @return The EJB Bean class\n"
"    */\n"
"   public Class<T> getType();\n"
"\n"
"   /**\n"
"    * Gets the local business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the local business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getLocalBusinessInterfaces"
"();\n"
"   \n"
"   /**\n"
"    * Gets the remote business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the remote business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> "
"getRemoteBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Get the remove methods of the EJB\n"
"    * \n"
"    * @return An iterator over the remove methods\n"
"    */\n"
"   public Iterable<Method> getRemoveMethods();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is stateless\n"
"    * \n"
"    * @return True if stateless, false otherwise\n"
"    */\n"
"   public boolean isStateless();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is a EJB 3.1 Singleton\n"
"    * \n"
"    * @return True if the bean is a singleton, false otherwise\n"
"    */\n"
"   public boolean isSingleton();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is stateful\n"
"    * \n"
"    * @return True if the bean is stateful, false otherwise\n"
"    */\n"
"   public boolean isStateful();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is and MDB\n"
"    * \n"
"    * @return True if the bean is an MDB, false otherwise\n"
"    */\n"
"   public boolean isMessageDriven();\n"
"\n"
"   /**\n"
"    * Gets the EJB name\n"
"    * \n"
"    * @return The name\n"
"    */\n"
"   public String getEjbName();\n"
"   \n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface EjbDescriptor<T> {\n"
"   \n"
"   /**\n"
"    * Gets the EJB type\n"
"    * \n"
"    * @return The EJB Bean class\n"
"    */\n"
"   public Class<T> getType();\n"
"\n"
"   /**\n"
"    * Gets the local business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the local business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> getLocalBusinessInterfaces"
"();\n"
"   \n"
"   /**\n"
"    * Gets the remote business interfaces of the EJB\n"
"    * \n"
"    * @return An iterator over the remote business interfaces\n"
"    */\n"
"   public Iterable<BusinessInterfaceDescriptor<?>> "
"getRemoteBusinessInterfaces();\n"
"   \n"
"   /**\n"
"    * Get the remove methods of the EJB\n"
"    * \n"
"    * @return An iterator over the remove methods\n"
"    */\n"
"   public Iterable<Method> getRemoveMethods();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is stateless\n"
"    * \n"
"    * @return True if stateless, false otherwise\n"
"    */\n"
"   public boolean isStateless();\n"
"\n"
"   /**\n"
"    * Indicates if the bean is a EJB 3.1 Singleton\n"
"    * \n"
"    * @return True if the bean is a singleton, false otherwise\n"
"    */\n"
"   public boolean isSingleton();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is stateful\n"
"    * \n"
"    * @return True if the bean is stateful, false otherwise\n"
"    */\n"
"   public boolean isStateful();\n"
"\n"
"   /**\n"
"    * Indicates if the EJB is and MDB\n"
"    * \n"
"    * @return True if the bean is an MDB, false otherwise\n"
"    */\n"
"   public boolean isMessageDriven();\n"
"\n"
"   /**\n"
"    * Gets the EJB name\n"
"    * \n"
"    * @return The name\n"
"    */\n"
"   public String getEjbName();\n"
"   \n"
"   \n"
"}]]>"

#. Tag: para
#: ri-spi.xml:65
#, no-c-format
msgid ""
"The <literal>EjbDescriptor</literal> is fairly self-explanatory, and should "
"return the relevant metadata as defined in the EJB specification. In "
"addition to these two interfaces, there is "
"<literal>BusinessInterfaceDescriptor</literal> which represents a local "
"business interface (encapsulating the interface class and jndi name used to "
"look up an instance of the EJB)."
msgstr ""
"<literal>EjbDescriptor</literal> 本身已不解自明並且不需加以說明，它應會依照 "
"EJB 規格中所定義地來回傳相關的 metadata。除了這兩個介面，還有個代表本地商業介"
"面的 <literal>BusinessInterfaceDescriptor</literal>（包含了使用來查詢某個 "
"EJB instance 的 interface class 以及 jndi 名稱）。"

#. Tag: para
#: ri-spi.xml:74
#, no-c-format
msgid ""
"The resolution of <literal>@EJB</literal> and <literal>@Resource</literal> "
"is delegated to the container. You must provide an implementation of "
"<literal>org.jboss.webbeans.ejb.spi.EjbServices</literal> which provides "
"these operations. Web Beans passes in the <literal>javax.inject.manager."
"InjectionPoint</literal> the resolution is for, as well as the "
"<literal>NamingContext</literal> in use for each resolution request."
msgstr ""

#. Tag: title
#: ri-spi.xml:98
#, no-c-format
msgid "JPA services"
msgstr ""

#. Tag: para
#: ri-spi.xml:100
#, no-c-format
msgid ""
"Just as resolution of <literal>@EJB</literal> is delegated to the container, "
"so is resolution of <literal>@PersistenceContext</literal>."
msgstr ""

#. Tag: para
#: ri-spi.xml:106
#, no-c-format
msgid ""
"OPEN ISSUE: Web Beans also requires the container to provide a list of "
"entities in the deployment, so that they aren't discovered as simple beans."
msgstr ""

#. Tag: title
#: ri-spi.xml:114
#, no-c-format
msgid "Transaction Services"
msgstr ""

#. Tag: para
#: ri-spi.xml:116
#, no-c-format
msgid ""
"The Web Beans RI must delegate JTA activities to the container. The SPI "
"provides a couple hooks to easily achieve this with the "
"<literal>TransactionServices</literal> interface."
msgstr ""

#. Tag: programlisting
#: ri-spi.xml:122
#, no-c-format
msgid ""
"<![CDATA[public interface TransactionServices\n"
"{\n"
"   /**\n"
"    * Possible status conditions for a transaction. This can be used by SPI\n"
"    * providers to keep track for which status an observer is used.\n"
"    */\n"
"   public static enum Status\n"
"   {\n"
"      ALL, SUCCESS, FAILURE\n"
"   }\n"
"\n"
"   /**\n"
"    * Registers a synchronization object with the currently executing\n"
"    * transaction.\n"
"    * \n"
"    * @see javax.transaction.Synchronization\n"
"    * @param synchronizedObserver\n"
"    */\n"
"   public void registerSynchronization(Synchronization "
"synchronizedObserver);\n"
"\n"
"   /**\n"
"    * Queries the status of the current execution to see if a transaction "
"is\n"
"    * currently active.\n"
"    * \n"
"    * @return true if a transaction is active\n"
"    */\n"
"   public boolean isTransactionActive();\n"
"}]]>"
msgstr ""

#. Tag: para
#: ri-spi.xml:124
#, no-c-format
msgid ""
"The enumeration <literal>Status</literal> is a convenience for implementors "
"to be able to keep track of whether a synchronization is supposed to notify "
"an observer only when the transaction is successful, or after a failure, or "
"regardless of the status of the transaction."
msgstr ""

#. Tag: para
#: ri-spi.xml:131
#, no-c-format
msgid ""
"Any <literal>javax.transaction.Synchronization</literal> implementation may "
"be passed to the <literal>registerSynchronization()</literal> method and the "
"SPI implementation should immediately register the synchronization with the "
"JTA transaction manager used for the EJBs."
msgstr ""

#. Tag: para
#: ri-spi.xml:138
#, no-c-format
msgid ""
"To make it easier to determine whether or not a transaction is currently "
"active for the requesting thread, the <literal>isTransactionActive()</"
"literal> method can be used. The SPI implementation should query the same "
"JTA transaction manager used for the EJBs."
msgstr ""

#. Tag: title
#: ri-spi.xml:147
#, no-c-format
msgid "The application context"
msgstr ""

#. Tag: para
#: ri-spi.xml:149
#, no-c-format
msgid ""
"Web Beans expects the Application Server or other container to provide the "
"storage for each application's context. The <literal>org.jboss.webbeans."
"context.api.BeanStore</literal> should be implemented to provide an "
"application scoped storage. You may find <literal>org.jboss.webbeans.context."
"api.helpers.ConcurrentHashMapBeanStore</literal> useful."
msgstr ""

#. Tag: title
#: ri-spi.xml:162
#, no-c-format
msgid "Bootstrap and shutdown"
msgstr ""

#. Tag: para
#: ri-spi.xml:163
#, no-c-format
msgid ""
"The <literal>org.jboss.webbeans.bootstrap.api.Bootstrap</literal> interface "
"defines the bootstrap for Web Beans. To boot Web Beans, you must obtain an "
"instance of <literal>org.jboss.webbeans.bootstrap.WebBeansBootstrap</"
"literal> (which implements <literal>Boostrap</literal>), tell it about the "
"SPIs in use, and then request the container start."
msgstr ""

#. Tag: para
#: ri-spi.xml:172
#, no-c-format
msgid ""
"The bootstrap is split into phases, bootstrap initialization and boot and "
"shutdown. Initialization will create a manager, and add the standard "
"(specification defined) contexts. Bootstrap will discover EJBs, classes and "
"XML; add beans defined using annotations; add beans defined using XML; and "
"validate all beans."
msgstr ""

#. Tag: para
#: ri-spi.xml:180
#, no-c-format
msgid ""
"The bootstrap supports multiple environments. Different environments require "
"different services to be present (for example servlet doesn't require "
"transaction, EJB or JPA services). By default an EE environment is assumed, "
"but you can adjust the environment by calling <literal>bootstrap."
"setEnvironment()</literal>."
msgstr ""

#. Tag: para
#: ri-spi.xml:188
#, no-c-format
msgid ""
"To initialize the bootstrap you call <literal>Bootstrap.initialize()</"
"literal>. Before calling <literal>initialize()</literal>, you must register "
"any services required by your environment. You can do this by calling "
"<literal>bootstrap.getServices().add(JpaServices.class, new MyJpaServices())"
"</literal>. You must also provide the application context bean store."
msgstr ""

#. Tag: para
#: ri-spi.xml:197
#, no-c-format
msgid ""
"Having called <literal>initialize()</literal>, the <literal>Manager</"
"literal> can be obtained by calling <literal>Bootstrap.getManager()</"
"literal>."
msgstr ""

#. Tag: para
#: ri-spi.xml:203
#, no-c-format
msgid "To boot the container you call <literal>Bootstrap.boot()</literal>."
msgstr ""

#. Tag: para
#: ri-spi.xml:207
#, no-c-format
msgid ""
"To shutdown the container you call <literal>Bootstrap.shutdown()</literal>. "
"This allows the container to perform any cleanup operations needed."
msgstr ""

#. Tag: title
#: ri-spi.xml:216
#, no-c-format
msgid "JNDI"
msgstr "JNDI"

#. Tag: para
#: ri-spi.xml:218
#, fuzzy, no-c-format
msgid ""
"The Web Beans RI implements JNDI binding and lookup according to standards, "
"however you may want to alter the binding and lookup (for example in an "
"environment where JNDI isn't available). To do this, implement <literal>org."
"jboss.webbeans.resources.spi.NamingContext</literal>:"
msgstr ""
"Web Beans RI 會實做 JNDI 綁定並依照標準來進行搜尋，不過您可能在某些情況下會希"
"望修改綁定和搜尋（比方說在一個 JNDI 無法使用的環境下）。若要如此，請實做 "
"<literal>org.jboss.webbeans.spi.resources.NamingContext</literal>："

#. Tag: programlisting
#: ri-spi.xml:226
#, no-c-format
msgid ""
"<![CDATA[public interface NamingContext extends Serializable {\n"
"   \n"
"   /**\n"
"    * Typed JNDI lookup\n"
"    * \n"
"    * @param <T> The type\n"
"    * @param name The JNDI name\n"
"    * @param expectedType The expected type\n"
"    * @return The object\n"
"    */\n"
"   public <T> T lookup(String name, Class<? extends T> expectedType);\n"
"\n"
"   /**\n"
"    * Binds an item to JNDI\n"
"    * \n"
"    * @param name The key to bind under\n"
"    * @param value The item to bind\n"
"    */\n"
"   public void bind(String name, Object value);\n"
"   \n"
"}]]>"
msgstr ""
"<![CDATA[public interface NamingContext extends Serializable {\n"
"   \n"
"   /**\n"
"    * Typed JNDI lookup\n"
"    * \n"
"    * @param <T> The type\n"
"    * @param name The JNDI name\n"
"    * @param expectedType The expected type\n"
"    * @return The object\n"
"    */\n"
"   public <T> T lookup(String name, Class<? extends T> expectedType);\n"
"\n"
"   /**\n"
"    * Binds an item to JNDI\n"
"    * \n"
"    * @param name The key to bind under\n"
"    * @param value The item to bind\n"
"    */\n"
"   public void bind(String name, Object value);\n"
"   \n"
"}]]>"

#. Tag: title
#: ri-spi.xml:231
#, no-c-format
msgid "Resource loading"
msgstr "資源載入"

#. Tag: para
#: ri-spi.xml:233
#, no-c-format
msgid ""
"The Web Beans RI needs to load classes and resources from the classpath at "
"various times. By default, they are loaded from the same classloader that "
"was used to load the RI, however this may not be correct for some "
"environments. If this is case, you can implement <literal>org.jboss.webbeans."
"spi.ResourceLoader</literal>:"
msgstr ""
"Web Beans RI 需要在各個時段由 classpath 載入類別和資源。就預設值，它們會被由"
"和使用來載入 RI 相同的 classloader 所載入，不過這對於某些環境來說可能不是不正"
"確的。若是如此，您可實做 <literal>org.jboss.webbeans.spi.ResourceLoader</"
"literal>："

#. Tag: programlisting
#: ri-spi.xml:241
#, no-c-format
msgid ""
"<![CDATA[\n"
"         public interface ResourceLoader {\n"
"    \n"
"   /**\n"
"    * Creates a class from a given FQCN\n"
"    * \n"
"    * @param name The name of the clsas\n"
"    * @return The class\n"
"    */\n"
"   public Class<?> classForName(String name);\n"
"   \n"
"   /**\n"
"    * Gets a resource as a URL by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An URL to the resource\n"
"    */\n"
"   public URL getResource(String name);\n"
"   \n"
"   /**\n"
"    * Gets resources as URLs by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An iterable reference to the URLS\n"
"    */\n"
"   public Iterable<URL> getResources(String name);\n"
"   \n"
"}\n"
"         ]]>"
msgstr ""
"<![CDATA[\n"
"         public interface ResourceLoader {\n"
"    \n"
"   /**\n"
"    * Creates a class from a given FQCN\n"
"    * \n"
"    * @param name The name of the clsas\n"
"    * @return The class\n"
"    */\n"
"   public Class<?> classForName(String name);\n"
"   \n"
"   /**\n"
"    * Gets a resource as a URL by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An URL to the resource\n"
"    */\n"
"   public URL getResource(String name);\n"
"   \n"
"   /**\n"
"    * Gets resources as URLs by name\n"
"    * \n"
"    * @param name The name of the resource\n"
"    * @return An iterable reference to the URLS\n"
"    */\n"
"   public Iterable<URL> getResources(String name);\n"
"   \n"
"}\n"
"         ]]>"

#. Tag: title
#: ri-spi.xml:246
#, fuzzy, no-c-format
msgid "Servlet injection"
msgstr "Servlet listener"

#. Tag: para
#: ri-spi.xml:248
#, no-c-format
msgid ""
"Java EE / Servlet does not provide any hooks which can be used to provide "
"injection into Servlets, so Web Beans provides an API to allow the container "
"to request JSR-299 injection for a Servlet."
msgstr ""

#. Tag: para
#: ri-spi.xml:254
#, no-c-format
msgid ""
"To be compliant with JSR-299, the container should request servlet injection "
"for each newly instantiated servlet after the constructor returns and before "
"the servlet is placed into service."
msgstr ""

#. Tag: para
#: ri-spi.xml:260
#, no-c-format
msgid ""
"To perform injection on a servlet call <literal>WebBeansManager.injectServlet"
"()</literal>. The manager can be obtained from <literal>Bootstrap.getManager"
"()</literal>."
msgstr ""

#. Tag: title
#: ri-spi.xml:271
#, no-c-format
msgid "The contract with the container"
msgstr "與 container 的合同"

#. Tag: para
#: ri-spi.xml:273
#, no-c-format
msgid ""
"There are a number of requirements that the Web Beans RI places on the "
"container for correct functioning that fall outside implementation of APIs"
msgstr "Web Bean RI 對於 container 有些需求以便達到 API 實做之外的正確的功能。"

#. Tag: term
#: ri-spi.xml:281
#, no-c-format
msgid "Classloader isolation"
msgstr "Classloader 隔離"

#. Tag: para
#: ri-spi.xml:285
#, no-c-format
msgid ""
"If you are integrating the Web Beans RI into an environment that supports "
"deployment of multiple applications, you must enable, automatically, or "
"through user configuation, classloader isolation for each Web Beans "
"application."
msgstr ""
"若您要將 Web Bean RI 整合入某個支援多重應用程式建置的環境中，您就必須為各個 "
"Web Bean 應用程式透過自動的方式，或是透過用戶配置來啟用 classloader 隔離。"

#. Tag: term
#: ri-spi.xml:294
#, fuzzy, no-c-format
msgid "Servlet listener and filters"
msgstr "Servlet listener"

#. Tag: para
#: ri-spi.xml:298
#, no-c-format
msgid ""
"If you are integrating the Web Beans into a Servlet environment you must "
"register <literal>org.jboss.webbeans.servlet.WebBeansListener</literal> as a "
"Servlet listener, either automatically, or through user configuration, for "
"each Web Beans application which uses Servlet."
msgstr ""
"若您要將 Web Bean 整合入一個 Servlet 環境中，您就必須為各個使用 Servlet 的 "
"Web Bean 應用程式透過自動的方式，或是用戶配置來將 <literal>org.jboss."
"webbeans.servlet.WebBeansListener</literal> 註冊為一個 Servlet listener，"

#. Tag: para
#: ri-spi.xml:307
#, fuzzy, no-c-format
msgid ""
"If you are integrating the Web Beans into a JSF environment you must "
"register <literal>org.jboss.webbeans.servlet.ConversationPropagationFilter</"
"literal> as a Servlet listener, either automatically, or through user "
"configuration, for each Web Beans application which uses JSF. This filter "
"can be registered for all Servlet deployment safely."
msgstr ""
"若您要將 Web Bean 整合入一個 Servlet 環境中，您就必須為各個使用 Servlet 的 "
"Web Bean 應用程式透過自動的方式，或是用戶配置來將 <literal>org.jboss."
"webbeans.servlet.WebBeansListener</literal> 註冊為一個 Servlet listener，"

#. Tag: term
#: ri-spi.xml:319
#, no-c-format
msgid "Session Bean Interceptor"
msgstr "Session Bean 攔截器"

#. Tag: para
#: ri-spi.xml:323
#, no-c-format
msgid ""
"If you are integrating the Web Beans into an EJB environment you must "
"register <literal>org.jboss.webbeans.ejb.SessionBeanInterceptor</literal> as "
"a EJB interceptor for all EJBs in the application, either automatically, or "
"through user configuration, for each Web Beans application which uses "
"enterprise beans."
msgstr ""
"若您要將 Web Bean 整合入一個 EJB 環境中，您就必須針對於各個使用 enterprise "
"bean 的 Web Bean 應用程式來為應用程式中的所有 EJB 透過自動的方式，或是透過用"
"戶配置來將 <literal>org.jboss.webbeans.ejb.SessionBeanInterceptor</literal> "
"註冊為一個 EJB 攔截器。"

#. Tag: para
#: ri-spi.xml:333
#, no-c-format
msgid ""
"You must register the <literal>SessionBeanInterceptor</literal> as the inner "
"most interceptor in the stack for all EJBs."
msgstr ""

#. Tag: term
#: ri-spi.xml:341
#, fuzzy, no-c-format
msgid "The <literal>webbeans-core.jar</literal>"
msgstr "<literal>webbeans-ri.jar</literal>"

#. Tag: para
#: ri-spi.xml:345
#, fuzzy, no-c-format
msgid ""
"If you are integrating the Web Beans into an environment that supports "
"deployment of applications, you must insert the <literal>webbeans-core.jar</"
"literal> into the applications isolated classloader. It cannot be loaded "
"from a shared classloader."
msgstr ""
"若您要將 Web Bean 整合入一個支援應用程式建置的環境中，您就必須將 "
"<literal>webbeans-ri.jar</literal> 插入應用程式隔離的 classholder 中。它無法"
"藉由共享的 classloader 來被載入。"

#~ msgid "EJB Discovery"
#~ msgstr "EJB Discovery"

#~ msgid ""
#~ "You can specify the implementation of an SPI either as a system property, "
#~ "or in a properties file <literal>META-INF/web-beans-ri.properties</"
#~ "literal>. All property names are the fully qualified class name of the "
#~ "implemented interface; all property values are the fully qualified class "
#~ "name of the implementation class."
#~ msgstr ""
#~ "您可將一個 SPI 的實做作為系統內容來指定，或是在內容檔案 <literal>META-INF/"
#~ "web-beans-ri.properties</literal> 中來指定。所有內容名稱皆為已實做介面的完"
#~ "整類別（class）名稱，並且所有內容值皆為已實做類別的完整類別名稱。"

#~ msgid ""
#~ "The Web Beans RI can be told to load your implementation of "
#~ "<literal>WebBeanDiscovery</literal> using the property <literal>org.jboss."
#~ "webbeans.bootstrap.spi.WebBeanDiscovery</literal> with the fully "
#~ "qualified class name as the value. For example:"
#~ msgstr ""
#~ "Web Beans RI 可被指定來透過使用 <literal>org.jboss.webbeans.bootstrap.spi."
#~ "WebBeanDiscovery</literal> 以及完整的 class 名稱為值來載入您 "
#~ "<literal>WebBeanDiscovery</literal> 的實做。例如："

#, fuzzy
#~ msgid ""
#~ "org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery= \\ \n"
#~ "   org.jboss.webbeans.integration.jbossas.WebBeanDiscoveryImpl"
#~ msgstr ""
#~ "org.jboss.webbeans.bootstrap.spi.WebBeanDiscovery=org.jboss.webbeans."
#~ "integration.jbossas.WebBeanDiscoveryImpl"

#~ msgid ""
#~ "If the Web Beans RI is being used in a servlet container, it expects a "
#~ "constructor of the form:"
#~ msgstr ""
#~ "若 Web Bean RI 被使用在一個 servlet container 中的話，它會預期一個含有下列"
#~ "格式的 constructor："

#~ msgid ""
#~ "<![CDATA[public WebBeanDiscoveryImpl(ServletContext servletContext) {}]]>"
#~ msgstr ""
#~ "<![CDATA[public WebBeanDiscoveryImpl(ServletContext servletContext) {}]]>"

#~ msgid ""
#~ "The servlet context can be used to allow your implementation of "
#~ "<literal>WebBeanDiscovery</literal> to interact with the container."
#~ msgstr ""
#~ "servlet 的 context 可被用來允許您 <literal>WebBeanDiscovery</literal> 的實"
#~ "做來與 container 進行互動。"

#~ msgid ""
#~ "The Web Beans RI can be told to load your implementation of "
#~ "<literal>EjbDiscovery</literal> using the property <literal>org.jboss."
#~ "webbeans.bootstrap.spi.EjbDiscovery</literal> with the fully qualified "
#~ "class name as the value. For example:"
#~ msgstr ""
#~ "Web Beans RI 可被指定來透過使用 <literal>org.jboss.webbeans.bootstrap.spi."
#~ "EjbDiscovery</literal> 以及完整的 class 名稱為值來載入您 "
#~ "<literal>EjbDiscovery</literal> 的實做。例如："

#, fuzzy
#~ msgid ""
#~ "org.jboss.webbeans.bootstrap.spi.EjbDiscovery= \\\n"
#~ "   org.jboss.webbeans.integration.jbossas.EjbDiscoveryImpl"
#~ msgstr ""
#~ "org.jboss.webbeans.bootstrap.spi.EjbDiscovery=org.jboss.webbeans."
#~ "integration.jbossas.EjbDiscoveryImpl"

#~ msgid ""
#~ "<![CDATA[public EjbDiscoveryImpl(ServletContext servletContext) {}]]>"
#~ msgstr ""
#~ "<![CDATA[public EjbDiscoveryImpl(ServletContext servletContext) {}]]>"

#~ msgid ""
#~ "The servlet context can be used to allow your implementation of "
#~ "<literal>EjbDiscovery</literal> to interact with the container."
#~ msgstr ""
#~ "servlet 的 context 可被用來允許您 <literal>EjbDiscovery</literal> 的實做來"
#~ "與 container 進行互動。"

#~ msgid "and tell the RI to use it:"
#~ msgstr "並告訴 RI 去使用它："

#~ msgid ""
#~ "org.jboss.webbeans.resources.spi.NamingContext=com.acme.MyNamingContext"
#~ msgstr ""
#~ "org.jboss.webbeans.resources.spi.NamingContext=com.acme.MyNamingContext"

#~ msgid "<![CDATA[public MyNamingContext(ServletContext servletContext) {}]]>"
#~ msgstr ""
#~ "<![CDATA[public MyNamingContext(ServletContext servletContext) {}]]>"

#~ msgid ""
#~ "The servlet context can be used to allow your implementation of "
#~ "<literal>NamingContext</literal> to interact with the container."
#~ msgstr ""
#~ "servlet 的 context 可被用來允許您 <literal>NamingContext</literal> 的實做"
#~ "來與 container 進行互動。"

#~ msgid ""
#~ "org.jboss.webbeans.resources.spi.ResourceLoader=com.acme.ResourceLoader"
#~ msgstr ""
#~ "org.jboss.webbeans.resources.spi.ResourceLoader=com.acme.ResourceLoader"

#~ msgid ""
#~ "<![CDATA[public MyResourceLoader(ServletContext servletContext) {}]]>"
#~ msgstr ""
#~ "<![CDATA[public MyResourceLoader(ServletContext servletContext) {}]]>"

#~ msgid ""
#~ "The servlet context can be used to allow your implementation of "
#~ "<literal>ResourceLoader</literal> to interact with the container."
#~ msgstr ""
#~ "servlet 的 context 可被用來允許您 <literal>ResourceLoader</literal> 的實做"
#~ "來與 container 進行互動。"
