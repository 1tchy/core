# translation of part1.po to Traditional Chinese
# Language zh-TW translations for Introduction_to_Web_Beans package.
#
# Automatically generated, 2009.
# Terry Chuang <tchuang@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: part1\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-01-06 11:30+0000\n"
"PO-Revision-Date: 2009-01-13 17:04+1000\n"
"Last-Translator: Terry Chuang <tchuang@redhat.com>\n"
"Language-Team: Traditional Chinese <zh@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: para
#: part1.xml:5
#, no-c-format
msgid ""
"The Web Beans (JSR-299) specification defines a set of services for the Java "
"EE environment that makes applications much easier to develop. Web Beans "
"layers an enhanced lifecycle and interaction model over existing Java "
"component types including JavaBeans and Enterprise Java Beans. As a "
"complement to the traditional Java EE programming model, the Web Beans "
"services provide:"
msgstr "Web Beans（JSR-299）規格為 Java EE 環境定義了一組簡化應用程式開發的服務。Web Bean 針對於現有的 Java 元件類型（包含 JavaBeans 以及 Enterprise Java Beans）提供了增強的生命週期與互動模型（interaction model）。為了補充傳統的 Java EE 程式撰寫模型（Programming Model），Web Bean 服務提供了："

#. Tag: para
#: part1.xml:14
#, no-c-format
msgid ""
"an improved lifecycle for stateful components, bound to well-defined "
"<emphasis>contexts</emphasis>,"
msgstr "狀態元件上的生命週期改善，並綁定至明確定義的 <emphasis>contexts</emphasis>、"

#. Tag: para
#: part1.xml:18
#, no-c-format
msgid "a typesafe approach to <emphasis>dependency injection</emphasis>,"
msgstr "一個用來進行 <emphasis>dependency injection</emphasis>（相依性注入）的 typesafe（類型安全列舉）方式、"

#. Tag: para
#: part1.xml:21
#, no-c-format
msgid "interaction via an <emphasis>event notification</emphasis> facility, and"
msgstr "透過 <emphasis>event notification</emphasis>（事件通知）功能來進行的互動，以及"

#. Tag: para
#: part1.xml:25
#, no-c-format
msgid ""
"a better approach to binding <emphasis>interceptors</emphasis> to "
"components, along with a new kind of interceptor, called a "
"<emphasis>decorator</emphasis>, that is more appropriate for use in solving "
"business problems."
msgstr "一個將 <emphasis>interceptors</emphasis>（攔截器）綁定至元件的較佳方式，以及一個稱為 <emphasis>decorator</emphasis>（裝飾器）的新型攔截器，它適用於解決商業上的相關問題。"

#. Tag: para
#: part1.xml:32
#, no-c-format
msgid ""
"Dependency injection, together with contextual lifecycle management, saves "
"the user of an unfamiliar API from having to ask and answer the following "
"questions:"
msgstr "相依性注入和 contextual 生命週期管理這兩者組合起來可讓一個不熟悉的 API 的用戶無須過問下列問題："

#. Tag: para
#: part1.xml:38
#, no-c-format
msgid "what is the lifecycle of this object?"
msgstr "這個物件的生命週期為何？"

#. Tag: para
#: part1.xml:41
#, no-c-format
msgid "how many simultaneous clients can it have?"
msgstr "它一次能同時有幾個客戶端？"

#. Tag: para
#: part1.xml:44
#, no-c-format
msgid "is it multithreaded?"
msgstr "它是否為多執行緒（multithread）？"

#. Tag: para
#: part1.xml:47
#, no-c-format
msgid "where can I get one from?"
msgstr "我能從哪裡取得呢？"

#. Tag: para
#: part1.xml:50
#, no-c-format
msgid "do I need to explicitly destroy it?"
msgstr "我是否需要明確地將它毀掉呢？"

#. Tag: para
#: part1.xml:53
#, no-c-format
msgid "where should I keep my reference to it when I'm not using it directly?"
msgstr "當我沒有在直接使用它時，我應該將它的參照保留在哪裡呢？"

#. Tag: para
#: part1.xml:57
#, no-c-format
msgid ""
"how can I add an indirection layer, so that the implementation of this "
"object can vary at deployment time?"
msgstr "我該如何新增一個 indirection layer 來使這個物件在建置時的實做可呈多樣化？"

#. Tag: para
#: part1.xml:61
#, no-c-format
msgid "how should I go about sharing this object between other objects?"
msgstr "我該如何在其它物件之間共享這個物件？"

#. Tag: para
#: part1.xml:65
#, no-c-format
msgid ""
"A Web Bean specifies only the type and semantics of other Web Beans it "
"depends upon. It need not be aware of the actual lifecycle, concrete "
"implementation, threading model or other clients of any Web Bean it depends "
"upon. Even better, the concrete implementation, lifecycle and threading "
"model of a Web Bean it depends upon may vary according to the deployment "
"scenario, without affecting any client."
msgstr "Web Bean 只會指定它所依賴的 Web Bean 的類型和語意。它無須知道實際的生命週期、具體的實做、執行緒模型，或是任何它所依賴的 Web Bean 的其它客戶端。更好的是，它所依賴的 Web Bean 的具體實做、生命週期和執行緒模型可根據建置的情況來改變，並且不影響到任何的客戶端。"

#. Tag: para
#: part1.xml:72
#, no-c-format
msgid ""
"Events, interceptors and decorators enhance the <emphasis>loose-coupling</"
"emphasis> that is inherent in this model:"
msgstr "事件、攔截器以及裝飾器可增強在此模型中所繼承的 <emphasis>loose-coupling</emphasis>（鬆散結合性）："

#. Tag: para
#: part1.xml:77
#, no-c-format
msgid ""
"<emphasis>event notifications</emphasis> decouple event producers from event "
"consumers,"
msgstr "<emphasis>event notifications</emphasis>（事件通知）會 decouple producer 和 event consumer（事件用戶），"

#. Tag: para
#: part1.xml:81
#, no-c-format
msgid ""
"<emphasis>interceptors</emphasis> decouple technical concerns from business "
"logic, and"
msgstr "<emphasis>interceptors</emphasis>（攔截器）可由商業邏輯去 decouple 技術問題，並且"

#. Tag: para
#: part1.xml:85
#, no-c-format
msgid ""
"<emphasis>decorators</emphasis> allow business concerns to be "
"compartmentalized."
msgstr "<emphasis>decorators</emphasis>（裝飾器）可將商業問題分為若干部分。"

#. Tag: para
#: part1.xml:90
#, no-c-format
msgid ""
"Most importantly, Web Beans provides all these facilities in a "
"<emphasis>typesafe</emphasis> way. Web Beans never uses string-based "
"identifiers to determine how collaborating objects fit together. And XML, "
"though it remains an option, is rarely used. Instead, Web Beans uses the "
"typing information that is already available in the Java object model, "
"together with a new pattern, called <emphasis>binding annotations</"
"emphasis>, to wire together Web Beans, their dependencies, their "
"interceptors and decorators and their event consumers."
msgstr ""

#. Tag: para
#: part1.xml:100
#, no-c-format
msgid ""
"The Web Beans services are general and apply to the following types of "
"components that exist in the Java EE environment:"
msgstr ""

#. Tag: para
#: part1.xml:105
#, no-c-format
msgid "all JavaBeans,"
msgstr "所有 JavaBean、"

#. Tag: para
#: part1.xml:108
#, no-c-format
msgid "all EJBs, and"
msgstr "所有 EJB，以及"

#. Tag: para
#: part1.xml:111
#, no-c-format
msgid "all Servlets."
msgstr "所有 Servlet。"

#. Tag: para
#: part1.xml:115
#, no-c-format
msgid ""
"Web Beans even provides the necessary integration points so that other kinds "
"of components defined by future Java EE specifications or by non-standard "
"frameworks may be cleanly integrated with Web Beans, take advantage of the "
"Web Beans services, and interact with any other kind of Web Bean."
msgstr ""

#. Tag: para
#: part1.xml:120
#, no-c-format
msgid ""
"Web Beans was influenced by a number of existing Java frameworks, including "
"Seam, Guice and Spring. However, Web Beans has its own very distinct "
"character: more typesafe than Seam, more stateful and less XML-centric than "
"Spring, more web and enterprise-application capable than Guice."
msgstr ""

#. Tag: para
#: part1.xml:125
#, no-c-format
msgid ""
"Most importantly, Web Beans is a JCP standard that integrates cleanly with "
"Java EE, and with any Java SE environment where embeddable EJB Lite is "
"available."
msgstr ""

