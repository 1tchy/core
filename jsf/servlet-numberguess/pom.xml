<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   
   <parent>
      <groupId>org.jboss.webbeans.examples</groupId>
      <artifactId>webbeans-examples-parent</artifactId>
      <version>1.0.0-SNAPSHOT</version>
   </parent>
   
   <artifactId>webbeans-servlet-numberguess</artifactId>
   <packaging>war</packaging>
   <name>Web Beans Numberguess Example (Servlet)</name>
   <description>The Web Beans numberguess example for deployment to a servlet container</description>
   
   <pluginRepositories>
      <pluginRepository>
         <id>codehaus snapshot repository</id>
         <url>http://snapshots.repository.codehaus.org/</url>
         <releases>
             <enabled>true</enabled>
         </releases>
      </pluginRepository>
   </pluginRepositories>
   
   <build>
      <finalName>${project.artifactId}</finalName>
      <plugins>

         <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
               <failOnError>false</failOnError>
               <filesets>
                  <fileset>
                     <!-- clean up files from war:inplace -->
                     <directory>WebContent</directory>
                     <includes>
                        <include>WEB-INF/classes/**</include>
                        <include>WEB-INF/lib/**</include>
                     </includes>
                     <followSymlinks>false</followSymlinks>
                  </fileset>
               </filesets>
            </configuration>
         </plugin>

         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <!-- don't stage or package files added to src/main/webapp by war:inplace -->
               <warSourceExcludes>WEB-INF/classes/**,WEB-INF/lib/**</warSourceExcludes>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>tomcat-maven-plugin</artifactId>
            <configuration>
               <path>/${project.build.finalName}</path>
               <!-- uncomment to use server configuration override; see readme.txt for details -->
               <!--<server>tomcat</server>-->
               <url>http://localhost:${tomcat.http.port}/manager</url>
               <port>${embedded-tomcat.http.port}</port> <!-- port for embedded Tomcat only (putting this configuration in the execution for the run goal doesn't work) -->
               <warSourceDirectory>WebContent</warSourceDirectory>
               <!-- if you don't want to use war:inplace, use this path instead -->
               <!--
               <warSourceDirectory>${project.build.directory}/${project.build.finalName}</warSourceDirectory>
               -->
            </configuration>
            <dependencies>
            </dependencies>
         </plugin>

         <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <configuration>
               <connectors>
                  <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                     <port>${jetty.http.port}</port>
                     <maxIdleTime>3600000</maxIdleTime>
                  </connector>
               </connectors>
               <scanIntervalSeconds>10</scanIntervalSeconds>
               <webAppConfig>
                  <contextPath>/${project.build.finalName}</contextPath>
               </webAppConfig>
               <webAppSourceDirectory>WebContent</webAppSourceDirectory>
               <!-- if you don't want to use war:inplace, use this path instead -->
               <!--
               <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
               -->
            </configuration>
            <dependencies>
            </dependencies>
         </plugin>

         <plugin>
            <groupId>org.twdata.maven</groupId>
            <artifactId>maven-cli-plugin</artifactId>
            <configuration>
               <userAliases>
                  <runjetty>compile org.apache.maven.plugins:maven-war-plugin:inplace org.mortbay.jetty:maven-jetty-plugin:run</runjetty>
                  <runtomcat>compile org.apache.maven.plugins:maven-war-plugin:inplace org.codehaus.mojo:tomcat-maven-plugin:run</runtomcat>
                  <explode>compile org.apache.maven.plugins:maven-war-plugin:inplace -o</explode>
               </userAliases>
            </configuration>
         </plugin>

      </plugins>
   </build>

   <properties>
      <jetty.http.port>9090</jetty.http.port>
      <jetty.debug.port>9190</jetty.debug.port>
      <tomcat.http.port>8080</tomcat.http.port>
      <embedded-tomcat.http.port>9090</embedded-tomcat.http.port>
      <embedded-tomcat.debug.port>9190</embedded-tomcat.debug.port>
   </properties>
   
   <dependencies>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
         <classifier>jdk15</classifier>
      </dependency>
      
      <dependency>
         <groupId>org.jboss.webbeans</groupId>
         <artifactId>jsr299-api</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>javax.faces</groupId>
         <artifactId>jsf-api</artifactId>
      </dependency>
      
      <dependency>
         <groupId>javax.faces</groupId>
         <artifactId>jsf-impl</artifactId>
         <scope>runtime</scope>
      </dependency>
      
      <dependency>
        <groupId>com.sun.facelets</groupId>
        <artifactId>jsf-facelets</artifactId>
        <scope>runtime</scope>
      </dependency>
      
      <dependency>
         <groupId>org.jboss.webbeans.servlet</groupId>
         <artifactId>webbeans-servlet</artifactId>
         <scope>runtime</scope>
      </dependency>
      
      <dependency>
         <groupId>org.glassfish.web</groupId>
         <artifactId>el-impl</artifactId>
         <exclusions>
            <exclusion>
               <groupId>javax.el</groupId>
               <artifactId>el-api</artifactId>
            </exclusion>
         </exclusions>
         <scope>runtime</scope>
      </dependency>
      
      <dependency>
      	<groupId>javax.annotation</groupId>
      	<artifactId>jsr250-api</artifactId>
      </dependency>
      
   </dependencies>
    
</project>
